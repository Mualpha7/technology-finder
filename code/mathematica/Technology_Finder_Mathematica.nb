(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    406736,       7973]
NotebookOptionsPosition[    397071,       7795]
NotebookOutlinePosition[    397895,       7820]
CellTagsIndexPosition[    397808,       7815]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Technology Finder: Code Design", "Section",
 CellChangeTimes->{{3.8032812386781654`*^9, 3.8032812443982267`*^9}, {
  3.8032814004108553`*^9, 3.803281468624863*^9}, {3.80328185791088*^9, 
  3.803281858128338*^9}, {3.803979669414815*^9, 
  3.8039797112965546`*^9}},ExpressionUUID->"95223eb5-12bc-4bb8-98d3-\
d08ca4772621"],

Cell[TextData[{
 StyleBox["1. Data handling\n2. Feature extraction\n3. Classification\n4. \
Maturity score\n", "Text"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
AMBXkIICyB1SUAAAAAAA4CtIQQHkDikoAAAAAADwFaSgAHKHFBQAAAAAAPgK
UlAAuUMKCgAAAAAAfMUVTUHT0tKcX2ZkZKSnp8vG2bNns+585swZeU1JSZHX
1NRUS1EysqHf1QL1Sy3hKpaYmKgb8fHxuiEdlXfVQW5oSChOnjypX170n4NP
IAUFAAAAAAC+4sqloOfOnUtJSZHyN23aNHv27MWLF69evXrt2rUrVqxYvnz5
qlWrlrvJm8uWLVuyZIm8s23btkWLFm3YsEFeZX95XzbWZGP37t0Wq6qrOxLU
CPTIkSPSJ1u2bJFelY2kpKS8rhcuT1pa2qxZszZu3Lh582a5/w8cOCBvJicn
53W9coMUFAAAAAAA+IorOhY0IyMjJSWlX79+JUqUCA8PL1CggJwoX758BQsW
DA0N9ff3Dw4ODgsLk1fZDnSTash3ZUN2KFKkiHw3fzamT58u5Uv9bVzotWD8
+PF+btJFNWrU2LVrV17XCJcnOTm5SpUq8s9B7nm5jsOHD5d72Bnm+xBSUAAA
AAAA4CuuXAqqz7aLTp06aXCXL18+3QgNDdVtf39/2cifP3+Am+V7fg7+2Xj5
5Ze1fOcD8ldx9iJtTEhI+PjjjwsWLKg9U6pUqQ0bNuR1vXB5jh49qre63Plh
YWFvvvlmWlqajyb5pKAAAAAAAMBXXLkU1GY77Nq1qxQupwgKCtIT6Sg4Y+mo
0ERF9w8ICLAvs7rWUlCXe+LTsWPHah9GRERUqVJl27ZteV0pXJ7ExMTChQsX
KFBA0/5hw4YxLygAAAAAAMCVdqXXiE9PT3/sscfKlStXsmTJEiVKFCpUqGLF
ilWrVpUv5VW2S5cuXblyZRsXqoloRETE9ddfL/sXLVq0bDautSfitZnvvvuu
5cAhISFLly7N63rh8hw/flzzT/2/gGHDhrkcA6d9CykoAAAAAADwFVcuBc3I
yNDliqKioubNm7dy5crNmzf/8ssvK1asWLNmzcKFC9etW7d8+XJ5f8mSJX37
9rXn30NDQ1966SXZZ+PGjbI/qyMpXQjpp59+ateuXZs2bdq2bSuddujQobyu
Fy5PQkJC9+7dW7Zs2bp16w4dOnz55Zcun80MSUEBAAAAAICvuKJjQS2i1HGM
8mpTIGpUoq8pKSlPPvmkPSYvGx9//LFz/4tynkK/PHPmzF9bfy+UmJh49OjR
mJiYuLg4aS9rxPuiEydOyOWTiyhX8Pjx4z66NJKLFBQAAAAAAPiOK/1E/H89
u2488cQTzjlCP/7440tPUaQQ5yjQrA/Ia8pkWVNcXJxuOFNTKeTs2bN6rMep
5Vse76SlpTkfYbZyTp8+rRsWB8mGjonVktPd7HS6YfXRLzX41d3kcPnS2VFa
5kVXFdeTWlXlwOTkZDvKWYhzDO15N93f5R5PqxWTBtr+sm31cZ5LDrE5LeVA
K/PUqVOuzAuhxeYiE9PSLObVDtfm24ms5+Pj4+0qJyQk6Hn1rrBWyPtWDS1W
v5RjdX89UMuR0+m1c7mTZ497zOj7dgqrmJSvDZcS7FaxDbtSHjOCZi0nKznE
GX1LD1jF9Eb6OyeIIAUFAAAAAAC+wqdT0OTkZE2uXO7wR760oMmZ4GlqJBua
d4mTJ0/mXGxqaqqGVJpludypTtYqnT592hml2g6JiYkeSWPWY7OmanLerBGW
M8mU+li7rBCpoeZ1+i3ZcO4mbbd4UM9o53WeS84inZP17FKyRbuaberOUprt
bOmxiHVzluAxa8Hlcsa/QntDNuQs1l67rNrJ8o70v1442V96QCNNjw5Rsqez
K/Qou6k0CrZj5UCtgJ7U7g2X4xLbRLXOONoZDGqI7Wyjs3pWppajt65sSz1z
mPBBrpF+928eVkoKCgAAAAAAfIXvpqDOcXRpaWnp6ela2t69e6Ojo/fs2eMR
jrnco/5sgKIz8Tt8+LCGSKdPn3bGqrohJTsro5GUDeC0IYtWHxusqCVYeGUb
suf+/fu1PprHavalEa7mXTbGzxm12SmSk5NtjKWOL3UGaxqdWQ2tH5Sc5dSp
UwcOHJA6xMTE6DhPPbUc6NHt2hCPNNjZ7Za4eqTEx44dc7mDUxsS6bpMGudq
rTRq9qib7KDDO6XHtm3bJhdRzmWZ7UWnR5Cijh49+uuvv+7YsUP3tLkU9Fx6
Cu0NS3rlTR0ia3mmy30b/PHHHytXroyKioqNjbUGyrE2qtbq6TzKWTcLqC0r
thG8zmtqG3ZNt2zZIq04dOiQvOMclvw3Z4+koAAAAAAAwFf4bgqq4aSOwTtw
4MDkyZM7d+7ctGnT+vXr33jjjdWqVatZs2bjxo179OjxwQcf/Pnnn/ZouY2u
TEpKsoTq7NmzNogxMTExJibm+++/HzRoUJMmTW6//faWLVu2atVq6NChS5Ys
sTxQTrpq1apZs2bNmzdv/fr1VqztoAmhtVHKnDlzZs+ePaXMbt26NWvWrGvX
rsOHD4+OjrbEbNeuXatXr165cuXcuXN/+eUXV2a6aPnnr7/++vnnn7///vvT
pk2bM2eOc+Blmtv+/ftHjRr16quvvvbaa1OnTrWI7MyZMzNmzBgyZIhc7rp1
61apUqVBgwbt2rUbPHjwDz/8oEMiXZmjWF0XBsUew0dPnz4tdZADpaibb75Z
OvnOO+/s16+flGOVkdNJVaVnFi5cuHbt2tyt4qRdOnv27Jdeeumtt96SV+nA
uLg4DTBPnDghLZXrIhWQay3XqFevXgMGDJDT6eHWOdLz0p9ye8vtIXs2bNiw
efPmcgmeffZZKVx30/RbZyRwHq7jbG1iWylcboM77rhDeu+mm26SbpTrKN0o
PfDYY4/JtdMn8aXmenN6PPOuX3722WfTp0+XPvzwww/lijt3kKN+/PFHaezo
0aOHDRu2ePFiS2ilvXLR77777jp16tx6661yh8upO3bs+M9//lPuQ71Gzn81
HjPoXgmkoAAAAAAAwFf4bgrqcuc8GzZseOaZZypVqqSHh4WF6Ya0KCQkpECB
ArIdFBRUpUqVJ598cvv27S7HE8rOCpjk5OTPP/+8WbNmAQEBWlT+/PmlBH9/
fykwMjLyvvvumz9/vuw5d+7cEiVKFCxYsEyZMg888IBGVfJqg/osWpTt7777
TsqUQqQoKUeKDQ4O1g2p5P333z979mzZ84cffijoVrRoUXnzwIEDzmelU1NT
33rrrYiICKmbHF63bt1ly5ZJJ9g+cnapW6FChbTmUrGjR4/Kd7/++utevXpJ
mdItgYGB2ijdELJ/27Zt582b53IM2rTKW7ymQxYXLVrUvXv3ihUraieHhoZK
/fWqFS9evE6dOtJS6cMdO3ZUr149PDxcCr/llltynoIgO0lJSXKBHn/8cTmR
9Juc4q677tIqTZ48uVy5cnaBtAJCeuaGG2547bXXXJmDYLdt29anTx+pp+6p
kZ2RSr744ou6p3NQpc29efz4ce38//znPz179pTO17vUek9I4fovSG6/5s2b
S908JiC1O036cP/+/XK7SqfJVZZDRo0apampKzMjHTRokFxcLV9uWj18ypQp
pUqVkk6QLpX3nWeXm6p06dIjRozQ8beGFBQAAAAAAMD4dAr6ySefNGnSRKPO
/Pnz6yrzwcHBlomZgIAA+e6dd95p4xXtOXHNqTQsiomJkU6w/DM0NFSDSi3B
3q9cufI333yzaNEii9TatWunTys7A0ndkJIff/xxy2YtuZLXggULSuWlWHm/
bNmyUubSpUut/nJddCpOHQuqNZw4caI1KjIycvv27fK+86n5devWaeHipptu
SkhImDVrVu3atfVNZwXkvEFu+uYtt9yyZs0aK8fWP7Lt9PT0Tz/9VPNP620P
UlqZMmWkkhs3btQ9pS0lS5bctm3b5d4b9kR8v379rPfuv//+I0eODB48WM8u
V8dZDc0VtRpSBzl21apVtWrV0stkF0u+K9tSmr3fv39/Zx9KS/XUmgBLTZ59
9tnAwEANn+Wk2mPSNA1FVbCbVkOu3cGDB12OxadsPK3cb5pkas3HjBnjynxq
Xm/FRx55xMp86aWXTp8+3atXLzmX7K+3utL40dl8uc3krtYxqH/PGkmkoAAA
AAAAwFf4bgq6devWunXrys4RERGaPoWEhDRt2vTuu+/u06dP375927VrV7ly
ZS3QErAmTZrs2LHDlfk4vBalAWZCQoJUQ2OlwMBAy5cqVKhQqVIl/TIsLKxw
4cKyUbVq1QceeCA8PFy7rkuXLjpo0CN9Onz48MMPP1y0aFGNraQysn+hQoWk
qlKC1s2SyXr16nXt2lVOERQUJN+S62LryLsyH9AeP368jkqV18jISH1qXsnO
qampq1ev1qBPVKtWbfjw4VWqVLHcTF5r1aolzdEgTnvGssQePXr8+eefLkdk
51zL/r333tOYUXtbukhOIe+ULFmyVKlSchUsfJZ3evfuXb58edmWE918881b
tmzJ9U0yZMgQv8xhnG3btpWStT+lAtJ10gk1a9bUi6KRtVaybNmy77//fsOG
Da2ZUpPQ0FB5X2qrb1rELRszZ850Xbh2ks0H++677zovkyhWrFjjxo3lot/n
duutt8o7zh3kRMOGDdOkXQu0Lj116pTWUIenjhkzJiUlxUbeisGDB2vrpFY9
e/bUobDak/p+9erVtW8tCr7++uu1jdJknb/U4z68QqEoKSgAAAAAAPAVvpuC
Pvzww5p9qTZt2nzzzTfbt28/c+aMLjFz/Pjxbdu2jR8//pZbbrHIKDg4eOTI
kRpM2dJC+uCwhl2iRIkSGq7KKWbMmLFixYqoqKgtW7ZMmTKlR48eGoLpnmFh
YRoBdejQwcaCWnp2+vTpSZMmaWZoT2137tz5p59+Wr169c6dOxcvXvzll1/K
WXScoV/ms9V6OVq1aqWr/zjnlnz77bf11NKc8uXLb9q0SRfusR02bNhg+Z6U
qYmfnF3qPGzYsCVLlqxbty46Olp6Rjq5Xbt2NqxRGyJ1c2WOj7WnucVXX31V
oUIFLVMLv+222yZMmCA988svvyxbtuzbb78dOHBg8eLF9dF1KVYb7ud+MP+P
P/7I3e0hl1KKtRCydOnS+jC4fHnPPfd8/fXXcnZp0Zo1a95///3w8HC9yvrE
utREx9kK6UzZQeop13H9+vXS7XpXaIvktUWLFidOnHBlGc0rl6ls2bJSrI3z
fOyxx6Sco0eP6hP0J0+ePHXq1MqVK/v06aNzEWhPyv0jV8eVmYLqrS7NOXLk
SGRkpN23r7/+uk5JqkGlbA8ZMsTyZL0VdXhwvXr1pk2btnnz5rVr1+7Zs0fq
MGLECL0oqkCBAg0bNpQ7X24Jj6keSEEBAAAAAMA1zvtTUM2abN1t/XL//v1l
y5a1FPT++++PiYlxOcYu2uHHjx9fvnx51apVNR/Lnz9/48aNdRpGWy9JXtes
WaPzTGomVqJEidmzZ+uaPlKUzRgZHx8/Y8YMG0gptdX9u3XrJue1BZLUqlWr
IiMjNRXUMPCzzz5zrtiekZGhX06ZMqVQoUKaJlksedddd9mK567MIMuiWtlZ
CtQxlpZxyYaOBbUYTQNbucTbtm3TzpE+1FzuzJkzJ06c6NChg7Vaynz00Ue1
KGm1rVy/d+/epk2b2oQAUtVXX31VM0OXOy3UCsTGxq5cufK2227zu9CNN964
c+fOXNwe2u2DBg2yFmnnFClSRPrB5hq1O2ThwoU2JFVrq/Ogjh07VupmN5s2
/48//mjSpImWLLtJR61du9b5XLxezU8++cTKkY0PPvggMTFRi9KrY+vXy5tj
xoyxq1OgQIGhQ4fa6ZTsc+rUqaJFi9oFGjlypF1BHS8ql0BTbhtcGhYW9uKL
Lx48eNA5n63uPGvWLM1UNaSVm23FihVZT5qLzr8UpKAAAAAAAMBXeH8KqgGR
c1xiWlraF198oY9F64PhGzZs0B1SUlI0/5EN5/rpAwcOtEzpxhtv1ATPuWr8
U089lT9/fo2SIiIiJk6ceOrUKUsXrTKyc1xc3LRp08qWLWtRmxwlfRgfH28r
iQupzzPPPGPjIUuXLv3BBx/YHKTOpepd7kfyv/rqK31Q+q9KQS20bNas2dq1
a52LKGnDtaN+/PHHChUqWOd06tTJUj4dJSsbY8eOtYfHpUXDhw+Xzsm6wpTs
LA35+eefmzZtqjvrQ9+VKlWKjo7Oxe2hQd+AAQP8HA+kFypUSDpBs0fdx5ov
b/bo0UMbbhWW2u7evTtrsWLcuHE2VYIc9dlnn2mELv0j94+2S0ei6mQCckU0
enU+wK70yh48eNDmH5A7U24q5+m0i3JIQfW6WApqMfILL7yg55XdpGK6s14+
eX/o0KE2CDYwMFD+7dhYUL3iV26OUFJQAAAAAADgK7w/BVXOzDA2NnbixIk6
Ns/f379+/fo2RjQrHan41ltvWYxWqVKl33//3bmCTFRUlA4E1dTurrvusrNn
3VD333+/hVRBQUHt2rWzsZFa8u7du/VpdH3YvEuXLvbgs4ZdNuzQat6xY0cb
Afi/p6BaTrFixXT1eamVjQ/0GC7brVs3a0ujRo3++OMPS8/kEKmevKk5ZEBA
QL169fbs2WOnsz2doyiltzUZ0/6sWrXqb7/9dtGrkzOtsK6O5FyIynkubYv1
4dixY23qAz/3EvB79+7Vb8lRHgGdXCNbbF16bNSoUR7Fyp126623ak/Kq+1g
w1DlmsbHx0uxNrfnbbfdZpPKDho0yOVYYsl1aSlo//79nSloy5YtDx8+rKdz
XkRb/33btm2lS5e2Lho2bJjeadqBV24gqIsUFAAAAAAA+A7vT0FtmXIdQuly
x0qrV69+8sknR48ePWzYsBkzZugEkpZEJSQkaPRkD8jLPromuLyWK1fOkjE1
adIk/ZaO+tOFclzubM0WUbLFvjViWrBgQZEiRXT0nZ9jdSRrkZzRosXIyMip
U6dq/Z0Jnss9hlDe1LRz6dKlJUqU+GufiO/Ro4d+S4vSkYT2/LU+j//iiy/a
YMvq1avv2LHDmf0uW7ZM13XSsbLDhw93OUaTWnulZBv0GBUVpcGp1uSmm27a
t29fLu4NrWfv3r0t4pPS5GLp6XQ4qNVEH/b/5JNPpCEWIcp9pbeEc/CtFisl
HDlyxKZ4leuoQzedebuUOWHChDfffPPpp58eOXLkxo0bPUJF55faaffcc48N
AO7fv79dcbuLckhBtQQ5yuaGDQgI+Oqrr/RiOcc2a5l6+aTC1apVsy7q16+f
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
sa0XbzXUahw+fFjfketVqVIlm6WBFBQAAAAAAMBL+EoKamJiYnr06KEZkVS7
efPm8fHxtrNz+XKbinPnzp2tWrXKLgWV13feeScwMFDDnLCwsPHjx+cwFtTl
DjktidWu03TO5Vj5aPLkyZqGBbu9++67GnXaMknOaCstLS0lJeXpp5+2Ar0k
BRXz58+PiIiwRPepp57KOSUWkyZNKlSokF/ms+TVq1f3odWR7Ls///yzc2Wo
qVOnutw3mFws3U1H/7oy5weQiy73rY2qJQW9QicFAAAAAADIBZ9IQZ3pSkpK
yl133WVJYLNmzU6ePKnj906dOmU7W1Ql3502bZqFTllTULFo0SIL+oSWmV2d
09PTV61aVbZsWR0+ql334IMP6pPgtgr80qVLdWpQjbNat26tD/XriFApRENa
/VJqu3LlysjISC9MQU+cOFGxYkU9aWBgoDR89+7dOaTER48erVu3ru6v84JW
r15dDslu/+zk+byg69evlw4MDg6WVgcEBAwfPlze14Y7n4XXey8pKUkuaMeO
HbWezAtKCgoAAAAAALxKXqWgGRkZZ8+etefHhw0bZguRawpqu7nci87YgcnJ
ybKz7KZzTpYqVWru3LmuzMzHciHZTY+dNm2ahXhaeGRkpI1m1IxIdn7ooYfk
WxEREf5uTz/9dFxcXNb10OWdLVu2NGzY0FJBDaxat259xs32PHbs2MCBA22f
0NDQJ5544tChQ/pdj4x369atjRo1kt0KFChgoy7btm2rrdD1d1zu8O29997T
AmWHsmXLbtq0SYeY2lPqS5cutdV8ypUrt2DBAn3fJiB1Xbj2U2Ji4uTJk+UQ
nRZV+nPJkiW6m1Vy5MiROq41JCREXu+66y57Btyjz+X9Tp06acQXHh6u9axX
r15UVNSl3BVZyVUYNGiQNlleW7Zs6Rz6q+u5O/f/8ssvNT8UxYsXzyEFlRtm
z5491atX1xtPLv3gwYP1W5aBV6tWzeLcVq1a6XBffdVutKG/Wk85tXa+dJdc
8e7du2slNfHW3j569KjdkFLsiBEjtDI2S+3jjz+u10KKyrm9epQc0q5duwA3
OapLly4W0mqZztvyr0UKCgAAAAAAfMXfn4JmXX49OTl50KBBmgtphDV16tTz
bjZy0uXOVXTjyy+/1GFvRYoUkY2bb7558eLFur/LPSpPI8Fff/31qaeeKly4
sBYrO1vQt2PHDqmG7qZlzpo1S4cFWtYnVZo/f75WQEqWs0dHR3/88cclS5bU
wYF+jhWaevbsqdGTlKlDUsXMmTPLlClju0mx991338KFC/Wp6vj4eNmIiYmZ
NGlSnTp1LDa0fmjTpo3Gv5ZwSke99dZbtoM0xNZel3pKDaWeixYtkp4JDg6W
k5YuXXrOnDk2gtF5Cc666ZefffaZxoxCDtm+fbu+LzvogWvWrGnSpIldHXHT
TTf9/PPPGupK+VKgtPo///lP69atixYtquFnaGioxqG1atXauXPn5d4nmv1K
ozRM1rN36tRJOs2ao03WbX0+/YsvvpCGW2Y7e/bsHE6xb9++SpUqWZ/37t3b
Spa2y6W5//77LccWL7744q5du+xaaMZ44MCB5cuXd+nSRVutN49q166dDfK0
JaVOnDhRvHhx22f48OHSCr18LncK2q9fP+c9kF175U1L6XWhLtk/KChITurx
T0xz8iuBFBQAAAAAAPiKvE1BLSrRKTF1JRrZmD59urOG9qpj6g4ePNi8eXM/
h5o1a44ePfrnn39euHDhrFmzZsyY0bVr18KFC+vslMLmBZWWBgQEDBo06OOP
P5adLSBKTU2dOHGi5l1Fixa1jdtvv33AgAFPPfVUt27dqlevHuIm36pSpcqt
t94qu0md8+XL1759+2PHjrnc2ZRz6Ob48eP1vPq8uWyULFlSKtOnT5+XX365
Z8+eFSpUsNSuXLlyd955p6Wmbdu21SfinYHSe++955e5YnupUqWio6NtGKFa
unSpdYsU6xwMqVmuNNmeldbXyZMn2yHSos2bN+uYQ6m/fFeHPi5evFhHMBYo
UEBnD5C+bdiw4aOPPvrCCy/069dPtsPCwrSQsmXL3nHHHaGhofpEfK1atSw8
vHQW/Q0ZMkSH/kq3tGnTRvok6zpT1gM//PCDppF6oVesWJHDKQ4dOlS+fHnZ
U++6xx9/3JV5f8rZz549u2DBAl0DSxsid1S7du2mTJmyaNGi2bNnf/rpp3IR
7733XgvDZeemTZtWrlxZL2KlSpXeeeedqVOnbt26NT4+XmNn6X/pQDtkzJgx
Hu194oknbKiz3A85tNcOkTtKDpFbQm6Mzp0765u29lbWKRH+KqSgAAAAAADA
V/z9KaitB6SJnEY0jz/+uJ/7sXGNhqZMmaIjPzXnsbTHHvVduHBh+fLl/dxP
DeuwTFWyZEl9qDxfvnzFihXTN6VwKaFJkyZBQUH2tLg+47xt2zbniNOJEyeW
K1dOd5BiNftS4eHhdqIKFSpMmDBh/Pjx9s7dd98dExPjbKa2S5r573//27nI
jrIn34sWLaqFXH/99ZMmTZKd/TKf3O/YsaM9mi29oQs/jRs3Tof86RyeGzdu
dLkjXJ1hwOUetynfioiI0BB48eLFrgsfhLdIzVKy//znP7K/dH5YWJhUTPrE
45JpritF6RPilnZafqgdLrWStsh5pRUffvih9V7Dhg2jo6Mv9z7RsY5SyV69
emmia6mgjWK1fE8uoo6b/fbbbzXL1WGrcp9kV740SmpVpkwZHbbq5x79q5Gy
zuCqnnvuOW2jjQiV/aWXihQpogGpktMVL158wYIFK1assCvolxnsjxw50pLn
2NjYkJAQ6RwtcPTo0VITubhyb+vZ+/bt6+eYFzS79moT9NLccccddiu2a9dO
93GOo75CSEEBAAAAAICvyKuxoLbgS2pqakpKij4FrLlQcHDwRx995DH/oR6i
AYt+OWPGDH3aXRch8nNP7agBlOVv1atX//TTTxMTE8+ePfvCCy/oA9pFihTR
HW6++WadIFQH/um55syZ06FDB1ssSUrT0Z6WXtauXfv777+XVrz55pt+mesQ
9erVy+VYoV7H7Fne+M0333Ts2NFCM02NLPIVUuZ3330ne44ZM8b64cEHH7TV
kWwA7dtvv21HVapUac2aNR5dOn/+fNshICBg1qxZNljUFqbXGlqTx40bZ4dI
z6xatcpqLodo4bKzVGbPnj2DBw/WkZa2HI98af0THh7+xhtvnDp1atmyZdY5
d9xxRy7WiDePPvqoVa99+/bO+Vo9UkHtamfztVezs3v3bpuiUzzzzDPWJ67M
7PfQoUNPPPGE3g9yXeSqWcLp586B9faTfXRVqZiYmIYNG8qpbWCzGDp0qAb4
sbGxR44c0UkD1MiRI523uvS2pr6qVatWObdXtWjRQvf39/e/8847T5w4Yd+y
xcIuv+P/O1JQAAAAAADgK/7+FDTrotVSh08++aRt27ZdunRp0aKFvM6ePTsu
Ls4GKypbI8nCxg0bNjz00EOFChUqXry4jhXUMZbXX3/9bbfd9sorr+jElVpI
enr6Sy+9dNNNN+lj8mFhYY888ohzsGVKSooGOPLmDz/88NRTTzVv3rxChQo1
atSoVauWvN57773vvvvuH3/8oYfouvYRERFBQUG9e/d2uZd50hNp5JWammpp
1alTp7799lvZrWnTpjfffHPdunUrV64slbzvvvs++OCDP//8U/ZMTEzUmQE0
BX3yySft4XrLsmbOnNmhQwfppTZt2gwYMGDr1q0ux/BOIe9IPe+8807pzx49
emzevNk6WVgbXY7RqlIxKfOee+7p2LHj/fffHxUVpQ2Rk+oKVs6xiNK6tWvX
Dh48WMovX7689HydOnUaNWokVXr99dcPHDigx37++ed2Odq1a+cxUPZSaHYt
rxMmTJCKtW/fXs44dOhQ6RNLxS0VtLYsX75c7mfZU/pH+sFjvXsPe/fu7du3
r/SV7CyVnDZtmpxOi4qNjbV7T268KVOm3HjjjTafZ5CbbFSsWPGOO+6YNGmS
VklnRZBOkNLCw8M1kK9Zs+ZHH31k10juSbnosoMcKN0+ffp0PZE0VvY5c+bM
uHHjpL133323tEL+SWbXXrs08s/hhRdekP6RMqXA8ePHO8eyZl3h6y9ECgoA
AAAAAHxFnqwRr6maPd7uylzaxuVOn2wApAd7tjctLc3SvMTExJUrV06bNm3U
qFHDhg2TJowdO/aLL77QpPTkyZOanWomk5CQsHfv3p9//vnbb7+dP3/+b7/9
ptN4WjAopdlMoXIK+fLQoUM7d+7UlNKVOT5QKilNGDp0qGZigYGBcl5b8t6j
ac5tqcbhw4e3b9++Y8eOY8eOHTx40FqtOzzwwAM6iFFeX3nlFZ3JU79liahy
hpOymzTEEjzZ05ba0ZOmpqbaKewQaalz6KPLHfc5AzTjXF/J8kY5/MSJE7/+
+mt0dPTRo0ed10gK10GtOodqp06dcpHFWcPlXFqs9qTVxNbDcl0YrWsTpGnO
ns+ODZKUvnKONLZV3W2B9SNHjsyZM2fChAnPPPPME088MWLEiClTpuiqT3Jq
i+gtDt28efP333//2WefLVmyxHJ7K9NuFa22vOMcfyt9K1/qFc+uvR4Nkfbq
NbVz6QjnKzQKVJGCAgAAAAAAX5EnKahGTLbCiy0B79zHVs3WbUu0LG7S1Mje
1/TSGRk58x/ZtoxL97QD9SxJSUn2jkcSaEvSOJ05c0b6LX/+/PrQ94QJE5y1
sohSzmWhkNXcySI+LbNTp072yPzbb7/tunBeRynNxrVaT3o8T63ndQ4adB6i
E7E6D3EuUG7HasishVi32IbldVKmFSU7ayfrFJ2vv/66TaR53333ZW34f+Vc
FcvJ+VS4x3d1flTnkkAXDXWt8s5Vh3TDmc/bIvU6JtblSEStS6U/LZ3WVeCd
6bTOa2qn0GKtG7WGmvlbozxyS+f4T4/22g3vccWzttqWp//LkYICAAAAAABf
kScpqFfRUZRHjx49ceLE8ePH//zzz6zRmTNi0tBp7969lStX1uXdAwICvv76
a+eeKSkpsttvv/0mZR46dEhnxbQH/DVYs8GlGovJl/v3769fv75f5gSnM2fO
dGWGXXlL6i/9Ex8fHxUVZQGsxVzOhE0jQenAnj172uSWb7zxxhUdkYi8QgoK
AAAAAAB8BSmoWL58eVhYWJkyZQIDA6tWrarxo+vCsY42NjIxMTElJeXzzz/P
nz9/6dKlpd9q1aqlj4Q7RwZu3LixWrVqoaGhZcuWrVix4pdffukcGagLglsF
5Ev5rpxXL4S/v78ce/LkSd3H41n4v1lMTEyjRo10BfkKFSqMHj3a5e4NHSHp
HK+rG9IJUVFRFo5Vrlw55yWK4LtIQQEAAAAAgK8gBY2Li9u/f3+1atV0vRvp
ihdeeCEmJuaiMY6O2zx8+HCLFi00/AkJCRk4cKAGlWlpafrYu+x24MCBypUr
23jIwYMHazrkXHbH5Vjp6ffff2/VqpWuvOOXuei8rc9+xXshe9KWNm3a+Pv7
66jXxo0b62SYHnSAq2737t1b9teG165dO29TXFw5pKAAAAAAAMBXkIK63EHf
888/b4uzFy5c+LPPPtP3LcGTbc0kd+3a1blzZ4s3CxYs+NNPP7kuXIxbtx97
7LH8+fNrmUWLFv3kk0+0hOTk5ISEBOeKQrt37x44cKCVWbx48a+++sqelHdd
bDWcv9PkyZOtboUKFfrXv/7lypxo9Ny5c6dPn7ac9sSJE88++6zuGRwcLK8T
J050XeGVypFXSEEBAAAAAICvIAVNSko6efLkzz//HBIS4u/vr3NyyuvAgQMX
L14cGxt78ODBY8eOSUdt27btlVdeadSokXSX7Cmv+fLl69evny7Ofu7cOY+s
8ssvv9S1k3TN92LFivXu3XvlypXHjx+Pj4+XAmNiYjZv3vz666/Xq1dPdggP
D9cL8cQTT1j6qqvn5G2mFBUVVbVqValYaGhocHCwVPKWW26RHtuzZ09ycrKO
gN25c+fYsWPbt2+fP39+ba+466675Fs2CSquMqSgAAAAAADAV5CC2npGo0aN
8vf3z5cvX3h4uHPoY926devXrx8ZGRkYGBgaGmqjHGW7ZcuWMTExrsypO9Pc
dNV7TYEmTpyoh9ixUn6pUqWktFq1ahUuXFjeDAgI0KfgQ0JC5LVr1667d+/W
ukmxHovC50n/SOdMnz69YsWK2idSbekWaVHBggXLlStXvXr1KlWqFC1a1MJP
JQ3csGGDjgIlBb0qkYICAAAAAABfQQrqcjyv/fLLL+sgT6FPsutEnbYtwsLC
NNW8//779+zZo8+tu9xpoWV9sq1lnj17dujQoUWLFrXD/d2Cg4OlWJs8U/PP
AgUK9OvX75dffnG5Y08pTWcZzXDLg35xs+XdJ0+eXLNmTb8srBWaDOvY1+bN
m+/YscM6wXoJVxNSUAAAAAAA4CtIQZOSkmy6Tnn96aefBg8eHBkZKR3ifLg7
ODhYs0rRvXv3jz76yOWIT20jIyPDYkN9mF3MmzfvySefDAwMDAoK0sgo0M0v
cy0kOYuU+c477zgrpsmnvObhQFClYaxYvXr1v//97ypVqmg/6PP+SpqjX7Zu
3Xr06NE6ilVq7uwQXGVIQQEAAAAAgK8gBVXOuSvPnDnz22+/TZs27bXXXuvb
t2/79u3btm37wAMPDBs27J133tm1a1dMTIwtWpSamnopKaWU+csvv3z++ecv
v/zyww8/LH1+9913d+vWbciQIe+///769etPnjypT9Nf2Xb+z86ePRsdHf3j
jz+OHj164MCBHTp0aN269T333PPYY49NnDhx7ty5CQkJycnJ3t8Q/O9IQQEA
AAAAgK8gBc06ZaXzUfRz587ZbJ/yvrwj37qsFc+zxkHyTkpKihQir2fPnvXy
OTPtYXxnQ2JjY13ux/alCRogS3O0IdIi6S6PRnl5G5E7pKAAAAAAAMBXkIJm
97x2SkpK1gGNzpk/nXN15jBvZ0JCQmpq6rlz5+T17NmzVqYzXdSZMy9xWGle
yXmoqgahF93BOWMqriakoAAAAAAAwFeQgjrjmnNuzu9quKcxpr2pD8Lb6EdX
jimoR2l2iK8Eg1ZPDXLl1VJN7RxNR0m9rkGkoAAAAAAAwFeQgmqm5wwnnXOE
euyWi2xH89K0tDQt9qIl63P3Olg0d624cqRiWTPerP2gnZOHa9nj70cKCgAA
AAAAfAUpqMs9v6XHo9y6MrtHpqdxpcexOlnopZ9LA09NRLMOPfVOmgBn7Q2P
3aRdXpji4sohBQUAAAAAAL6CFNTlTmxymPEyh/TPksycMx/nDjlMknnRlNVL
2FBYXSXKldkPWQNShoNeO0hBAQAAAACAryAFdTmSyZyX+LEVkS46NvJSyndd
LAXV8NNrHyf3mBPV6qlxqEdXXLQJrI50tSIFBQAAAAAAvsJXUtCUlBSXO5Gz
uDLjMllRcmx6erpzuXYvZCFSdkvYXzWspUlJSbqRmJjo8S257vpd0lSvQgoK
AAAAAAB8ha+koLpGT2JiokaXuQgw5RA53KI25YVZjY4L1XWU7HH7qzj9s4Da
2piSkqKtTk1N9RhlehX3gy8iBQUAAAAAAL7C+1NQzcSyvp92mTwO987Hz13u
+Mgj68vd2vS+Ra5yenr6RS+TfItFl7wTKSgAAAAAAPAV3p+Cmri4uKSkJB0i
mIvD09PTk5OTdVrLhIQEfcTem0kzr/rH4V3uZsqr5pxyaTSylgutA3edCTBr
0HsbUlAAAAAAAOArvD8F1SRQ8zHn+7meF9TJpqD0HvoweHJysn4prdY1m/K2
Vleax0wFHjRYuxYyYd9CCgoAAAAAAHyF96egLnclV61a9csvv+zYsWP79u2y
vX79+l8u0+bNm+XYLVu2rFu3bvXq1StWrNizZ09et+zikpKS5syZs3TpUqnk
woULLRG9iiUkJGRkZKS6ScM3bNiwcePGRYsWnTx5Uq5+YmKifJdgzduQggIA
AAAAAF/h/SmoxmKlSpUqWLCg1DMkJCQ0NLRkyZKFLlNgYGDx4sWLuklRUk73
7t337t2b1+3zdO7cuR9//LFw4cJ+btLS2bNnX8VBaEpKinOBpC1bttSoUaNI
kSJysSpXrvzVV1/Znmlpad4/j8E1hRQUAAAAAAD4Cu9PQcWKFSukeoGBgfKq
kYtW+LLIIXpsQEBAcHCwbLRo0eL48eN53biLWLRokTZWRERELF68OK9rdMWl
paVpFrpjx47w8HBtu7+//5QpUxgF6rWuyhRU7rfzDl67jBoAAMBVid/BFD0A
AFeCT6SgixcvtvxT40FLQfVLy830y5CQEP1SN/Lly2eHSCGy4e/vL9vNmjU7
ffq0x7n0oWzdPnfuXHp6unPF9kvJduRwOUq3deyi/ijXd+RbF/2J5pzCdM2a
NVptUaRIkYULFzrroIVnzQadxWqSo6XpAkO280WHleqqQ87fN/TAHJqZlJSU
tSHZJZYe07pKF9luWoidetu2bcWKFdPLV6BAgalTp7oygzXnhk6damU6V03K
+luTvCOdlrtczjrQdeF1dHapfkvfcZ5amikV0/r817NLDX1u4tOrLwWVal/0
t+7LnYUYAPLkQ8wL5fV1AOB7svsw+Zs/vvJcdv8vn9fXB4D3yu6DIi8+w7yX
96egaWlpK1eurFixYpkyZQoWLKjPs5csWbJ48eJF3EJDQytXrizvewz+lH1K
lCgRERFRzK1w4cIhISHh4eHyjrwfGRnZtWvX3377zeVOqzyey/YIADWhyvnm
iY2NtfDTySMcyy6Rc96iF01Bz5w5kzWSzcg+q7zoWWxnOVCanN2iS3Ksxnc5
tNfKkZ7RimnTPFpkX8puHiGhy51eZlxmChoXF5fzWlE5//fxf/0EsDwza20v
UXYXxbnefQ5nl45KSEiQqyM7O9NdL3S1pqAeb/JTAwAAIE/wJ7wry19VAID/
hfenoC730jnffffdrFmz5s6du3jx4jlz5ixbtmzJkiWyvXDhwh9//HHBggVj
x44tWLBgYGBg/vz5IyIibrvtNjlk9uzZC9xkz+XLl8+fP3+Zmx61evVqO4Uz
+rD/dMt1hdPT0xMTE1NSUjTU8vixJV9eNC/NOQW13bRAi9R06Kl+qUmjR01k
Bw0qbWiiR0Aq26mZdEl6Z5VybmkOUeFFf2nJuv/lpqAex0qLnEMos1Ym64jZ
y/otQq+gjZVNd7OedGXeLZqaelwmHUvsHBucM8aCeo8MxyBqHb8NAJclrz/G
vEVeXwcAvsfl+E3sf/yj7KqhPWODPQDgovL6s8o3eH8KmpycrFmEZUQ6iNFj
mNzmzZuDgoJsIGjHjh3tHtAMUPMo298eQE5KSrKSPfbR1MtZTkJCQs61zSHv
co7kzOGneUY2KagFcZYvSVUvOm7N9snI/Fl50bPkUAHbznnUZXYRaNanNrIe
aKNAMy4/BZVayVXz6Oqsozd1W3PdjMwpAi6l+ZfYOZfIeclyuO7SHBuQrLer
HJWYmHi5p/s7Xa0paIbjF297BwAuS95+jnmPvL4OAHxPdh8gefhRlic8hlhk
uKfY4n/nAeRCHn6UeSHvT0GNxZ4aJ9r0mPrTYceOHUFBQcHBwQEBAdKcu+++
25UZxWQdDWhFZWQZl+h8Gvpy//PRY65I/TnlLNw2ckgXMy5hLKhu6JspblKg
sy06vNNZrI1j9BgIqhGxy9FLsmdycnLO+acHDWm1DtqHWQeU2omcR7kuPwXN
OuRVG+W6MGPMcA+4dR7oHOZ6KYMzMy4MTvUsHmOGk5KSnHOcujIvbrJb1iTw
ErPB7CaP9TZXcQrqE/0PAABwLbiUeaWuPvw6CgBXgvenoDpHpfzgi4+Pz7qy
j+ZvSUlJuo68admyZUpKirzvuljkZYlcQkKCli97OgeXyons546cQnaLi4vT
pY7+K6mqRyypQ0ydiZw9y5D18OxSUK2w1taVZR0i7YfsJi/NuszTRVmPWbVz
GPvqbF3WR7n1MfCLzi/qvBwW9+XuifisjbLn0PWe8egEq3MOGa802cap2lmc
94Zz/Sxn4VljXteF0Xd2Z7Ri7SzWG17+y8/Vl4JmnXJBb+90ALhMefU55m3y
+joA8D36R43H8IZr9rl4/TPQFmLQ304BIAcXXe0CxvtT0IvKGvetXbu2UKFC
mhwGBwd37tzZMiVN5M6cOeMcBarSszxVLSXHx8fHxMTExsZedDn17DhTU3tT
ijp9+vTevXu3bt26Z8+eQ4cOnThxQjO07AYnZ5eCOh/bl+2TJ09KsVKmnMLj
SX+77XXbo9/SM8fQpqSk2Hf1yWtp8oEDB6TClxLB2bHOa6Ehalxc3L59+3bu
3Ll9+/bo6OjDhw/LuaRYm8jU8mTrgUtPQTWg1ktpUZsuJyQnkpNKCfIqFZAr
Lt+y8zrLuZSMTtNU29P5cHp69uu521hQ14WDgbPO4XDRM+rUrF6+KJK5ulNQ
/Tci/yiOHz9+AgAuUx5+lHmVvL4OAHyP/Oolv8DL797p1/b/KOmfFfK3nvTJ
UTfpGfkbMK+vDwDvdezYMfmgOHXqlHx0aODj5QOr8oT3p6Aap2gGZcGXTZJp
13ThwoVFihTR9CwoKKhjx44xMTFZ0zwpR0uwhFN/vMbFxS1dunTkyJH33ntv
s2bNGjRocOutt7Zt23bIkCEzZsz4888/decc4ikLf7R8ueWkSi+88EL79u1r
1qxZokSJ8uXL16tX78477+zfv/8bb7xxuSmofEvu5y+//HLQoEFSSP369evW
rdu0aVOp5D//+c/Fixdr6OesjJEfoLt37/7qq69effXVt956a86cOYcOHdJv
ST0XLFgwfPjwDh06NG/evFGjRtJ8uSWk4T/99FMOYyYt5rLfT+Qf3bp166R6
d999d506dcqVK1e6dOmKFSs2bty4S5cu77///tatW+1YW1rofxkL6nJnsCtX
rnzttdfkpHLVypYtK10tp5b+6dat2zPPPCMNt57x+G/l7K7jrl27PvroowED
Bsi1k6647777pFFyG0jdrD9///33TZs2LV++fP369fv379eOkvJ37NjxxRdf
jBkzZty4cR988IHcVHb2nH+Rkz2nT5/+9ttvjx07Vs61fft2718s6epLQV2O
m1M+QO65555bbrmlQoUKN9xwQ5UqVSpXrly1atVq1arptrxWA3DNq169uvyk
k88E2WjYsGGNGjXkJ5F82bJlS/nx6sp8+iA2NtaV4+zQVwf9kae/Ys2fP79J
kybyUSkdIt0inSNdVKlSJflQlY28vm4AvJd8UNx00021a9eWv1D0s+XanK1I
/kyTv0H0p4x8hMqfV/JXkvRMXl8fAN6rVq1aNWvWlN++GjRo0Lhx459++sl1
afMBXlO8PwXNjoUt+jNx3bp1gYGBGh7K6z333JOUlJT1x6WGM3ob2IjEuXPn
Sidcf/312g+apsp2QECAv7+/FCu30yuvvHL06FHd34YF6tBHj4xOCt+0aZP8
zMqfP3++TBrryYYUqGeRn2Xjxo2zsMj5KPqiRYtkt5CQENlNftht27ZNqjpv
3rzmzZvLO/K+5k6yj80AUKJEie7du//+++9WlKWLWuby5cutGvXq1ZO2JCQk
nD59+t577y1cuLBWVQuX1+DgYC38gQceWL9+vevC0Y8nHENc9Plx2YiOjm7R
okWZMmWkBDuRNlZI+bJdqlSpl156SU6tdbMxsc4LFBUVZWm2VGPKlCmuLM+V
a6fFx8f/8ccfL7/8shTr0RvOPpfSnnrqqV27dtk10gprIfJnqbZL/mSTv92k
mZMmTSpXrpwcqJ2sldfSGjVqNGbMGO3Sxx57rHjx4qXcpk6dqveSlLxs2bIC
BQpYfbp06aJ3i57FckKPKWflu/L3sp5IXiMiIo4cOeL9MyBdfSloeubkFXJF
5syZEx4e7ryT5erIq23rlwCucfaTwjktj/zokR9hI0aMkJ/IGgk6f/RclWwO
cJf79xAxatQo6Rb7me78ONVOA4CLko+I0NBQ2ahQoYL8Du+x1MK1Y/Xq1fJn
WrCb/XHE5yeAHHgEI/369XMOloO6dlJQexJcBwSePHnS5c4zX3nllaJFi/pd
yHnn6NLzAQEBrVq1Wr9+vZbjfFhet22U6apVq66//nqtSXh4eMGCBbV7ndGc
vlOuXLmePXseP348Pj5ei9JgcMmSJfnddJ9v3aQoqZX8SiA10ULCwsIKFCgg
X2rsJvWUS7lp0ybXhfNtasmWghYrVqxMmTLyb2Hx4sXyt4mUaX+7SQc6A0wp
UN65/fbbFy5cqF0tbdS5aJwNF2+88Ub58uWdfwNqmud8R/pBX9u2bTt37lw9
1jn/qnKmoNKujz76yNkK54PwcsWrV6+unanhrXWsbUv99beF2rVrf/XVV/YJ
kJKS4gwhT5065XIPQ23fvr0ea/GXFijl6C0hX3bu3PnQoUMDBgzQb0kbJ0yY
YMnzgQMH2rRpY3WoUqXK2rVrXRcuDmWLdtmfw1u2bCldurScwu5eHTXk5a6+
FNRI/b/++mv7d+EHANmTj0H9QSw/F/SHnXrwwQc9Jqm+rJUHfYvz+QWdX6hP
nz7WFREREfpD035qAEB29I8vpSMZLnF1hquM/Elo/aB/I8gfcXlwPQD4lLCw
sOsy/8e5ffv2OSz1cs26dlJQ5Zwa9OjRoyNGjNCjihQpoumi3DMlSpS45ZZb
GjRoEBkZeZ17gIeFafLOrFmzXBcO3XRu//DDD9dff72GclKU3odly5a9za1y
5crypgaPFrS+8MILNhWnriW0atUq+xuhePHiDz/8cMOGDS3okxL0ydxChQpl
vecfe+wxiytd2YwFrVOnzrhx43Tcpl9m4le4cOGKFSvKnyf2v40lS5bUjZ49
e8bFxTkL1BGV2vnSZI8YWQ5s1KhRu3bt7rrrrhYtWtSsWVMfctcKhIaG1q9f
f9myZc7raKKiorQ06XlpqUcKaubNmyet0L86tVj5C6tu3bpy3bt37y7/2OvV
q6f9b62WTvv222/1lyiPxar0vF27dtXe0P991q6WqylfOouSk3bo0KFNmzZ6
dvHuu+/aH7nSIW+99ZazN+RLV2b8bvvohh4lX44fP97P/d+7et4ZM2b4xNSg
V2UKqpMzyH0id4v+O5VbYurUqZ988smnn376H7fp06fbNoBr3IcffigfEfLT
atKkSbItr/IT0M/9n4ny01M/WDz+F+yq5PGMg3jooYf0Vx35nUq65YMPPpDX
j9ymTJmS19cNgPd66qmn5Fdi/ZNExyrYiJFrivz5FhQUdJ37QST5200+OeXz
87333svr6wPAe8mnxPvvv9+mTRsb0pbXn2Te6JpKQfUQG4kxbNgwZwwoHn74
4U8++WTLli379+8/cuTIggULxo4d26RJE/1uiRIl5LVx48Zr1qxxZWZZmlal
paXp3Js33nij7hwRESE/sFq0aCEFbt26VX52yw/x33777ccff+zcubNGXvnz
55eel/tz7dq1cXFxVs/Vq1frHw46olLPK2rUqDFw4MAvv/xy165dO3fuXLhw
4Q8//NC+ffvr3M/nSlt0sOjKlSttxaKsKagOH5WTyoYcEhkZ+fjjj0uZGzZs
kIb/9NNPH3/8sdZQyVHFihWTEzl7UvtQCpeukDNaH0qjhgwZMn369AMHDuie
0i45tfzh07BhQylKukXLrFev3p49e1xZEk7pK01BZR8pOWsKKqf+448/6tev
b/2sl1tqGBUVdfr0adkhISEhOjpa/vnLBfVz/LdppUqV5s+fr+Xo36S26qL8
K/DLnBBAVKhQ4bnnnpsxY8YKt6+//nrUqFHNmjWzTFUrKbecXCA5kbMJcvmK
FCliI1Q7deqkl8PuRo+HeqSLtMN1/8qVKx8+fFj38fK/l6/KFFSXxEpOTp45
c6Zea7mr5cNE2+VcolS3AVzjPD5D5AOkb9++ulBjly5d9E3n/5Ze9VJSUvTn
Xbdu3fQHRJ8+fbI+zZrX1w2A95K/SvwyR4T+/vvvOmHRNTgv6KJFizQKlp8p
x44dczn+BAOAi3K5s6mnn35a/5K97bbbXNfAvPSX6/w1k4I6R+vJt1asWHHD
DTfovSE/ZMuVKzd58mTnmuOym365b98+6Rm/zJlYxKOPPqq7yU8i/dNG1/Xu
3r27n2MI6EMPPbRnzx6rw+nTp/WvgD/++GPatGl+jsc95C8mPanuuWzZMotf
dCMgIEAu07x586wJumigFHjo0KFHHnlEd9NTv/rqq64c5wX1c4/81FRwyZIl
Wqv4+HhLdFeuXCkdqLmcDpF9/vnnXZmLmNvfMqdOnWrdurUWqE/Tv/baa9YK
5xPfYseOHVqmxX3yb1PO5RGXbd261VZHkt10XlDnP1vZ7tevn5/70X693P37
95dOyBq7SVXl2ukngE3QKhXWh/qFFSs95pc5x45sSFfbUFVn1r106VKNVeW6
aGfqzLHjxo1znlcutPzl65f5JHWZMmV27dqlv7TYPADnHXN+bty4sUKFCnYz
DBgwwKY/8vIRoVdlCmq+//57vSLFixeXfx3nM1NQ5ydJnlYQgFdISUmR3wSc
q+/pTwr5bLQU1H5uXt2fG865u13uFFQ/RR988EFbrVK6QnrMy3+6Achb8hum
X+YU/Ta3v63LcO1YtWqVDUrRPyp1vpG8rhcA7yW/ZaWmpg4fPlyH1f3jH/9w
XThtEVzXXgqqoWV8fHy7du3sieawsLApU6Y483OX+28W+S091e348eN33XWX
RYglS5Zcvny5Mx+T7c2bN1uwWbp06Tp16uzbt8914QyiSgrUCmhpcn8WK1bs
6NGjdnMuW7ZMIztNIGVD/pI6fPiwflfO6PFnlLS9UqVKVr177733zJkzOaeg
on79+lrDi843vmDBAh1Cqf98OnbsKL976LyaVuY333zj5565VAt88sknXY5/
Ys68SN/87bffqlWrpt0eGRlZuHDhnTt32lPhuqemoFpV6cysqyPt3r1brpde
aymkefPm+n+j1gqpp3Svs4tatGihQ1X1VZpm84LKUQcPHqxcubJf5sylcuE2
bNig35KirDlaz5MnT9pEZzoIVq7RuHHj7O873VOqrU3Q3vvggw/0NtAs1BnA
yiHvvfee9IneOREREdKr590jVF1enyVefSmo3Bh2xW0saIkSJeLi4uxGJQUF
kB39eO/Zs6dOffPAAw/Yt+yHTt7V7srS/91z/q9lr169dL7r7t27X7OLmwDI
BfldXX/Hlg9S+UVd37wGpwZds2aNpsHyt090dHReVweAb5C/Uv/1r3/pX7Jt
2rQhAs3q2klBlf434vLlywsUKGDr3QwcOFB/sOr+ss/x48ftEP29fe7cufpk
uo7PfO655+yRBJc76uzQoYP8sLanzmfOnGn/ZSl7xsbGeqyJIHXwyxy9KT/d
vvjiC1dmduScF1Rjxm+++cblzj/tqTqNUl3u56nl/YcfflhDPCnwlltu2b9/
fw4pqDREdps/f76teq9F6atOvyMdct999/llLgxUr169Q4cOOddFkvO2atXK
ZlWVCu/bt8+WfT/vnlzR2V4tXJrpTGJfeuklW7VKd3OmoNLV+kS8tUUH3NpQ
zIiIiFmzZum/a4+BJfrnmN4eOsOAdqkc27lzZ9tNWjF+/Hi5XvpPwEaf6rds
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
ZwyqtEeYGGtkl8uXL3NB6pa7IysRluVOw5qjR49+/vnno0aNQtvnWSedO3ce
PXr07Nmzjx07ZhtJwHLdwJxLSFZKMkY7W67rKOvx1xzfFRdu5cqVQ4YM6dat
Gy5c8+bN27ZtO3To0G+//fb48ePYy6Y0sos9xzEw15sfDsDZs2d37979yy+/
nDp1in3bZahP/A0MDGSwq7+//549e7ieB+I8XGa2zBn3AyNmGV/6+uuvW67Q
Vh0XNP2gKqiiKD6jKihRFVRRlNSgKihRFVRRFB/4W6qgZu9gyxD63L1KRoSy
QzSFQVMVxF9Kps2aNWPoI2WZDAdOk9OR8zTNle5Klzt3nCDZrVu3bCGjWCPq
n3sgoicYZOvlTmOgIGre1MrchWsWLCVHjIuLo5qapOrLSw/MO4cna5MHkYbn
aMZnmool6lPOyzxBs1Fzy4mnEzGHFbXBI1KqZW6UgmW4AFNkcy+DhFwSVIWc
MsVkjrnKfKQ8SIYjisjp/nCZecbHx3Mc0Z9++snf358jjuL31KlT5iRZSZ4X
2LJlS548eTjQaGhoKCNUTfk0w6EqqKIoiomqoERVUEVRUoOqoERVUEVRfOBv
qYJSb6GqExsbO2HChKVLl86fP3/Pnj1Hjhw5f/785cuX4+Pjb9y44a7J0As1
Z69Gbg0bNmR/7QEDBmSgHvE4Tfc4ScbBuq980Fi7xMRE7GVz1H///XcJCnXH
PAQVOaRHPuxqLSW5fv26J4FIxGpTpqO86f262M6O8u9vv/3m3tBIUinF7lev
XrXVEpZReIp+LLCE3Uq2Zr9vphc1j+GU5kC1FIfN9DxcghM5LovnPnqtZYiQ
Jqg0VA5zwC58LswTl8yxVTRtJhCRMy4uDgWLiYnh0VnhjIxlmbEgw4qCzz77
jMPGwicpU6bMlStXbLGg5iGYJ3779evHfvr4bd++PQpmisNWBkRVUEVRFBNV
QYmqoIqipAZVQYmqoIqi+MDfUgUlOJE7d+5ERkaihR4YGBgWFhYQEBAUFFSg
QIHSpUtXr1796aefbtOmDfsjf/DBB/Pnz4+IiNixY8fevXuPHj167ty5ffv2
MfQRKVlF/fv3f9in9cDgEt9wwt7T7NBNmTeFiq6Z8urVqzExMbap0k0pz4vr
zshb5ube1RolNOVHSo5U7ZLUq6VIyZ6FKG9JBoIyJhb5UwwUfZXKIY5u2wsJ
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
sqPZh53LeMqYoQib1EvNQX2Rs4hpHAHYlkmGQ1VQRVEUE1VBiaqgiqKkBlVB
iaqgiqL4QIZQQcHZs2eXLl2KojZs2LBQoUKch9o2OUvOnDmfe+65SZMmrV69
OioqSnxIzu2yYcMGPz8/mdulVq1aaMJT2+Gv6Xaa4oyqoErmhJ3TJbYTD4IM
EypPChVR2YUTG3Ffrpe5zPCXup8ZZc0FJKCsyr98YOUBdO+Sn4FQFVRRFMVE
VVCiKqiiKKlBVVCiKqiiKD6QhiooY73YMVbGAJStImVIPJg0pW3Onqy5du3a
rl275syZ06xZs7JlywYGBsok7zT77NtepkyZV199dfHixXgF3Lhxw0vMGFJi
lxw5crRt2xY5W8bwg15QFVRRFN9QFVRRFMVEVVCiKqiiKKlBVVCiKqiiKD6Q
Jiqo+6RC9OXuOpGVEgkm87Cbh8MaFCYxMfHkyZNr1qwZNWpU06ZN8+bNi4IF
BweL/omFnDlzFi9evGbNmiNHjly9evXly5ctZ6QZFiRWLUk6duyI1vrYsWMT
EhIYb2bd35M3SVQFVRTFN1QFVRRFMVEVlKgKqihKalAVlKgKqiiKD6RhLChj
OMHt27cTnVjOzq1Xr17lJClMZuqi0vH82rVre/funT17dp8+fSpUqODn5+dw
I2fOnOXLl2/Xrt3kyZP379/vqRheyo/3xdKlSzmzfMqHGVQVVFEU31AVVFEU
xURVUKIqqKIoqUFVUKIqqKIoPpAmKijFT/cdr1+/boqfon9KP3Q0nNesWTN8
+PAmTZoUKFDAXfkMCAjIly9fq1athg4dunbt2kuXLrl3n79586apsnpBpj1K
SEjgQkxMTErOTlVQRVF8QFVQRVEUE1VBiaqgiqKkBlVBiaqgiqL4QJqooOb0
KJazdcy4UMmKMimXY2NjYaPmzp3bpUsXM+wT5kuWs2fPXrp06RdffHHmzJl7
9+69du2aGbqJw928eRO/7tOmJFv4Gzdu2IJRkz07VUEVRfENVUEVRVFMVAUl
qoIqipIaVAUlqoIqiuIDaTtHPKeTNnPg6KDXrl07efIkzPXbb79dt27dPHny
mNGefn5+nOqoaNGi2Dpo0KCNGzdytE/mSVmVEyq5F+/mzZuJiYniMXp3HePj
45kgISEhhU6mqqCKoviGqqCKoigmqoISVUEVRUkNqoISVUEVRfGBtFJBsRen
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
L/OBa4eChYeHM9SHwU7Hjx+fOXPmnDlzPvvsM/jVLD8O3bRpU6yfP38+Nq1e
vdoymvBg2bJlzJNuHlzTkSNHbt68mR7XxYsXo6KiduzYMWzYsAYNGpgOJHxm
VEvKJ0hV/iRUBSWqgqac6OhotMHlZVquXDlYD++7iE0T2ZMtX5q+P1yzCFlO
e4WmLq8Ce/PBhL777ruzZs3av38/DrR161Ys9+3bl0E70l9+woQJaMmaPevl
iGPGjHE4BVu2ImGfR4wY8eOPP54+fZozGR09enT9+vU4Co5FwYHB7aNHj7YM
237p0qUvnaAAUkiYygoVKkybNm3x4sXY9NVXX6Etz6PHxMTkzZtXwk29q6D8
u2DBAhYAZ+RJBRVbipQtW7ZE21yiW7FcsWJFGO3u3buLOMMd33vvPYcRhgQ/
AW+EyZMn//e//8UL4uDBg6iBwYMHV6tWDVvz5cvHDOvVq4cWtwz+rHhBVVCS
2VRQIT4+HpYE1sBhxBDWqlVr/Pjxq1atioyMhMHZuXPnxx9/jEePZoFfJeCS
LVq0yDJ61lsuSXDq1KnysNMuvfTSS3DG9u7dC3OEX/hXY8eONXu1g65du6IV
IKqgZcSQO5xKqaiIOHTjxo1hvlasWIGy4drBiMmnbYdLp4VbaE4hx5zbtm3r
cHXxLlWqFAVJGGQUZujQofBCN2zYgBJ+8sknr732GiU+DieCBRgu6YdOo81f
5D9q1Cgpp8OpzQ4fPhxeJd47nIAeDxeuRYcOHeDEOlwxlqjMjz76yHK9a+T1
bSUVCyo9yglKAhcXJ4IXBP1tLODqr127loH9SHDy5Ml169aNGzeuRIkSclCc
cv/+/TklqGTFhe+//54VQt8YZ12+fHmcGi70pk2bli9fjhcWbgMZkwQJgoOD
GZRbqVKlw4cP88IxZ14RGeFqzZo195wTclnGG8Qy3hF4u+GG4Rgy+O3Ro4fc
ruZe6Q1VQZNFVVBFUXxDVVAlzUkTFdTWH5wdapCeQ4NK3xk2ok1NBsngULEJ
zI/X8LJEkWAyCTGFDzlw4ED24mSGcBrhMdqGiMffKlWq8DFBzvA/bYGaMq8H
fuFcOVx9M+GsyswaOGX681JUeGVsX9OzLVeuHDVYcVa1lf1QUBWUqAqactCK
rFq1qkT4lC1bdtu2bYw2TBLUHgOcKH5ijftoZlyPvwMGDJDvPrBUzz///Pr1
682j81oghxkzZnC+D2qbRYoUOXjwII2t9EmE9cMatBqktQ7jtmvXLmbFGee5
zPQRERFsrdOi1qtX7+LFi+bRJWwVjV8aUhZShpizjO9ZeBHny5cP+aRcBUVj
nBWLXTypoGgeitWVFwSuwoIFC7Zs2QL7j8LA2lvG0M3bt2+X/pgoMM5x6tSp
Uk7RBPAmwu4tWrRgSrbfx4wZ84drCj/FC6qCkkyogsbFxXH9008/zV3Y1ujQ
ocOBAwcs4xGjX4THc+TIkXxyKeVVrlxZovWYFUwi2ikM9eTDi+dxxIgRZ8+e
lQKIIV29ejXNAq1ccHAwTIF1vxhIB4zmhZ/Cw8LCRo8ebWZIYLgmTZrEnjs8
nUqVKtGG85T5Ebx169aMbBSDiV+UkIMqi0nhWcPgmAGQoaGhp06dMl1fqqzL
ly83R1IqVaoUbBcTSJSs9GSHB0sZmQPXoyYPHz7McVZjY2M9qaAxMTFSz6xq
PLkMlKWh5uCl3IQaNmcvxVnPmTOHiVk5OCk0vizDPiP9pUuX5DMZI0jfeOON
06dP87iM3kTKc+fOffHFF7wBHIZyjgIgsTmNFK6mhOijnrt27SqFNy2zfK7C
VXC4PiOC7777znLqn/KiSZ+PpKqgyaIqqKIovqEqqJLmpGGPeMtNCZw+fTpH
+GRu/fr1s5zXVOZTxu9rr70mjmWFChV46dm0l4mTpLULp4s9dJAt/OQePXpw
E/IUZw+upjmXaO/evZEbElBNhR8lIsaRI0fMCITx48fzWOY4S8hNThwJzI/j
mzZtsoyZNDPuM5ihURWUqAqacmDQatSoIQ8+WnmtWrXq1KlTSw+0a9cOfnub
Nm2aNWv27LPPcs2HH35o3T+EmuUU63LmzIl3NJ38Jk2aHD161DIsGFq4jCDC
GljaRYsWsemK9NirS5culjG3u+W8dnjX58iRQ0bvXLZsGXbkZyZJxkY9g2SG
DRsmgmG+fPlg5ZhGRlHmjSGh9Q5nwCRnlmdQkGTLWNAU9ogXFVQ62nvpES/d
9mnPH3vssYMHD5qvGNpznhF2adiwocPVXyAkJESa7ZSpZS8Oo4qXCF4BrDG0
oHFFDh8+nNqbJhOgKijJhCoolxcvXsyHl62M/v37czJxmeHoD9d0kNzljTfe
MGeTnDhxIrdS5UOGvXr1chjz6YwdO1aOjoeUI4giMbP98ssv+YDz991335Uj
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
UBWUqAqacthdWvSBsmXL7ty5M8lISyL2TYRHiWbnX45H1759e9EVS5Ys+fHH
H2/cuHH9+vVr1qxZuXLlwoULVzpZ5QQLK1asgA1Zvnx5jRo12DkRrUi07i3n
e//mzZsyqpsMVizlP3jw4Lp162Ahp06dimYXmvMwkiEhIRyWjd0SAZqTmzdv
5l5/ngpqGRYYpylTz3ufI/5/nKDkZvFE6eXgJKiBOXPm5MyZk4MGwPwOGDBg
8eLFqLolS5as9MDSpUtRsT169KC/RNPNWYYVL6gKSjKhCorThItF4Qu2CBZp
/vz5np4vGrRly5bBds2aNatcuXJiIvAConp55MgR2iLGRrZq1coctogLpuPn
Sczk+JPcpUyZMjwQ8uSQm945efKkWEJcSg4ObOqWbdq0ke78TZo0iYuLM62Z
rVTcZKqgnTt3Nl8NsLQyLZ2/vz8cSNnRS8Cq5ZwMFEcXa1yvXj1KoJ5UUJST
rwZ4s1FRURLBC3r27CnZUoNNsmKZedeuXeXrW+HChSVanlMH8mZo1qyZdH73
cgooyeeffy41g1pC5Zsq6D3nGAVHjx6VKZwogrGq2UeMKUePHi0TqhYrVmzf
vn0ZRQK1VAX1yj3nBI5oZLVo0YKife3ateHATFIURfEAfAw0pmAo3n///X79
+gUFBeH1gTf7Tz/95N4SyYioCvpwSRMVVBqw0peTcsGgQYMcrrlCQkNDOd6R
iXxfxkFxS48bNw6OJY5odix1OHuhoj1Lx0lGk3M8eI94y9AxcDrSWenq1auL
Fi1CSrydcXR2kjXndaKviENjkwwPqCpoekBVUKIqaMqJiYmpU6eOw9VdumTJ
kjL9R5Ik2ZY0e7tzohDGlzLuiCO8OR4QGLrSpUvbDiSDD1+6dGnatGkwU/Xr
1y9atKh7/tLkl014mcrYen+BCmo5Z0eSo3uZI97hEie7d+8udWgZ9ln6yL/z
zju2KnIYo7N6AgnkTcFdtm3b5uUSK5aqoC4yoQq6b9++EiVKyGTuDpfblixi
c7I5kY8av/zyi5kbSmIZQ16YUqRZZhgBxs+LrZCBNEHZsmXlM/TgwYMtr4Gg
4MyZMzKGJ+BkRuY78cUXX5RBj1FyGQhUSmUWjztWrlxZvNOOHTtK5yaUEw6h
mErUHlxKszu8l1dwYmKiRMeBKlWq2Drmu6ugsgnm3WGM6wIX2jK+JVleYzhR
h7JjSEjIsWPHeMqlSpWSwsAht+5/2SUJjrh582aJBYUHfurUKfOp4ZVF5s8+
+yyHG4WJxi3HxgULTLm4YcOGMkxB27ZtzZDg9I+qoMmC5mHjxo0drmnLOI66
oihKktCc8tMYjIa4HD///DPHhEm2V0g6R1XQh0saqqDS8RPO5D3nSHH8wE3/
DXlu3LiRCcxBRPF7+vTpUaNGVapUyXStxT2TBi+egieffBIeGjxbrnxQFVQe
FnHq0MzfsmXLc889V7BgQZt7L9+j2agPDw9n/BhXqgqaTlAVlKgKmnI4R7z4
4UWLFoUJ4hAcnrp/cj5fyxhe2HznYhmWBG06KifmRxx/f395a1Nf+h8XVEqz
OOFAN/ibL18+82JJc3j+/PkwpxzwU8COyBy/2JcGs2TJkmXLlsVyjhw5UJLA
wMADBw4wq79GBZ05c6b0svSkglKCZju3V69elmvuactos0vo0ZtvvkkjDLOP
0zG/hf2PB7gVlSA1D9atW5fqG+dvjqqgJLOpoHjWdu7cmSdPHj4yOXPmZBC1
l+dLJnRzuCQ4ukl4tJntjz/+SGP1D2cv79dee81y9vSRyEApgMy84x3sSL+O
wGO0kuumfe7cOTNO0lRB6Q127NhRbHWbNm1EcHPv3CQ7VqlSRXbp1KmTzNRz
+/btb775hmaN09J99913ZmcBL+WkCsqKcjgDKdkxwZMKGh0dLee+fft2h+tD
Dw4N85vkJU4S6cPucM7NdPjwYct5jfASkbZnv379LGMSK0/gBHft2iUvo/Ll
y586dcq6/x3BhS+++ILnQh9+8+bNTHPPOT4MMpHJL1AGJPZ+3PSGqqBeYLsP
VcSZGW2xLoqiKO7QLZGoBvobeMPCN5MPplZyzkB6RlXQh0sa9ogXFZQuH7wg
uMHSDi1VqhQvKzvLc2h9yzkePvxPpmHL3eEaaR9/Q0NDixQp8sILLwwaNGjN
mjVwa//1r385nC43nCXfZkfCr3z0h9MIh8320KEVEB4ejqescOHClStXxlHg
P6OZsG/fvnz58tFvVBU0naAqKFEVNOXAEKEt6TBiQU+ePJlszIm8ZM0pJ2hz
8Hv+/PnHHnvMNCOwIYGBgfygg18YkyAnuVxgOdgJtuIvWrJhYWENGjSQ7vZy
oCFDhnCoNHoCOZxgL5Qfh4CFrFWr1vPPPw9rdvHixWXLlvG8cNyQkBCZtflP
VUFllw8//JBSiSO5WFAWslu3bknO+Su6wYABA8ywNBjnPHnyFCxYEGeX0wOo
eSrAqE+8JvCL2lu+fHkyt0WmR1VQktlUUMvphuExMc0XTIen5wvPIwwRDBes
Fp4yPG5w2vmUvfjii8gT/tWmTZtorPAAwlhxCnJps7j3cTbj7e84ue3EbAJU
rFhRijds2DArOXXx7NmzXmJB8duhQwcxbi1btvSkgpq7mCoo4yT5XkBRv/rq
K3l8YKM4dwNlXvnunyTXr19/5plnOIAqcqhZsyYqUOJmLTcV9MKFC5brNbR1
61bpoIRrQRXUut+x99SjvH///jgiJUcUGLc6x2Xli+wfzj7LOLRl9EfwBCph
27ZtuNYoCVVQvFIt4/0oyeDDczZ5AvNuVjUnZmKR0PSwTY8lpNs+8qqCpoQF
CxagHYebpESJEuXKlSujKIrigdKlSz/66KPFihVDSw0WA78NGzYcNWpUfHy8
aVVk1sWHZNV8R1XQh0uaqKAymYX84sJ9/vnnDlfkJH579OjBxHRc+bE7Nja2
d+/evO5wqul7161bF977tGnT4EZGRUXB2TMFATirDtfngAdVQc2ph8HatWvp
VzNgAP4bni+8nYcOHbpkyZIff/wRXrS5C9w8nSM+vaEqKFEVNOXExMRQBWXU
IvxwU6zzhASQm3qpNG9hK6pVq8bKR9MSLdn169ejibp9+/bNmzevWbPmf//3
fzcbbDLYsmXL999/HxERsWrVKqRnhvKK//rrr0NDQ9lGzpkzp8MZvNqiRYvx
48evXLly//79OB3z1Y+GMOO1OITyvn37uP6vUUHHjRsntteTClq/fn1p6r70
0ksSpW+GacnKt956S8qJk3rvvfdQY6zV7zyAykTl//e//0UaLGzYsAEVlWxD
XlEVlGQ2FRSWbe/evRxkA75Qnjx5mjVrhqfG0/O1Y8eO/zrBMh7G1atX40GD
N7V48eKDBw8yZ9gliSfEY8se8WbZLMN4SmE4CqjtRBiQj10kFhTlHDhwoJXc
i/706dNmr/yxY8da9wtoMpIz6uf555+H68itIq66m7iqVavKiB90NmRCJZy+
eLxBQUGwOZbT0sJ39d6jHA42T405P/300957xEdHR4tojHqWj0RwSmEeuZcM
HPqHge24bdu2dbhi8gsXLnz+/HnL6ZmzRzwHdKXSm2ywLq7a8uXLKYGiBuBX
UwW1krrf5LbEjYGXr7x6cGg0b6V6+/Tpk+Rg3Z5OJz2gKqgX+F2Dy/w6IMuK
oihJYnv7REVFmfqnGFjplPFX2LI05Z6qoA+VNFFBTR+PfgvuUriIHCseLXHk
hga+XE0O5mA5J5HnRWekE7yvqVOnsrnKeIA/nJMvW8aonvTcmPODqqBmsrNn
z9IHlmgBeP5w780zYiE5NQkOvWXLFviKFEJVBU0n3FMV1Mk9VUFTzMWLF598
8kn23XM4p8Fl4/0PD9AaSGCS+blHGvJoQjZq1Ei+ktSrV+/y5cvSiDMDe0xo
lOTFzda3KWlGRkaiqOYQoD179jxx4gQbudgXC3JxuXLNmjUyM3JISMiuXbvk
WNafr4IijShI3mNB2erv2LGjJJCKNetq/PjxtLcsxqZNm6QfgSdkhGp5MXmP
xVKIqqAks6mglnMyo9KlS4tBaN68uffMZVZ3y/VVSMwjLcmZM2dklEj8tm7d
WurQjPC0nE8rcjO3cjhQSSOeW/ny5ZlbtmzZ+vfvbyX3avM0O5Ici72QUDlZ
s2Zt2bIlvFYeK0kVlJgqaIcOHSzDXK9evVqq2t/ff/r06Sl87aJZB5db9kVJ
uN6TCgqHXKICUM8igTqcw6XeM8an4pvFk2zIr1HMuUSJEnFxcUxctmxZhyvS
oHHjxt4Dbgmu4BdffGGbHYmb+BJEAqnM5cuXS+ArKpNBszjKoUOHOO2FwxmZ
MH/+/CSfO1VBMzR8XsSAmD1rFEVRbNB7h7kwxU95tYlvL02bh1HGVKEq6MMl
SRU0PDxcvqFXqVIlNjbWcjmc7heCn85llHjL+V7buHEjriMHvoZrFBwcDF+I
wibT8F5l93YOiJcrV64tW7bQZTL1f97tbM8mJCQ0bdqUvhbcJMYRmVNYshgo
M/0rpOzXr59ZNst1U+3bt8/hHFyCp4lsxQm0XJ6bWSf4jYiICAkJcbi+nsPp
lZSc0zOtLoqSclQFJaqCphy8X6pXry4t9HLlynFItAdFKpbN9hdffFHGrilc
uHBkZCStkwQLcSAOpJTJICgg0LzQ2nCNvNlXrlwpecLs9OjRwzZfvGWIfpbT
Ts6YMUO+7ISFhVEFFaFVxNs+ffog53+45keGkRfjzMQo1fnz5/Plyyfx/O++
+67kw5eCuBxSFa1atZKPX55U0IYNGzpcgU8SJMatUgbWANwe1IDMvAxQBulN
IKOJ2ipBBjzJuH1kHgqqgpLMpoIi5eXLlytVqsQHDQ9mvXr1ZK4cpoQ1EBeL
EZt3nbhHCeLBRGL8suMz6hB+IBUhU/H4w5iekgs41tmzZ2fOnDlx4sSpU6fO
mTMnKiqKn+D5uQeGWuzAoEGDkq0B2+xIEgsqv7DY8rkfhgu2130ie/nLTVWr
VhVB0vyCg6rYu3evw5iZDmchudmm0hOzyQTcUdxRjqFqupQ2FRTvL/GlT58+
XbBgQZ4mDk0F1fysJu1E0w3AwoULF2QWJFRC69at5a2EiyWFwYtMskrSixDr
2rdvX4dToEZRixUrhmvn6brg3YFLyZrHO6hr165cLx+8HM7Z4ZO8u9I5qoIq
iqIoKUdV0IdLkipo3rx55avu/2Pvy6NsOvbvb34vibmxtEaC1oggMQsxe0Jo
xBy88B6JmAkiIogpIjFFiIgxMUbEsIgIITwPMbbEHHyJoU2NZZY5cX57nb3u
XuXc7na7041utf+469x7z6lTVefUp/Zn16eqChcufObMGQmJpFJ/GjCHy8Gl
HdeR1zx3ol+/fnrQXPHJcQONKFemS5cOxCkyMpKJmBMlzANwOfAibmNEuv78
88+LK2pzDbjA5lKf4CSeGGmSvQULFnBrEu5XEriekkCfGneHE6H9knDJV199
hYxpeCLFEbbUAauCElYFDR5JpYKagOWhE0d3NSQkZNGiRY4R8yBDwUh4/Ejn
FHZj8+bNn7uYN2/ewYMHeRoVg+HDh8sUZ8uWjSMvf7kbSXgGPfWI+/fvT6MK
dxKdaVRUlHPr/hSOa+RbtmzJZJE+/DWJq+beT5cuXSpYsCBPe/jhh2HG8Tt9
cJ7M0nH8CMeXL1/OkSMHTqYA8ndUUBntvXv3cuyJhWrbti1qRgPBula1wczc
uHFjz549S5YsWbx48Zw5czZs2BCPV25BWBWUuN9UUMc1SjhZ+5qhFe/evdsz
uk2Ygh7/mj17NlKeOXPmpEmT9u/fz79w4bPPPosEGVIIG3vixAnHGAPS7B4z
GB4mFFYL7R0XlixZ8tixY4ocw+e9poJyLpLMGppMkSJFtNJm8+bNHZc9ai0O
z4Z6qnyuIsKspk2blpOMzPhYjwpKmk0g8SZNmqiM+JfjU3igKI5ZCvFY9ju4
i7avQnvnoql8Ln379mUR8OxgyaOjozWupNrAc1EO8S/sLWpGayBUrFiRKnpc
6N27t0pUuXLlc+fO4a3gbqpUQVHkwEDcex9WBbWwsLCwCB5WBb27iFUFBfNh
fGb69OnLlSsXq8ft0VX+MpZ5AcMhqSOVKly4MLixOdmTTxPuORfkJx0aNWqU
VFCT+grgWps2bQoJCaEEiqtAYvVicB4lLgGjBhf1+Vf7fP311+E16zRlG5RY
s6XCw8P37dtnrkGERDTnVNUyYMCA0NBQn3+Pki+++MIsfmJq3+Jvw6qghFVB
g0cSqqBmyPrGjRtp8WgfXnzxRU+3BbMmIyPHf+fOnQq8h02bN2+e4uFxORLx
+ScnPvHEE/BwtV0vI7JMz5pKJt4Bbd+cOXPmAwcOaFc4x2gaHTt25D718Dor
Vapkzqx3/BosPgsUKCDftkWLFp7i6xIm/r///U+yA1JOqAp607/+iWMYf+SB
e8ozZaRJgY5naiTOzPwNF02aNFEQ6QsvvBDrEnMWJqwKStyHKija74wZM2S7
gLFjx2q8m+fAvHAoByf/8ssv1OKmTp0Kxo6KghHLly8fF8PErXHyO++8I3UO
yXJCugmFhnLBQKTZvHlzXVK7dm1z6Ny591RQ2EMzNRQZRlVvTtasWdevX690
aJwvXbrk2W8dlVC6dGnZWNhbGHnOCIhLBeVAj+O3gdxRCCfAooLTfvDBB2au
UIeaUWg+fb0bAGjtN998oyxxgVOOvnEpZnEJDd4RSI12dfbs2eqngAoVKsTf
pa5btw7GmbfIkSMHWhwMjkKR8S7t2LFDWwzc9kHfO7AqqIWFhYVF8LAq6N1F
XCqoCNLjjz8OngMKB/5jxn8GqqCOy/FA2MCFQD7pTD300EMTJ05ECnSTNSwO
0gv3/9FHH9UEouHDhwc6qqRwJ0+e5FeSZHItOO8vvfQSYwkogXJBJwB55nR4
n7uMnuOSN2qhLCZc7HfffVfMMywsLCoqyrMYFHHmzBke7Nq1Kzw8nGyTKWtd
UKRsJ13eLVgVlLAqaPBIQhVUjjxMysWLF+H9yXIWKVJk+/bttAyKpZH95IXn
zp3r2bMnTAodQDjOe/fu1RIf8IV79Oghi4d8nj17VpGQZoL4hY7zvHnz4NLS
94eFhIMJT9wTg8Sdmtu2bathILjhP7uAfdbbAsOLA5QCeaNOi0qjiVYeGHFE
q4tarVWrlsriS1QsqIwwUpYQOnr0aJ8//h8YOXKkY2zsovQ5fMbfd+/ezfNB
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
1+xCPfBkq4JaWFgkCCtWrKCRyZAhw5EjR6hgpKCVBJjh69ev9+zZM23atJ6g
eoa5Erly5apWrdr48eOjoqK0ZKjMqVVBLe5nXLlyhcRpyJAhjzzyiM9dIBQN
iu3IHFYAV6FAipZSp06dRYsW0Vxwqz5Psq+88goSwSU4OXPmzJxBX7hw4XHj
xjmppYlZFdTCwsLCInhYFdTCwiLR8KigJUqU6Ny5M7zgtm3b4qBLly7t27d/
6R5DuzjQvXv3okWLSvw0vfh//OMfcEDSpEmj2IycOXP26tVrwYIFitpy3FhQ
OvtWBbWwsEgQ1q1bR+kPBgRm6hUX96D9jAsdO3aECcVnyZIlZTZNKwr7mSlT
JkbX43eYymLFiuH8uXPnHj16lJXwxx9/WBXUwoJA0+jUqVO2bNl8AcicOTOl
0SpVqoCK7Ny5k5f8aSxM+ssvv3Cp/2vXrr366qvaQYltsGzZsmvWrOFVsW7t
lOJgVVALCwsLi+BhVVALC4tEw7MuqOnz+vybnN5reCAO8F9435ovxohQjxya
Pn16nYDjJ554Aj7I9u3bUQ8vvvgif7cqqIWFRYKwbt06mBcGd6VoKJCeZQGl
VDi9p4MgMmbMWKpUKVhR1MAvv/xiVVCL+xlgCz///LO5Y93y5ctHjRqFBtKg
QYNy5cpVqFChWrVq9erVwy/Tp09Hq+Fp2oXKszkXsX79+mHDhnXr1q1fv36f
f/75pk2buJX8b7/9loIm7MQPq4JaWFhYWAQPq4JaWFgkGqYKSg83bdq0adKk
SedHsrrbyQFkXuLt/3Phc915lEUuvGeyJ3wT+Ckwktpi3qqgFhYWCcLKlSt9
RhQ6p6wq/vzeB8eG0riI5xxaVJ7zj3/8g8YWJa1evfrSpUsdOyPewsIFN2TU
y3/lypULLq5evXrt2jV8etqFub4updQ//vjjt99+w8meM3/66SfOnb9x4wZX
ojCvTbmwKqiFhYWFRfCwKqiFhUWi4ZkRnyNHjtatW9etWzcyMvLZZ59t1KhR
gwYNmtxjaBwHnnvuuVy5cslblxbK6WMm8FeGDBngtg8fPnz37t10KGAkmzVr
xhOsCmphYZEgbNy4kVNcAZij5s2bw5DCKN1texksmFvYwIiICJlKDoRxaMyc
IM/o0JCQkPLly7/55pvbtm2jFQUXtSqoxf0Mc41cxxUqxSWIa9eucfV1x9Uz
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
7xHPOmnVqpXmwjvGKvFm3nAClxMkgezVq5ecfXyCM2uyGG7NLaVuGtNLtaoS
waePz3r16unpWBXUqqD3gwraokULGaKwsDDujZ64rkHqmWcnOMcvf7HRcaTG
5x9ugPVD2x81apRzq59uxuTol+HDh/sMFXT//v1xqaB0G+EsV6xYMSYmJnAV
NVl+Tyl27dr16aefdujQ4emnn+bU2syZM2u4ymeA/ik+69ataxo0FJYr+/F8
JLJ27VpzZYA/jS0tTKHYs/e6HF7UJ1JIXCyoTDEyQDvMf7UoqKrXEzDvGIFV
EyZMUC+WLl26ZcuWmfFd+Mq8pUmTJjw8fMmSJfzLE3Vmpvz222/7/GNYefLk
sSpoqscdUEH1vhUvXpy2BXUO6nLgwAFzgYukvXU8saDaYlu6KOwVyEnfvn0L
Fy5MwdPnlzFFL9mUYFXI4mrUqGHmVgbkyJEjFSpUwGnaWo7miDYHaYaGhsL0
gYiCvzFYUdPzPcutf/XVV6VKleL6Qj7/RHszXB88tkGDBkhqzZo1Gq+RtTeD
bO+ACop/Dx48SNOhqUCa633Tv5wmc8i8UdyT8Te5Lq9iKOmFCxfwNGHNunbt
Wr9+fVhLLlfl8+vSXIOUz0iDXHiO3AXA03P9TRWUz4ujfsxA1qxZN2zYwN9Z
BPUjXIRZaeLTsxEqujP0SuaLpH1U8Zq1b9/ecbxrwJrhx7jjyZMn6QUQ6MTv
2JZ2VgW1sLCwsAgeVgUVuICSqMg333yT0BRQS1u3bmUUJfHss8+iMsU6yENI
CaKiopo3b24uzk9KyYlLIrrgVxTxSKXwiScVeOtPPvnEnNilFc7jwYABA1Re
KpZ63Nu3b9fWGFpLU94BaZWpE2pu/saNGyVjJmssKKngyy+/HOvC7yr7n+5+
K3QimGaPHj3MM8EkWQOMjkDB4xcwlc+ePXtyoVGfjQW1Kuj9oYK2bt3a51cn
cubM6ZljnoR3l6lBe8yXL5/PGAl6/PHHzUXJAjc7VtMbMWKELoyIiIg/FpTG
AbZFseWOESzEu2g3ZODcuXPTp0+XOsGNiiR1Ul6gIxweHs69lYnGjRszBcWX
wq+UeUfnu2nTJo6p8TRzvTXHkB8VrO6pAfz+7bffqi9I6O5ITA3HefPm1b99
+/Z1AoybOWlXGUYVzZkzxwxJWrNmjXnt0qVLmTdUDkw9usvbvkLm+q54Gfbv
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
RCqoECI0nnrqKfpgDRs29JxJJzzfIC/49u6KVLkQqaBCiNCQCipEzmPr1q01
a9Y0VbNJkyaczgjX/OHDh20Sv7i4OGzZuHFj48aNuSooHIkKFSpg94AMc9XN
IhWUSAUVQmQFqaBEKqgQ4lxh9MIzzzxTqFAhiwX1TjdZty1nkAuRCiqECA2p
oELkJDiM/cSJE126dOHFz9k+69WrN3bsWDcilCuZjhs3rnbt2kgQFRVFOzB+
/PiAe/+M61LlMKSCEqmgQoisIBWUSAUVQoRGjx496IM1btzYXXsLfr67sl4O
XmUvOFJBhRChIRVUiJyErWG6fv36pk2bMsIzMjIyPDy8cOHCFStWbNas2T33
3NO2bdv69etXqFCBnkP+/Pl5pzz88MO2rKfLpa7WRUUqKJEKKoTIClJBiVRQ
IURoPProo7AeMB0tW7bctGlTgNqZkpJy4sSJ3GxPpIIKIUJDKqgQOQwbF/PL
L7/UqlWLvkFERATvBdzsuOXDw8PD/BQoUABd1MjIyC5dupgE6uW+EFBDKiiR
CiqEyApSQYlUUCHEuZKWlobPPn36WKDCNddcU61ataFDh86bN+/QoUNMht5u
bvbHpIIKIUJDKqgQOQmOiOf06bjUN2zYAK/gpptuwl0QHh5uWih/omcaFRWF
702bNp0wYYLt7q4O75JLbhmpoEQqqBAiK0gFJVJBhRCh0atXL47qIoULF8Zn
TExMs2bNXnnllcWLFx8+fDj7dtizjlRQIURoSAUVIueBi9zu34SEhD179owa
Nap///733HNPrVq1ypcvX61atSZNmtx1110DBw6cNWvW7t273fs9l98aUkGJ
VFAhRFaQCkqkggohQuDo0aPPP/88rEd0dDSHbgWM7SpevHi9evWee+45ePKp
qakpKSnmzKelpTGkARvd2AaLHcVG1xBhe7qPi1vFrCIVVAgRGlJBhch5uCoo
rvMTJ054PocHDtWePXt27ty5b9++2NjYxMREd1lJJIAThR1z+a0hFZRIBRVC
ZAWpoEQqqBDiXKGXNXDgQE7v36BBg+HDh/fu3Rtd2qioqDw+LEYUWypUqNCz
Z8+FCxceOnQosyXjkScdOXPhUnxkX4skFVQIERpSQYXIeeDaDrh/09PTg9zR
SJ/qQ9KWJxXUj1RQIURWkApKpIIKIc4VKpkvvvhimG91pHvvvRde+oEDB7Zv
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
9NJLlMiioqIaNGhgo8VPC67A2rVrU53Lmzfv22+/jY07d+68/vrrTd50VVC7
SpOTkx977DFGTlJoatiw4bvvvvv9998fOXLExurOnz8feXJ8vSmKL774Ip6b
Ni7+4MGD06dPnzRp0hdffFG9enWqr+Hh4Y0aNZoyZQr+mj17NufM5GATFC8m
Joa1RuJRo0ahMGgQk7Yoh3JJd24ZOnSoKZkozI4dOwLGrfzxxx+1atWyoM3G
jRuXKlWKJcGxChQogNp17969X79+pkStX7/e8kRhvvrqK8/vAv30008zZsyY
OXPmG2+8YfOCgqeeeurzzz/HX5MnT163bh09h86dO7P9CxcuXKJEiV9++SX4
mJo5c+YwNxQPRbXZX0UAOU8FJbyqeZHwUj8phBDnSIBhwVM7WxvGswEVzOhp
X+rzIITIftB6wOc/5hsdn5SUlGt78e6Dg9/RUbrU50cIcflCcwGz6S45ffFt
12WOVNDMcFVQinWNGzc+cOAAnsg//vijjS4vXrz44sWLg+SzcuXK8PBwjqkv
VKjQxo0bsXH//v2mgqLxTQX1/Crf8ePHDx48WLFixYiICA6Bx2lasmQJ06Sk
pLA/xRhFfJ86dWqRIkVYqoIFCz700EOcEcJzVlTk9d+2bdvIyEjkicSdO3f2
MrgWSLZq1SqOtUeaqKio8ePHB7QMRVF3UPwHH3zw/3xgr5tuusnCWT1/1w9H
qVKlCkfx4+glSpSgHFqpUqUpU6asWbMG9T106BA+Pf+S8atXrzY1EsX44osv
3PlOWR3siIozaBOZox3475/OaMTJkydbPvh88803g5iCo0eP3n///UxcrFix
mJgYnDJFs5yWnKeC8kZwC5/i49KVSAiRXcEjGA8+GJBUH9nUKp4rqCbri4rb
4E0hhDhX3Ch6zhWWS6xoABYBywfKpS2MEOLyJ0C4cG2pMKSCZkZGFbRRo0b7
9+/H9mPHjjVp0oSNdsUVV/Tv3z/Ic/n555+nBBceHo6mPumb/PPQoUMVK1Y8
rQpK0HFYunSpjXaPjIxctmwZ9Xz8ZSPTbapwPCIffPBBpOcsmqVKlUIhbZZR
e4Di6XnbbbdZ5GSnTp08R7YyjfHXX38tVKgQsqIAO2LECKpDp/VAWAY3FrRa
tWr79u3jcS099sV2U485RL1169Y7d+60rE76Jq+wXX766SfLM1++fHPmzAmo
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
IaFOnTrWVgMHDgw+HN47TyqoW3J83nLLLWH+9apuu+02pExKSsLn0aNH0Wj8
C8fCqWQ+PF/itEgFFUIIIYQQQgghRHZBKmhmBF8d6eTJk8nJyfgybtw4qp1I
U7NmTQYQJiUlVaxYkZGZYNq0aRZByuHVv//+e5BYUPDTTz8hB4ucxOfLL7+8
ZcuWgGQmq4J33nmHM4UiPfbdvn07l3FHGhyRBUCx//73v/O4+fPnv/322z1H
2yRxcXGbNm0qWLBgvnz5KGx+8MEHPIobvcmKWL06deqEQ1OwzWxeUGw3Xbdv
375eSPOCuicIrF27tmjRokiAo6Ooo0aN4r8ssBWPhcfnpEmTTAQuXbr0ypUr
qddNnjwZu1OhLVWq1Pr161k27iVOi1RQIYQQQgghhBBCZBekgmZG8NWRLNny
5cuLFStGIahw4cJffPEFNs6dOzd//vyU2kqWLLl58+aTJ09SP6Qut3///sxU
UAZnjhw5Mk+ePDxu3rx5cWoox+HfJB/x8fG2CyMzBw4caPreNddcs3379oyV
wu4tW7YM803OiWzbt29PrY9KKaMi8fO3336Ljo623CzA0kRLalysCwqGhrr5
5pupml5oFdSkNrJq1SquGIXmQpoPP/zQ2sROk2mh+IL01157renAw4cPZ4YP
Pvig1bddu3ZHjhyxfLwMQrEgUkGFEEIIIYQQQgiRXZAKmhlBVFDTxFJTU+Pj
4+++++4w/5SYTz75JLY/88wzNpy8bdu2TMzZPilmIp/gsaBPPfVUmH859XLl
ym3atInbLfKTKp+rIuKgDMXMnz9/+fLlt2zZguKl+XAlwdtuu42zmCIlSs6V
690a4XPr1q08NHPj/JlJSUlMExcX9+eff6IkVBexy549ezic/CKooKy1DfD/
8ccf8RdjOPPlyzdmzJiEhAT+y7q4jYYTiu/3339/mH9gfuvWrXFGsAvnC+Xq
SKNHj2Z6dw7YIOXMtUgFFUIIIYQQQgghRHZBKmhmBB8RTygecgJPqqANGzbc
tGnT3/72N+4SGRmJf5mYKiKFtSDzgqampuK4Dz74oK2I1LRp0/379x87dszz
SalU5Kg14ZOy6t69e5s1a8b0KEnJkiUPHjxoeZ48eZLHRfrbbrvN5MouXboE
jPimePW///0vJiaG4aD4fPzxx73TxUOasjpkyBBmyHDQizAi3nZcsWIF/qL8
e8UVV0yZMsXSZFSAqYtOnDiRwh32uvrqq7ds2bJkyRJ8x8nC53XXXbd27Voe
woRfxYKeFqmgQgghhBBCCCGEyC5IBc2M4CqoCWv4smXLFi4HHxkZWahQod69
e5cqVYrS0NVXX71jxw7qljYoHl/OqIJ26dKFKmh4eHjLli1xXDtiwPrsni9S
cezYsfny5aMYyONu3rzZnRWTe2HLrbfeSsE2f/78nTp14jj32NhYZGIj4uPi
4ipVqmS5WTjr8ePHORI/ISHB8wmb/GzQoAGSxcTEXIRY0AAsFhTVx+fHH3/s
+aNVPV/wJxvKXdcJZ6R8+fJhvqlE0RSjRo167LHHbAaArl27Yi+2sEWTitMi
FVQIIYQQQgghhBDZBamgmXFGFdR0Nnxp06aNDWAvUaIEd8mbN+99992HNH/8
8Qf3MlXtjCPin376aUp/efLkKVWq1OLFiykumVDJTxwa26dOnVq3bl3GbbKo
VapU2b17t+eXXq20AEXlcPiIiIgmTZqcNsoRG1u1akVdFxkWK1bss88+czVV
+x4XF/fEE09QBLbg1Qs9It7zzwuK3X/++WeujsS1jYYNGxaQicm/LDP1265d
u1qBmzdvjhbmKlTIZM6cOZ53ykr0CgTNDKmgQgghhBBCCCGEyC5IBc2MICpo
gA6Jz9GjR0dHR1MOInny5ClevDgHaKelpdk8lsw8yBrxTDl+/Hg3t3bt2m3b
ti3Fh0WB4jvyefHFFytXrhx2KsWKFdu7d69bHUp52LdLly6sTkRERMWKFb/5
5huWytYDomD4zjvvcIQ7i1GzZs1PPvkkNjY2NTWVBcDRUaRXXnnFjhjmWx/q
Qqugttg9a7R9+/ayZcvaMlKPPvoo2gTbDx8+jKK6K9rzO+Ny58yZwwKH+Ufx
E5ziQ4cOeaeG2rrfhYtUUCGEEEIIIYQQQmQXpIJmRhAVlOscec6iOWvWrLny
yiuppJl6WaZMmS1btnDiTXxS8cMu+BIkFpR57ty5s3bt2hYOSh1y5MiRK1as
WLVq1bJlyz777LM+ffpUr16dwiOSoXgRERH58uUrVKgQtjz77LNIs3r1aotE
9XwS4uuvv87jIjEVyx49evTv33/EiBGoL8pG/Wrz5s0MGTWdMCYm5t577x08
ePCoUaOQ+PHHH+eBkCwyMvL++++/OGvEWxgqy3nw4MFq1apFRUVZHGyrVq2e
f/555L9w4UKrteesGo/Pw4cPYy+WhCGv+CxatCh29Hwhu5by3C+cXIRUUCGE
EEIIIYQQQmQXpIJmBlomISGB679T26xZsybHU5+W22+/naqgaWvdunVLSUlx
Z6Tkl8TExN9//71cuXImMD7yyCP8yx18PX369NKlS4f5B9rnyZMHZShSpEjZ
smVtBLfBGMgbbrjBpEguBN+wYcNdu3aZJIUvy5cvZxrOhGlrwZcsWdLzT/Xp
+UbxDxs2LMw/0pxp8MVkSROHw8PD33rrrTVr1jABMi9RogTyQX2p6PITtaau
mz9/fnz27t3bCyozYve1a9eaBIrP2bNn2ySfHA7v+aYIwNFN1OUi7/z5wgsv
8NCodWpqqs2nykz69OljE59yx6uuumrZsmXnfqXkXqSCCiGEEEIIIYQQIrsg
FTQIx48fv++++yivRUZG1qpVa8uWLZklHjlypOlpBQoUiI6Onj59ujshp6mg
KSkphw4dqlChgklwjz/+OKcMpV4XFxfHlMOHDy9TpowpkGEZKFq0aNWqVV95
5ZWDBw8mJCS8/PLLTEalEdStW5cjxNPS0iix4hBPPvmkK5biO+oYExODgnHw
Psv822+/vfrqqyYCI5lJoAULFqSIWrx48aeffnrPnj2bN2+2Ql533XWmpnr+
JYp27dp18803s32wL8ocvPHRDj/++CNFWpZw5syZbCVUxF35ffHixXfddZdV
p0iRIvzSv39/JkD6jKLcggULuIvpwG3btrUoX3E2SAUVQgghhBBCCCFEdkEq
aBAOHjzYs2fPKlWqXHvttY0bN37ssccyDvQ2Dhw40KpVqzp16iB91apVW7Ro
QcnUXU2eX/7888/jx483bdr0xhtvvOGGGxo0aDBkyBCOW7cVlziOPikpaf78
+V27di1VqlRUVJSJkNT6ateu3b59+02bNjHbo0ePHjt2rF+/figtdcurrroK
Cfbu3Yts3bWNUFSc6+bNm19//fV58uQpVqxY4cKFH3roIUuD4lmeU6ZM6dix
I0NPcVx8yZs3L76ULFnygQce+PLLL5lyzZo1NWrUqFu37k033XTPPfds3bo1
NjaWQZtMcPjw4WeffRZpypUrh1q/9dZbyDzIiHjsizzROKgOW2nBggWuwoZP
6rpopW+//bZTp07IvFChQhwdj1MwbNgwTqPqKnInfXi+ZZJwCkwuDg8PHzdu
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
WZOXl1dRUWGtn7QOLdfLTTBoajXluFaTmtWRFi5cGBMTo7WmGgzefffdK1eu
3Ldv33fffffNN9+sXbv2pZde0vhRuxEfHz9gwIDCwsKaq8PfddddGthqeNup
U6e//OUvW7duzc/P93g8J0+elAZffvlleQRrCNmoUSNducl0WPop52dkZGgE
KtuBAwe2b99em1WtW7f+7W9/e9ttt3366adayamL2u/cuVPekp6jy0J169Zt
1qxZ69ev//rrr/fu3Ss7L7744i233KLnxMXFybZNmzbr1q0LWqYUQC0hBQUA
AAAAAHZBClo3KisrzTrvZky6aNasWa9evUaMGDF//vwdO3bowHafz1dWVmYt
0dRkyawCb/I9t9utKej27dt79Ohh6ipdLterr7761Vdf6Wk6NjwQCMhWztQB
5ppDynbNmjXmNN0uXrxY40cNuIYOHfrZZ59p+mqNYWV78uTJKVOmNGjQwDxR
nz59Dhw4oA2aLHTSpEnmwZOSkjSDbdy4sbyT7OzsgwcPnjlz5vvvvzfvShrP
y8uTJ5IOxMTEaLmpNHL48GG9dWlpqXkJu3bt0pRVySUDBgzQNJVy0FpFCgoA
AAAAAOyCFLQOFBYWynvOycnp2bOn1jRGR0e7XC7rokUJCQktWrS4+uqr//jH
Py5cuPCzzz774YcfSktLS0pKzESXJgX1eDy6NFIwlBn6fL7x48drO7oW0mOP
PWZdM71af5YsWdKoUSONLuWrf+aZZ0z+KdujR4+mpqaaAexXXXXVp59+qu0I
s+q6CSFPnjw5evToCMswfB0XH7SEkBMmTHA6nXKCGcB+7bXX/vWvf5UGzSQA
wVBqKn3QDs+YMUPON4mxPJF+ZB5HXqnJY+XNjBo1yjq4Xp7xF/nucAGkoAAA
AAAAwC5IQetAeXm55nWffvrpyJEjI/6TvHyN73SZIXO8cePG99xzz8KFC7dv
324iR9kx+afJGA8dOtSuXTttRFro3Lnzt99+q2lhWYi5VjNV6cwDDzxg0tfr
r78+Ly/PzOGZmZmpdZs6gH369OkaVGoftFm32y3b/Px8fa7Dhw+3bt3a9D8t
Le348ePWN6C1oFqoqTWoy5YtMw9i5j41iejJkyevvvpqTYylzZtuuqmwsDBY
NSequcq6GL32waSs/fv3106i9pCCAgAAAAAAuyAFrW1FRUW6o/Hd2bNnMzIy
hg0b5nK54uLirKPjjcQQk4g2bNiwT58+c+fOPXPmTNCyArumoNLs0qVL5TSz
+NGTTz5p7YDet6KiwloUqpOIxsbGSh+k/f3792t4VVhYeN9990VUzfMpbX7x
xRdBS1CpWWjNkeaPP/64KR9t1qzZxo0brZ9OnjzZRL5y0969e2sLBQUFwapM
1TqVqDysdMC8nCVLlni9XjnNrLskJ5su6Z/y6UMPPaSXyC3atm176tSp/+F7
w08jBQUAAAAAAHZBClrbNBSSrWaYKj8/Pysra+bMmf369WvSpElUVJTT6dSt
dZh8bGysppFatDlkyJDNmzdrC0VFRaZyUgek1wuRFjZt2mSSUjlH15GXI6ba
s6Sk5OjRo5MmTRo/fvzUqVMzMjK+/fZb/WjPnj0dO3Y0FZXDhw/XNeh1ILw0
lZubq2dqJafH45HWKisr161bF1E186fD4Xj99dd1GlI9eeLEidKmRqBygq6g
ZGi2abonxo4dq6WtLpcrJSXl0KFDerzmKk4mCxUbNmyQq/SNJScnf/jhh2Rx
tYoUFAAAAAAA2AUpaB2wLlaucaJJ/PLy8g4cOLBu3bqMjIz+/fu3atWqQYMG
JhQ19ZOJiYm6n5KS8s9//lOv1WzT7/f36tXLBKddunTJzc01tZr+EN2Xm8px
E0/JtdbqUF2TKCsrS+4ld9cQMjMzM1i1Yrv1iUzKaqYq/eqrr0wxqnjuuefk
vuYxzYh4bfbgwYPBGmu4S1O6LNThw4dvvvlmzUvFfffdZyYjNQ9uHQtv+rN7
927pvI6jFy+99NJ/8SXhv0cKCgAAAAAA7IIUtLaZgd7WXMi6DFAwlEBqnim2
bt06a9aswYMHd+nSRafQNEPj9c/evXvrKHWN/vLy8po2bWrGsMuF1QaYa/vV
RsQXFhbqnxpFmvk2ly1bpveKj493OBzvvfee6bYJPDXbNH/qikV79+7t2rWr
GZh///33mwul8alTp2qzkZGRbdq0+eabb8xL0NDMmoju3LnzqquukpPj4uJi
Y2N79uy5bt26rKysDz/88N1335UurV+/XvbXrl0r+6tWrZKP5ITVq1cvX768
VatWEVVL28+ePdv6EvCLIwUFAAAAAAB2QQpaBzSu1G1ZWZm1iPFH6ZJGp06d
WrJkye23356cnGxqLDXqHDFihDn5xIkTpvrRxI/WhddrsqZVlZWV1kk+J0+e
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
     "], {{0, 170.1}, {538.2, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{240, 240}],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association[
      "Exif" -> Association[
        "Software" -> 
         "Created with the Wolfram Language for Students - Personal Use Only \
: www.wolfram.com", "DateTime" -> 
         DateObject[{2020, 7, 17, 9, 0, 54.}, "Instant", "Gregorian", -4.], 
         "TimeZoneOffset" -> -4]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{538.2, 170.1},
   PlotRange->{{0, 538.2}, {0, 170.1}}]], "Input",ExpressionUUID->
  "84149122-d839-4f9d-b383-7477bb3ae25b"]
}], "Subsection",
 CellChangeTimes->{
  3.8039797228933616`*^9},ExpressionUUID->"81e3b3f5-8a02-42f3-886d-\
98ad0e97e345"]
}, Closed]],

Cell[CellGroupData[{

Cell["Data Handling", "Section",
 CellChangeTimes->{{3.8032816174492855`*^9, 3.8032816785920906`*^9}, {
   3.803281709338129*^9, 3.8032817166811466`*^9}, 3.8032817491812572`*^9, {
   3.803281873826848*^9, 3.803281954736151*^9}, {3.8032819944444447`*^9, 
   3.8032820072434697`*^9}, {3.8032820788660564`*^9, 
   3.8032821089383297`*^9}, {3.8039798678372188`*^9, 3.8039798813135242`*^9}, 
   3.8039845851067853`*^9},ExpressionUUID->"e0e9b130-f64e-4987-82a9-\
ae377435b970"],

Cell["\<\
1. Taking a text document and transforming it into a unified format
2. Document structure : recognizing sections and headers\
\>", "Text",
 CellChangeTimes->{{3.8032820943747063`*^9, 3.803282094388669*^9}, {
   3.8032821515279837`*^9, 3.803282151810227*^9}, {3.8032870674961896`*^9, 
   3.803287067718563*^9}, 3.803287354382742*^9},
 CellLabel->"",ExpressionUUID->"c9be2c22-e6f6-42a4-b151-980163033a0e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"text", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\mualp\\\\Desktop\\\\SensorData\\\\4Pi_microscope.txt\>\
\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Lines\>\"", ",", " ", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8032822298160377`*^9, 3.8032822298339944`*^9}, {
  3.803282274201811*^9, 3.8032822888709717`*^9}, {3.803282365499707*^9, 
  3.803282439379635*^9}, {3.8032824797488737`*^9, 3.803282541847386*^9}, {
  3.803282580604702*^9, 3.8032825921475544`*^9}, {3.803283285244096*^9, 
  3.8032832974480195`*^9}, {3.803289313451552*^9, 3.803289314893729*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7e63e924-baec-40ea-b75d-797e58c3c88a"],

Cell[BoxData["\<\" A Pi microscope is a laser scanning fluorescence \
microscope with an improved axial resolution . The typical value of \[Dash]\
\[NonBreakingSpace]nm can be improved to \[Dash]\[NonBreakingSpace]nm, which \
corresponds to an almost spherical focal spot with \[Dash] times less volume \
than that of standard confocal microscopy . \"\>"], "Output",
 CellChangeTimes->{
  3.8032822904717197`*^9, 3.8032823759088173`*^9, {3.8032824222143188`*^9, 
   3.803282439795557*^9}, {3.8032824804619393`*^9, 3.803282530803841*^9}, {
   3.803282582715062*^9, 3.803282592647172*^9}, 3.803283299713973*^9, 
   3.8032893155988126`*^9, 3.8039795165345516`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"9b6d63f6-9af3-49da-b9e3-9a38f66fd5c8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Feature Extraction", "Section",
 CellChangeTimes->{{3.8032818503170195`*^9, 3.8032818666472883`*^9}, {
   3.803287149189499*^9, 3.803287149404924*^9}, {3.8039799122994814`*^9, 
   3.8039799500567226`*^9}, 
   3.8039845786114707`*^9},ExpressionUUID->"9f5b97cc-0834-4473-b2c9-\
194a7c427277"],

Cell["\<\
1. Tokens, sentence boundaries, part of speech tags, dependencies
2. Candidate terms
3. Feature vectors\
\>", "Text",
 CellChangeTimes->{{3.8032871588302593`*^9, 3.803287173117646*^9}, {
   3.803287211334221*^9, 3.8032872117101755`*^9}, {3.8032873057608943`*^9, 
   3.803287306138854*^9}, 
   3.8032873522893686`*^9},ExpressionUUID->"c8b1c74f-a022-442d-ab47-\
70ef3c1c5d56"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"1.", " ", "Tokens"}], ",", 
   RowBox[{"sentence", " ", "boundaries"}], ",", 
   RowBox[{"part", " ", "of", " ", "speech", " ", "tags"}], ",", " ", 
   "dependencies", ",", " ", 
   RowBox[{"noun", " ", "chunks"}]}], "Subsection"]], "Input",
 CellChangeTimes->{{3.8032873121902685`*^9, 3.8032873138335*^9}, {
  3.8039846658789687`*^9, 
  3.803984682548389*^9}},ExpressionUUID->"c2027662-52ec-482c-95f7-\
f0e4809e623a"],

Cell[TextData[StyleBox["Tokenization", "Subsubsection"]], "Text",
 CellChangeTimes->{{3.803287285158334*^9, 3.80328728946445*^9}, 
   3.8032873499869003`*^9},ExpressionUUID->"199d92fb-416d-43e4-a8c2-\
b838552cf655"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextWords", "[", 
  "\"\<A Pi microscope is a laser scanning fluorescence microscope with an \
improved axial resolution. Next sentence.\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8039803672098384`*^9, 3.803980404759534*^9}, {
  3.803980894154498*^9, 3.8039809032275286`*^9}, {3.803999912342547*^9, 
  3.8039999132262173`*^9}, {3.8040013984732866`*^9, 3.804001407360894*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"96c8d8f0-2381-4bfe-b3a4-da14038584c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"A\"\>", ",", "\<\"Pi\"\>", ",", "\<\"microscope\"\>", 
   ",", "\<\"is\"\>", ",", "\<\"a\"\>", ",", "\<\"laser\"\>", 
   ",", "\<\"scanning\"\>", ",", "\<\"fluorescence\"\>", 
   ",", "\<\"microscope\"\>", ",", "\<\"with\"\>", ",", "\<\"an\"\>", 
   ",", "\<\"improved\"\>", ",", "\<\"axial\"\>", ",", "\<\"resolution\"\>", 
   ",", "\<\"Next\"\>", ",", "\<\"sentence\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.803980859375568*^9, {3.8039808952505264`*^9, 3.803980907362486*^9}, 
   3.8039999139301453`*^9, 3.804001409000083*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"9682b0e9-b219-4fc5-8f28-aae2950a98e3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"StringSplit", "[", 
  "\"\<A Pi microscope is a laser scanning fluorescence microscope with an \
improved axial resolution. Next sentence.\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.803980828777737*^9, 3.8039809046138196`*^9}, {
  3.8039999200999403`*^9, 3.8039999211581593`*^9}, {3.804001414502599*^9, 
  3.8040014181533456`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"87240b78-9292-4b50-b0e3-6890df76ea3c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"A\"\>", ",", "\<\"Pi\"\>", ",", "\<\"microscope\"\>", 
   ",", "\<\"is\"\>", ",", "\<\"a\"\>", ",", "\<\"laser\"\>", 
   ",", "\<\"scanning\"\>", ",", "\<\"fluorescence\"\>", 
   ",", "\<\"microscope\"\>", ",", "\<\"with\"\>", ",", "\<\"an\"\>", 
   ",", "\<\"improved\"\>", ",", "\<\"axial\"\>", ",", "\<\"resolution.\"\>", 
   ",", "\<\"Next\"\>", ",", "\<\"sentence.\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8039808631295767`*^9, 3.803980905550317*^9}, {
   3.803999917003253*^9, 3.8039999218512273`*^9}, 3.8040014187517667`*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"68f75c58-4518-46eb-b4ed-f1f5f37a876b"],

Cell[CellGroupData[{

Cell["Sentence Boundary", "Subsubsection",
 CellChangeTimes->{{3.80328729277061*^9, 3.8032872985342093`*^9}, 
   3.803287348339303*^9},ExpressionUUID->"5f1e05a9-e9e1-4302-9227-\
1c4de3119834"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextSentences", "[", "text", "]"}]], "Input",
 CellChangeTimes->{{3.803289283792642*^9, 3.8032892855688972`*^9}, {
  3.8032893239588776`*^9, 3.8032893242890263`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"cf0b6674-85fb-4e5d-a2a6-949198305214"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"A Pi microscope is a laser scanning fluorescence microscope \
with an improved axial resolution .\"\>", 
   ",", "\<\"The typical value of \[Dash]\[NonBreakingSpace]nm can be \
improved to \[Dash]\[NonBreakingSpace]nm, which corresponds to an almost \
spherical focal spot with \[Dash] times less volume than that of standard \
confocal microscopy .\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.803981125698015*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"34d5935f-5d03-40a6-a6bb-2f0780d5db66"]
}, Open  ]],

Cell["Character offset (starting from 1):", "Text",
 CellChangeTimes->{{3.803981144483873*^9, 3.8039811496003876`*^9}, {
  3.803981182665213*^9, 
  3.8039811932940207`*^9}},ExpressionUUID->"f44b2ca0-ae03-4b9c-81b1-\
89f1f1269058"],

Cell[BoxData[
 RowBox[{"StringPosition", "[", 
  RowBox[{"\"\<I saw the cat on a mat.\>\"", ",", "\"\<cat\>\""}], "]"}]], \
"Input",
 CellChangeTimes->{{3.803981098855543*^9, 3.803981133727667*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"8a57b070-6be6-485d-b2ad-573a33188160"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"11", ",", "13"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.803981130612813*^9, 3.803981135625313*^9}},
 CellLabel->"Out[33]=",ExpressionUUID->"8474b23f-4727-4844-83e2-d6fe1c5692da"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part of speech", "Subsubsection",
 CellChangeTimes->{{3.8032873166226006`*^9, 
  3.8032873510067635`*^9}},ExpressionUUID->"286865da-3d74-4ae2-8c4d-\
78c8cf5dc4cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PartOfSpeech", "[", "\"\<microscope\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.803287410370283*^9, 3.8032874400704393`*^9}, {
  3.803287505404952*^9, 3.803287508607394*^9}},
 CellTags->"PartOfSpeech_templates",
 CellLabel->"In[30]:=",ExpressionUUID->"7349c777-ea4c-4692-b18a-cc119b46e4a7"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{"\"noun\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"GrammaticalUnit\"", ",", "\"Noun\""}], "]"}], 
    "\"Entity[\\\"GrammaticalUnit\\\", \\\"Noun\\\"]\"", 
    "\"grammatical unit\""},
   "Entity"], "}"}]], "Output",
 CellChangeTimes->{{3.803287427868873*^9, 3.8032874422087617`*^9}, 
   3.8032875094551277`*^9},
 CellTags->"PartOfSpeech_templates",
 CellLabel->"Out[30]=",ExpressionUUID->"3195f012-b132-429a-baec-0b535c219338"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextStructure", "[", 
  RowBox[{
  "\"\<A Pi microscope is a laser scanning fluorescence microscope with an \
improved axial resolution .\>\"", ",", "\"\<PartsOfSpeech\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[34]:=",ExpressionUUID->"244bdb0b-7546-48bb-879e-8de552228bff"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{
    InterpretationBox[
     GridBox[{{
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          InterpretationBox[
           GridBox[{{"\"A\""}, {
              StyleBox["\"Determiner\"", "TextElementLabel"]}}, BaseStyle -> 
            "TextElementGrid"], 
           TextElement["A", 
            Association[
            "GrammaticalUnit" -> Entity["GrammaticalUnit", "Determiner"]]]], 
          InterpretationBox[
           GridBox[{{"\"Pi\""}, {
              StyleBox["\"Proper Noun\"", "TextElementLabel"]}}, BaseStyle -> 
            "TextElementGrid"], 
           TextElement["Pi", 
            Association[
            "GrammaticalUnit" -> Entity["GrammaticalUnit", "ProperNoun"]]]], 
          InterpretationBox[
           GridBox[{{"\"microscope\""}, {
              StyleBox["\"Noun\"", "TextElementLabel"]}}, BaseStyle -> 
            "TextElementGrid"], 
           TextElement["microscope", 
            Association[
            "GrammaticalUnit" -> Entity["GrammaticalUnit", "Noun"]]]], 
          InterpretationBox[
           GridBox[{{"\"is\""}, {
              StyleBox["\"Verb\"", "TextElementLabel"]}}, BaseStyle -> 
            "TextElementGrid"], 
           TextElement["is", 
            Association[
            "GrammaticalUnit" -> Entity["GrammaticalUnit", "Verb"]]]], 
          InterpretationBox[
           GridBox[{{"\"a\""}, {
              StyleBox["\"Determiner\"", "TextElementLabel"]}}, BaseStyle -> 
            "TextElementGrid"], 
           TextElement["a", 
            Association[
            "GrammaticalUnit" -> Entity["GrammaticalUnit", "Determiner"]]]], 
          InterpretationBox[
           GridBox[{{"\"laser\""}, {
              StyleBox["\"Noun\"", "TextElementLabel"]}}, BaseStyle -> 
            "TextElementGrid"], 
           TextElement["laser", 
            Association[
            "GrammaticalUnit" -> Entity["GrammaticalUnit", "Noun"]]]], 
          InterpretationBox[
           GridBox[{{"\"scanning\""}, {
              StyleBox["\"Verb\"", "TextElementLabel"]}}, BaseStyle -> 
            "TextElementGrid"], 
           TextElement["scanning", 
            Association[
            "GrammaticalUnit" -> Entity["GrammaticalUnit", "Verb"]]]], 
          InterpretationBox[
           GridBox[{{"\"fluorescence\""}, {
              StyleBox["\"Adjective\"", "TextElementLabel"]}}, BaseStyle -> 
            "TextElementGrid"], 
           TextElement["fluorescence", 
            Association[
            "GrammaticalUnit" -> Entity["GrammaticalUnit", "Adjective"]]]], 
          InterpretationBox[
           GridBox[{{"\"microscope\""}, {
              StyleBox["\"Noun\"", "TextElementLabel"]}}, BaseStyle -> 
            "TextElementGrid"], 
           TextElement["microscope", 
            Association[
            "GrammaticalUnit" -> Entity["GrammaticalUnit", "Noun"]]]], 
          InterpretationBox[
           GridBox[{{"\"with\""}, {
              StyleBox["\"Preposition\"", "TextElementLabel"]}}, BaseStyle -> 
            "TextElementGrid"], 
           TextElement["with", 
            Association[
            "GrammaticalUnit" -> Entity["GrammaticalUnit", "Preposition"]]]], 
          InterpretationBox[
           GridBox[{{"\"an\""}, {
              StyleBox["\"Determiner\"", "TextElementLabel"]}}, BaseStyle -> 
            "TextElementGrid"], 
           TextElement["an", 
            Association[
            "GrammaticalUnit" -> Entity["GrammaticalUnit", "Determiner"]]]], 
          InterpretationBox[
           GridBox[{{"\"improved\""}, {
              StyleBox["\"Verb\"", "TextElementLabel"]}}, BaseStyle -> 
            "TextElementGrid"], 
           TextElement["improved", 
            Association[
            "GrammaticalUnit" -> Entity["GrammaticalUnit", "Verb"]]]], 
          InterpretationBox[
           GridBox[{{"\"axial\""}, {
              StyleBox["\"Noun\"", "TextElementLabel"]}}, BaseStyle -> 
            "TextElementGrid"], 
           TextElement["axial", 
            Association[
            "GrammaticalUnit" -> Entity["GrammaticalUnit", "Noun"]]]], 
          InterpretationBox[
           GridBox[{{"\"resolution\""}, {
              StyleBox["\"Noun\"", "TextElementLabel"]}}, BaseStyle -> 
            "TextElementGrid"], 
           TextElement["resolution", 
            Association[
            "GrammaticalUnit" -> Entity["GrammaticalUnit", "Noun"]]]], 
          InterpretationBox[
           GridBox[{{"\".\""}, {
              StyleBox["\"Punctuation\"", "TextElementLabel"]}}, BaseStyle -> 
            "TextElementGrid"], 
           TextElement[".", 
            Association[
            "GrammaticalUnit" -> Entity["GrammaticalUnit", "Punctuation"]]]]},
          "RowWithSeparators"]}, {
        StyleBox["\"Sentence\"", "TextElementLabel"]}}, BaseStyle -> 
      "TextElementGrid"], 
     TextElement[{
       TextElement["A", 
        Association[
        "GrammaticalUnit" -> Entity["GrammaticalUnit", "Determiner"]]], 
       TextElement["Pi", 
        Association[
        "GrammaticalUnit" -> Entity["GrammaticalUnit", "ProperNoun"]]], 
       TextElement["microscope", 
        Association["GrammaticalUnit" -> Entity["GrammaticalUnit", "Noun"]]], 
       TextElement["is", 
        Association["GrammaticalUnit" -> Entity["GrammaticalUnit", "Verb"]]], 
       TextElement["a", 
        Association[
        "GrammaticalUnit" -> Entity["GrammaticalUnit", "Determiner"]]], 
       TextElement["laser", 
        Association["GrammaticalUnit" -> Entity["GrammaticalUnit", "Noun"]]], 
       TextElement["scanning", 
        Association["GrammaticalUnit" -> Entity["GrammaticalUnit", "Verb"]]], 
       TextElement["fluorescence", 
        Association[
        "GrammaticalUnit" -> Entity["GrammaticalUnit", "Adjective"]]], 
       TextElement["microscope", 
        Association["GrammaticalUnit" -> Entity["GrammaticalUnit", "Noun"]]], 
       TextElement["with", 
        Association[
        "GrammaticalUnit" -> Entity["GrammaticalUnit", "Preposition"]]], 
       TextElement["an", 
        Association[
        "GrammaticalUnit" -> Entity["GrammaticalUnit", "Determiner"]]], 
       TextElement["improved", 
        Association["GrammaticalUnit" -> Entity["GrammaticalUnit", "Verb"]]], 
       TextElement["axial", 
        Association["GrammaticalUnit" -> Entity["GrammaticalUnit", "Noun"]]], 
       TextElement["resolution", 
        Association["GrammaticalUnit" -> Entity["GrammaticalUnit", "Noun"]]], 
       TextElement[".", 
        Association[
        "GrammaticalUnit" -> Entity["GrammaticalUnit", "Punctuation"]]]}, 
      Association[
      "GrammaticalUnit" -> Entity["GrammaticalUnit", "Sentence"]]]]},
   "RowDefault"],
  TextElement[{
    TextElement[{
      TextElement["A", 
       Association[
       "GrammaticalUnit" -> Entity["GrammaticalUnit", "Determiner"]]], 
      TextElement["Pi", 
       Association[
       "GrammaticalUnit" -> Entity["GrammaticalUnit", "ProperNoun"]]], 
      TextElement["microscope", 
       Association["GrammaticalUnit" -> Entity["GrammaticalUnit", "Noun"]]], 
      TextElement["is", 
       Association["GrammaticalUnit" -> Entity["GrammaticalUnit", "Verb"]]], 
      TextElement["a", 
       Association[
       "GrammaticalUnit" -> Entity["GrammaticalUnit", "Determiner"]]], 
      TextElement["laser", 
       Association["GrammaticalUnit" -> Entity["GrammaticalUnit", "Noun"]]], 
      TextElement["scanning", 
       Association["GrammaticalUnit" -> Entity["GrammaticalUnit", "Verb"]]], 
      TextElement["fluorescence", 
       Association[
       "GrammaticalUnit" -> Entity["GrammaticalUnit", "Adjective"]]], 
      TextElement["microscope", 
       Association["GrammaticalUnit" -> Entity["GrammaticalUnit", "Noun"]]], 
      TextElement["with", 
       Association[
       "GrammaticalUnit" -> Entity["GrammaticalUnit", "Preposition"]]], 
      TextElement["an", 
       Association[
       "GrammaticalUnit" -> Entity["GrammaticalUnit", "Determiner"]]], 
      TextElement["improved", 
       Association["GrammaticalUnit" -> Entity["GrammaticalUnit", "Verb"]]], 
      TextElement["axial", 
       Association["GrammaticalUnit" -> Entity["GrammaticalUnit", "Noun"]]], 
      TextElement["resolution", 
       Association["GrammaticalUnit" -> Entity["GrammaticalUnit", "Noun"]]], 
      TextElement[".", 
       Association[
       "GrammaticalUnit" -> Entity["GrammaticalUnit", "Punctuation"]]]}, 
     Association[
     "GrammaticalUnit" -> 
      Entity["GrammaticalUnit", "Sentence"]]]}]]], "Output",
 CellChangeTimes->{3.803287751582595*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"de6131c9-16d2-4c20-9604-7f5365f25830"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextStructure", "[", 
  RowBox[{
  "\"\<A Pi microscope is a laser scanning fluorescence microscope with an \
improved axial resolution .\>\"", ",", "\"\<ConstituentStrings\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8039889694273033`*^9, 3.8039889838904095`*^9}, {
   3.8039892632490225`*^9, 3.8039892695675983`*^9}, 3.8039895448113613`*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"35579ed4-2802-4aaf-abc7-48bf20b8d3b0"],

Cell[BoxData[
 RowBox[{"{", "\<\"(Sentence, ((NounPhrase, (Determiner, A), (ProperNoun, \
Pi), (Noun, microscope)), (VerbPhrase, (Verb, is), (NounPhrase, (NounPhrase, \
(Determiner, a), (Noun, laser)), (VerbPhrase, (Verb, scanning), (NounPhrase, \
(Adjective, fluorescence), (Noun, microscope)), (PrepositionalPhrase, \
(Preposition, with), (NounPhrase, (Determiner, an), (Verb, improved), (Noun, \
axial), (Noun, resolution)))))), (Punctuation, .)))\"\>", "}"}]], "Output",
 CellChangeTimes->{3.8039889843821464`*^9, 3.8039895455064697`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"4291e271-edb9-4591-872c-8b3834f48d42"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dependencies", "Subsubsection",
 CellChangeTimes->{{3.803287361754631*^9, 
  3.8032873664461317`*^9}},ExpressionUUID->"e9a391a9-69f1-4338-9645-\
7bda14c9404d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextStructure", "[", 
  RowBox[{
  "\"\<A Pi microscope is a laser scanning fluorescence microscope with an \
improved axial resolution .\>\"", ",", "\"\<ConstituentGraphs\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.803287528546232*^9, 3.8032875466610107`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"4d9db2c2-73bf-473d-970a-0d76d5d00271"],

Cell[BoxData[
 RowBox[{"{", 
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{
       "Determiner1", "A1", "ProperNoun1", "Pi1", "Noun1", "microscope1", 
        "NounPhrase1", "Verb1", "is1", "Determiner2", "a1", "Noun2", "laser1",
         "NounPhrase3", "Verb2", "scanning1", "Adjective1", "fluorescence1", 
        "Noun3", "microscope2", "NounPhrase4", "Preposition1", "with1", 
        "Determiner3", "an1", "Verb3", "improved1", "Noun4", "axial1", 
        "Noun5", "resolution1", "NounPhrase5", "PrepositionalPhrase1", 
        "VerbPhrase2", "NounPhrase2", "VerbPhrase1", "Punctuation1", ".1", 
        "Sentence1"}, {
       Null, {{1, 2}, {3, 4}, {5, 6}, {7, 1}, {7, 3}, {7, 5}, {8, 9}, {10, 
        11}, {12, 13}, {14, 10}, {14, 12}, {15, 16}, {17, 18}, {19, 20}, {21, 
        17}, {21, 19}, {22, 23}, {24, 25}, {26, 27}, {28, 29}, {30, 31}, {32, 
        24}, {32, 26}, {32, 28}, {32, 30}, {33, 22}, {33, 32}, {34, 15}, {34, 
        21}, {34, 33}, {35, 14}, {35, 34}, {36, 8}, {36, 35}, {37, 38}, {39, 
        7}, {39, 36}, {39, 37}}}, {EdgeStyle -> {
          GrayLevel[0.65]}, 
        GraphLayout -> {
         "LayeredEmbedding", "RootVertex" -> "Sentence1", 
          LayerSizeFunction -> (0.5& )}, ImageSize -> 780, 
        VertexLabels -> {"Determiner3" -> Placed[
            Framed[
             Style["Determiner", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "Determiner1" -> Placed[
            Framed[
             Style["Determiner", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "Adjective1" -> Placed[
            Framed[
             Style["Adjective", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "NounPhrase5" -> Placed[
            Framed[
             Style["Noun Phrase", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "a1" -> Placed[
            Framed[
             Style["a", FontFamily -> "Arial", FontSize -> Medium], 
             Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "NounPhrase1" -> Placed[
            Framed[
             Style["Noun Phrase", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "Verb3" -> Placed[
            Framed[
             Style["Verb", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "Noun1" -> Placed[
            Framed[
             Style["Noun", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "axial1" -> Placed[
            Framed[
             Style["axial", FontFamily -> "Arial", FontSize -> Medium], 
             Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], ".1" -> Placed[
            Framed[
             Style[".", FontFamily -> "Arial", FontSize -> Medium], 
             Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "scanning1" -> Placed[
            Framed[
             Style["scanning", FontFamily -> "Arial", FontSize -> Medium], 
             Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "is1" -> Placed[
            Framed[
             Style["is", FontFamily -> "Arial", FontSize -> Medium], 
             Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "NounPhrase4" -> Placed[
            Framed[
             Style["Noun Phrase", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "Noun2" -> Placed[
            Framed[
             Style["Noun", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "with1" -> Placed[
            Framed[
             Style["with", FontFamily -> "Arial", FontSize -> Medium], 
             Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "Verb1" -> Placed[
            Framed[
             Style["Verb", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "Sentence1" -> Placed[
            Framed[
             Style[
              Entity["GrammaticalUnit", "Sentence"], 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "Noun3" -> Placed[
            Framed[
             Style["Noun", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "VerbPhrase1" -> Placed[
            Framed[
             Style["Verb Phrase", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "resolution1" -> Placed[
            Framed[
             Style["resolution", FontFamily -> "Arial", FontSize -> Medium], 
             Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "ProperNoun1" -> Placed[
            Framed[
             Style["Proper Noun", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "A1" -> Placed[
            Framed[
             Style["A", FontFamily -> "Arial", FontSize -> Medium], 
             Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "NounPhrase3" -> Placed[
            Framed[
             Style["Noun Phrase", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "an1" -> Placed[
            Framed[
             Style["an", FontFamily -> "Arial", FontSize -> Medium], 
             Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "laser1" -> Placed[
            Framed[
             Style["laser", FontFamily -> "Arial", FontSize -> Medium], 
             Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "fluorescence1" -> Placed[
            Framed[
             Style["fluorescence", FontFamily -> "Arial", FontSize -> Medium],
              Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "improved1" -> Placed[
            Framed[
             Style["improved", FontFamily -> "Arial", FontSize -> Medium], 
             Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "Pi1" -> Placed[
            Framed[
             Style["Pi", FontFamily -> "Arial", FontSize -> Medium], 
             Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "Preposition1" -> Placed[
            Framed[
             Style["Preposition", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "Verb2" -> Placed[
            Framed[
             Style["Verb", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "microscope2" -> Placed[
            Framed[
             Style["microscope", FontFamily -> "Arial", FontSize -> Medium], 
             Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "NounPhrase2" -> Placed[
            Framed[
             Style["Noun Phrase", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "PrepositionalPhrase1" -> Placed[
            Framed[
             Style["Prepositional Phrase", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "Punctuation1" -> Placed[
            Framed[
             Style["Punctuation", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "Noun5" -> Placed[
            Framed[
             Style["Noun", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "microscope1" -> Placed[
            Framed[
             Style["microscope", FontFamily -> "Arial", FontSize -> Medium], 
             Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "Noun4" -> Placed[
            Framed[
             Style["Noun", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "VerbPhrase2" -> Placed[
            Framed[
             Style["Verb Phrase", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center], "Determiner2" -> Placed[
            Framed[
             Style["Determiner", 
              GrayLevel[0.55]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, 
             FrameMargins -> {{0, 0}, {-1, -2}}, FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Center]}, VertexSize -> {0}, VertexStyle -> {
          Directive[
           GrayLevel[1], 
           Opacity[0]]}}]]}, 
     TagBox[GraphicsGroupBox[{
        {GrayLevel[0.65], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGBQA2ImKIaBXPcN8nVWDA4wfvXSzUYG33/ao8vXgMVf2svs
YVNLqWSG89HlYfpxyaPq/4km/xNNP7o8pv0w/uz8ZsHUaE6HMwaxOl472Bxk
oeIw/TA+zHx0ea8nN8W9Z/E4wMyDmQPhf7aH8WH2ostDxDnh5mtLcVmKmfHC
5WF8mH50eXT96HybtmssM+8Kwd17tPG20sebgnD9MD7MfHT5XZbBH2bul4Cb
V/rNUPO6hChcPYxfAebfxJCH+FcMbp5Kdof+3nAJuDyMD9OPLo+uH52P7r4r
9++ZLp4mDdcP48PMR5df//HUXqel8nDzmkNMbTqvysHVw/iwdI0uDwkvRbh5
M5+4LjTnUoTLw/gw/ejy6Po/yhUuWbVSCS4P48P0o8uj6/eMnLNc1lMFLg/j
w/Sjy6PrR+ejhw86Hz380fno6Q+dj55/0Pno+fP1Lx3uehkxuDyMDzMPXR5d
PwAbcvXw
          "]]}, 
        {GrayLevel[1], Opacity[0], EdgeForm[{GrayLevel[0], Opacity[
         0.7]}], {DiskBox[{0., 2.028560874526127}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Determiner\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {0., 2.028560874526127},
           BaseStyle->"Graphics"]}, {DiskBox[{0., 1.6228486996209017}, 0.], 
          InsetBox[
           FrameBox[
            StyleBox["\<\"A\"\>",
             StripOnInput->False,
             FontFamily->"Arial",
             FontSize->Medium],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {0., 1.6228486996209017},
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.811424349810451, 2.028560874526127}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Proper Noun\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {0.811424349810451, 2.028560874526127},
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.811424349810451, 1.6228486996209017}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Pi\"\>",
             StripOnInput->False,
             FontFamily->"Arial",
             FontSize->Medium],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {0.811424349810451, 1.6228486996209017},
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.622848699620902, 2.028560874526127}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Noun\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {1.622848699620902, 2.028560874526127},
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.622848699620902, 1.6228486996209017}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"microscope\"\>",
             StripOnInput->False,
             FontFamily->"Arial",
             FontSize->Medium],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {1.622848699620902, 1.6228486996209017},
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.811424349810451, 2.4342730494313525}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Noun Phrase\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {0.811424349810451, 2.4342730494313525},
           BaseStyle->"Graphics"]}, {
          DiskBox[{2.434273049431353, 2.028560874526127}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Verb\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {2.434273049431353, 2.028560874526127},
           BaseStyle->"Graphics"]}, {
          DiskBox[{2.434273049431353, 1.6228486996209017}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"is\"\>",
             StripOnInput->False,
             FontFamily->"Arial",
             FontSize->Medium],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {2.434273049431353, 1.6228486996209017},
           BaseStyle->"Graphics"]}, {
          DiskBox[{2.839985224336578, 1.2171365247156762}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Determiner\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {2.839985224336578, 1.2171365247156762},
           BaseStyle->"Graphics"]}, {
          DiskBox[{2.839985224336578, 0.811424349810451}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"a\"\>",
             StripOnInput->False,
             FontFamily->"Arial",
             FontSize->Medium],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {2.839985224336578, 0.811424349810451},
           BaseStyle->"Graphics"]}, {
          DiskBox[{3.651409574147029, 1.2171365247156762}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Noun\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {3.651409574147029, 1.2171365247156762},
           BaseStyle->"Graphics"]}, {
          DiskBox[{3.651409574147029, 0.811424349810451}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"laser\"\>",
             StripOnInput->False,
             FontFamily->"Arial",
             FontSize->Medium],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {3.651409574147029, 0.811424349810451},
           BaseStyle->"Graphics"]}, {
          DiskBox[{3.245697399241804, 1.6228486996209017}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Noun Phrase\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {3.245697399241804, 1.6228486996209017},
           BaseStyle->"Graphics"]}, {
          DiskBox[{4.46283392395748, 1.2171365247156762}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Verb\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {4.46283392395748, 1.2171365247156762},
           BaseStyle->"Graphics"]}, {
          DiskBox[{4.46283392395748, 0.811424349810451}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"scanning\"\>",
             StripOnInput->False,
             FontFamily->"Arial",
             FontSize->Medium],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {4.46283392395748, 0.811424349810451},
           BaseStyle->"Graphics"]}, {
          DiskBox[{5.2742582737679315, 0.811424349810451}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Adjective\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {5.2742582737679315, 0.811424349810451},
           BaseStyle->"Graphics"]}, {
          DiskBox[{5.2742582737679315, 0.40571217490522526}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"fluorescence\"\>",
             StripOnInput->False,
             FontFamily->"Arial",
             FontSize->Medium],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {5.2742582737679315, 0.40571217490522526},
           BaseStyle->"Graphics"]}, {
          DiskBox[{6.085682623578382, 0.811424349810451}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Noun\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {6.085682623578382, 0.811424349810451},
           BaseStyle->"Graphics"]}, {
          DiskBox[{6.085682623578382, 0.40571217490522526}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"microscope\"\>",
             StripOnInput->False,
             FontFamily->"Arial",
             FontSize->Medium],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {6.085682623578382, 0.40571217490522526},
           BaseStyle->"Graphics"]}, {
          DiskBox[{5.679970448673156, 1.2171365247156762}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Noun Phrase\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {5.679970448673156, 1.2171365247156762},
           BaseStyle->"Graphics"]}, {
          DiskBox[{6.8971069733888335, 0.811424349810451}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Preposition\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {6.8971069733888335, 0.811424349810451},
           BaseStyle->"Graphics"]}, {
          DiskBox[{6.8971069733888335, 0.40571217490522526}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"with\"\>",
             StripOnInput->False,
             FontFamily->"Arial",
             FontSize->Medium],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {6.8971069733888335, 0.40571217490522526},
           BaseStyle->"Graphics"]}, {
          DiskBox[{7.708531323199284, 0.40571217490522526}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Determiner\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {7.708531323199284, 0.40571217490522526},
           BaseStyle->"Graphics"]}, {DiskBox[{7.708531323199284, 0.}, 0.], 
          InsetBox[
           FrameBox[
            StyleBox["\<\"an\"\>",
             StripOnInput->False,
             FontFamily->"Arial",
             FontSize->Medium],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {7.708531323199284, 0.},
           BaseStyle->"Graphics"]}, {
          DiskBox[{8.519955673009735, 0.40571217490522526}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Verb\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {8.519955673009735, 0.40571217490522526},
           BaseStyle->"Graphics"]}, {DiskBox[{8.519955673009735, 0.}, 0.], 
          InsetBox[
           FrameBox[
            StyleBox["\<\"improved\"\>",
             StripOnInput->False,
             FontFamily->"Arial",
             FontSize->Medium],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {8.519955673009735, 0.},
           BaseStyle->"Graphics"]}, {
          DiskBox[{9.331380022820186, 0.40571217490522526}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Noun\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {9.331380022820186, 0.40571217490522526},
           BaseStyle->"Graphics"]}, {DiskBox[{9.331380022820186, 0.}, 0.], 
          InsetBox[
           FrameBox[
            StyleBox["\<\"axial\"\>",
             StripOnInput->False,
             FontFamily->"Arial",
             FontSize->Medium],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {9.331380022820186, 0.},
           BaseStyle->"Graphics"]}, {
          DiskBox[{10.142804372630637, 0.40571217490522526}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Noun\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {10.142804372630637, 0.40571217490522526},
           BaseStyle->"Graphics"]}, {DiskBox[{10.142804372630637, 0.}, 0.], 
          InsetBox[
           FrameBox[
            StyleBox["\<\"resolution\"\>",
             StripOnInput->False,
             FontFamily->"Arial",
             FontSize->Medium],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {10.142804372630637, 0.},
           BaseStyle->"Graphics"]}, {
          DiskBox[{8.92566784791496, 0.811424349810451}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Noun Phrase\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {8.92566784791496, 0.811424349810451},
           BaseStyle->"Graphics"]}, {
          DiskBox[{7.911387410651897, 1.2171365247156762}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Prepositional Phrase\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {7.911387410651897, 1.2171365247156762},
           BaseStyle->"Graphics"]}, {
          DiskBox[{6.1871106673046885, 1.6228486996209017}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Verb Phrase\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {6.1871106673046885, 1.6228486996209017},
           BaseStyle->"Graphics"]}, {
          DiskBox[{4.716404033273246, 2.028560874526127}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Noun Phrase\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {4.716404033273246, 2.028560874526127},
           BaseStyle->"Graphics"]}, {
          DiskBox[{3.5753385413522993, 2.4342730494313525}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Verb Phrase\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {3.5753385413522993, 2.4342730494313525},
           BaseStyle->"Graphics"]}, {
          DiskBox[{5.527828383083697, 2.4342730494313525}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\"Punctuation\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {5.527828383083697, 2.4342730494313525},
           BaseStyle->"Graphics"]}, {
          DiskBox[{5.527828383083697, 2.028560874526127}, 0.], InsetBox[
           FrameBox[
            StyleBox["\<\".\"\>",
             StripOnInput->False,
             FontFamily->"Arial",
             FontSize->Medium],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {5.527828383083697, 2.028560874526127},
           BaseStyle->"Graphics"]}, {
          DiskBox[{3.169626366447074, 2.839985224336578}, 0.], InsetBox[
           FrameBox[
            StyleBox[
             TemplateBox[{"\"sentence\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"GrammaticalUnit\"", ",", "\"Sentence\""}], "]"}], 
               "\"Entity[\\\"GrammaticalUnit\\\", \\\"Sentence\\\"]\""},
              "EntityTraditionalFramed"],
             StripOnInput->False,
             LineColor->GrayLevel[0.55],
             FrontFaceColor->GrayLevel[0.55],
             BackFaceColor->GrayLevel[0.55],
             GraphicsColor->GrayLevel[0.55],
             FontColor->GrayLevel[0.55]],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->{{0, 0}, {-1, -2}},
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], {3.169626366447074, 2.839985224336578},
           BaseStyle->"Graphics"]}}}],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->780], "}"}]], "Output",
 CellChangeTimes->{3.803287563555767*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"aa3da772-8a38-4241-8bb4-552ef0a481d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextStructure", "[", 
  RowBox[{
  "\"\<A Pi microscope is a laser scanning fluorescence microscope with an \
improved axial resolution .\>\"", ",", "\"\<DependencyGraphs\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{3.8032876848705606`*^9, 3.8032878191652594`*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"57668be6-8f30-4a57-944b-d1776b21f151"],

Cell[BoxData[
 RowBox[{"{", 
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{
       "microscope3", "laser6", "is4", "a5", "scanning7", "A1", "Pi2", 
        "microscope9", "with10", "fluorescence8", "resolution14", "an11", 
        "improved12", "axial13"}, {{{1, 2}, {3, 2}, {4, 2}, {5, 2}, {6, 1}, {
        7, 1}, {8, 5}, {9, 5}, {10, 8}, {11, 9}, {12, 11}, {13, 11}, {14, 
        11}}, Null}, {BaselinePosition -> (Bottom -> Bottom), EdgeStyle -> {
          Directive[
           Arrowheads[{{Medium, 0.5}}], 
           GrayLevel[0.65]]}, GraphLayout -> "LinearEmbedding", ImageMargins -> 
        0, ImageSize -> 1260, 
        VertexCoordinates -> {{0.30000000000000004`, 0}, {
          0.6000000000000001, 0}, {0.4, 0}, {0.5, 0}, {
          0.7000000000000001, 0}, {0.1, 0}, {0.2, 0}, {0.9, 0}, {1., 0}, {
          0.8, 0}, {1.4000000000000001`, 0}, {1.1, 0}, {
          1.2000000000000002`, 0}, {1.3, 0}}, 
        VertexLabels -> {"laser6" -> Placed[
            Framed[
             TextElement["laser", 
              Association[
              "GrammaticalUnit" -> Entity["GrammaticalUnit", "Root"], 
               "Parent" -> {"root", 6}]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, FrameMargins -> None, 
             FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Top], "with10" -> Placed[
            Framed[
             TextElement["with", 
              Association[
              "GrammaticalUnit" -> 
               Entity["GrammaticalUnit", "PrepositionalModifier"], 
               "Parent" -> {"scanning", 7}]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, FrameMargins -> None, 
             FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Top], "improved12" -> Placed[
            Framed[
             TextElement["improved", 
              Association[
              "GrammaticalUnit" -> 
               Entity["GrammaticalUnit", "AdjectivalModifier"], 
               "Parent" -> {"resolution", 14}]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, FrameMargins -> None, 
             FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Top], "an11" -> Placed[
            Framed[
             TextElement["an", 
              Association[
              "GrammaticalUnit" -> Entity["GrammaticalUnit", "Determiner"], 
               "Parent" -> {"resolution", 14}]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, FrameMargins -> None, 
             FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Top], "scanning7" -> Placed[
            Framed[
             TextElement["scanning", 
              Association[
              "GrammaticalUnit" -> 
               Entity["GrammaticalUnit", "ReducedNonFiniteVerbalModifier"], 
               "Parent" -> {"laser", 6}]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, FrameMargins -> None, 
             FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Top], "A1" -> Placed[
            Framed[
             TextElement["A", 
              Association[
              "GrammaticalUnit" -> Entity["GrammaticalUnit", "Determiner"], 
               "Parent" -> {"microscope", 3}]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, FrameMargins -> None, 
             FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Top], "is4" -> Placed[
            Framed[
             TextElement["is", 
              Association[
              "GrammaticalUnit" -> Entity["GrammaticalUnit", "Copula"], 
               "Parent" -> {"laser", 6}]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, FrameMargins -> None, 
             FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Top], "a5" -> Placed[
            Framed[
             TextElement["a", 
              Association[
              "GrammaticalUnit" -> Entity["GrammaticalUnit", "Determiner"], 
               "Parent" -> {"laser", 6}]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, FrameMargins -> None, 
             FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Top], "Pi2" -> Placed[
            Framed[
             TextElement["Pi", 
              Association[
              "GrammaticalUnit" -> 
               Entity["GrammaticalUnit", "NounCompoundModifier"], 
               "Parent" -> {"microscope", 3}]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, FrameMargins -> None, 
             FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Top], "fluorescence8" -> Placed[
            Framed[
             TextElement["fluorescence", 
              Association[
              "GrammaticalUnit" -> 
               Entity["GrammaticalUnit", "AdjectivalModifier"], 
               "Parent" -> {"microscope", 9}]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, FrameMargins -> None, 
             FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Top], "resolution14" -> Placed[
            Framed[
             TextElement["resolution", 
              Association[
              "GrammaticalUnit" -> 
               Entity["GrammaticalUnit", "ObjectOfAPreposition"], 
               "Parent" -> {"with", 10}]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, FrameMargins -> None, 
             FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Top], "axial13" -> Placed[
            Framed[
             TextElement["axial", 
              Association[
              "GrammaticalUnit" -> 
               Entity["GrammaticalUnit", "NounCompoundModifier"], 
               "Parent" -> {"resolution", 14}]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, FrameMargins -> None, 
             FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Top], "microscope9" -> Placed[
            Framed[
             TextElement["microscope", 
              Association[
              "GrammaticalUnit" -> Entity["GrammaticalUnit", "DirectObject"], 
               "Parent" -> {"scanning", 7}]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, FrameMargins -> None, 
             FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Top], "microscope3" -> Placed[
            Framed[
             TextElement["microscope", 
              Association[
              "GrammaticalUnit" -> 
               Entity["GrammaticalUnit", "NominalSubject"], 
               "Parent" -> {"laser", 6}]], Background -> Directive[
               GrayLevel[1], 
               Opacity[1]], RoundingRadius -> 2, FrameMargins -> None, 
             FrameStyle -> Directive[
               GrayLevel[1], 
               Opacity[0]]], Top]}, VertexSize -> {0}, VertexStyle -> {
          Directive[
           GrayLevel[1], 
           Opacity[0.1]]}}]]}, 
     TagBox[GraphicsGroupBox[{
        {GrayLevel[0.65], Opacity[0.7], Arrowheads[{{Medium, 0.5}}], 
         ArrowBox[BezierCurveBox[{{0.30000000000000004`, 0.}, {
          0.45000000000000007`, 0.15000000000000002`}, {0.6000000000000001, 
          0.}}]], ArrowBox[BezierCurveBox[{{0.4, 0.}, {0.5, 
          0.10000000000000009`}, {0.6000000000000001, 0.}}]], 
         ArrowBox[BezierCurveBox[{{0.5, 0.}, {0.55, 0.050000000000000044`}, {
          0.6000000000000001, 0.}}]], 
         ArrowBox[BezierCurveBox[{{0.7000000000000001, 0.}, {
          0.6500000000000001, 0.04999999999999993}, {0.6000000000000001, 
          0.}}]], 
         ArrowBox[BezierCurveBox[{{0.1, 0.}, {0.2, 0.10000000000000003`}, {
          0.30000000000000004`, 0.}}]], 
         ArrowBox[BezierCurveBox[{{0.2, 0.}, {0.25, 0.050000000000000044`}, {
          0.30000000000000004`, 0.}}]], 
         ArrowBox[BezierCurveBox[{{0.9, 0.}, {0.8, 0.09999999999999998}, {
          0.7000000000000001, 0.}}]], 
         ArrowBox[BezierCurveBox[{{1., 0.}, {0.8500000000000001, 
          0.1499999999999999}, {0.7000000000000001, 0.}}]], 
         ArrowBox[BezierCurveBox[{{0.8, 0.}, {0.8500000000000001, 
          0.04999999999999993}, {0.9, 0.}}]], 
         ArrowBox[BezierCurveBox[{{1.4000000000000001`, 0.}, {
          1.2000000000000002`, 0.19999999999999996`}, {1., 0.}}]], 
         ArrowBox[BezierCurveBox[{{1.1, 0.}, {1.25, 0.15000000000000013`}, {
          1.4000000000000001`, 0.}}]], 
         ArrowBox[BezierCurveBox[{{1.2000000000000002`, 0.}, {
          1.3000000000000003`, 0.09999999999999987}, {1.4000000000000001`, 
          0.}}]], ArrowBox[BezierCurveBox[{{1.3, 0.}, {1.35, 
          0.050000000000000044`}, {1.4000000000000001`, 0.}}]]}, 
        {GrayLevel[1], Opacity[0.1], EdgeForm[{GrayLevel[0], Opacity[
         0.7]}], {DiskBox[{0.30000000000000004, 0.}, 0.], InsetBox[
           FrameBox[
            FormBox[GridBox[{
               {"\<\"microscope\"\>"},
               {
                StyleBox["\<\"Nominal Subject\"\>", "TextElementLabel"]}
              },
              BaseStyle->"TextElementGrid"],
             TraditionalForm],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->None,
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], Offset[{0, -2}, {0.30000000000000004, 0.}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {DiskBox[{0.6000000000000001, 0.}, 0.], 
          InsetBox[
           FrameBox[
            FormBox[GridBox[{
               {"\<\"laser\"\>"},
               {
                StyleBox["\<\"Root\"\>", "TextElementLabel"]}
              },
              BaseStyle->"TextElementGrid"],
             TraditionalForm],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->None,
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], Offset[{0, -2}, {0.6000000000000001, 0.}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {DiskBox[{0.4, 0.}, 0.], InsetBox[
           FrameBox[
            FormBox[GridBox[{
               {"\<\"is\"\>"},
               {
                StyleBox["\<\"Copula\"\>", "TextElementLabel"]}
              },
              BaseStyle->"TextElementGrid"],
             TraditionalForm],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->None,
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], Offset[{0, -2}, {0.4, 0.}], ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {DiskBox[{0.5, 0.}, 0.], InsetBox[
           FrameBox[
            FormBox[GridBox[{
               {"\<\"a\"\>"},
               {
                StyleBox["\<\"Determiner\"\>", "TextElementLabel"]}
              },
              BaseStyle->"TextElementGrid"],
             TraditionalForm],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->None,
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], Offset[{0, -2}, {0.5, 0.}], ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {DiskBox[{0.7000000000000001, 0.}, 0.], 
          InsetBox[
           FrameBox[
            FormBox[GridBox[{
               {"\<\"scanning\"\>"},
               {
                StyleBox["\<\"Reduced Modifier\"\>", "TextElementLabel"]}
              },
              BaseStyle->"TextElementGrid"],
             TraditionalForm],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->None,
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], Offset[{0, -2}, {0.7000000000000001, 0.}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {DiskBox[{0.1, 0.}, 0.], InsetBox[
           FrameBox[
            FormBox[GridBox[{
               {"\<\"A\"\>"},
               {
                StyleBox["\<\"Determiner\"\>", "TextElementLabel"]}
              },
              BaseStyle->"TextElementGrid"],
             TraditionalForm],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->None,
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], Offset[{0, -2}, {0.1, 0.}], ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {DiskBox[{0.2, 0.}, 0.], InsetBox[
           FrameBox[
            FormBox[GridBox[{
               {"\<\"Pi\"\>"},
               {
                StyleBox["\<\"Compound Modifier\"\>", "TextElementLabel"]}
              },
              BaseStyle->"TextElementGrid"],
             TraditionalForm],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->None,
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], Offset[{0, -2}, {0.2, 0.}], ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {DiskBox[{0.9, 0.}, 0.], InsetBox[
           FrameBox[
            FormBox[GridBox[{
               {"\<\"microscope\"\>"},
               {
                StyleBox["\<\"Direct Object\"\>", "TextElementLabel"]}
              },
              BaseStyle->"TextElementGrid"],
             TraditionalForm],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->None,
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], Offset[{0, -2}, {0.9, 0.}], ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {DiskBox[{1., 0.}, 0.], InsetBox[
           FrameBox[
            FormBox[GridBox[{
               {"\<\"with\"\>"},
               {
                StyleBox["\<\"Prepositional Modifier\"\>", "TextElementLabel"]}
              },
              BaseStyle->"TextElementGrid"],
             TraditionalForm],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->None,
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], Offset[{0, -2}, {1., 0.}], ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {DiskBox[{0.8, 0.}, 0.], InsetBox[
           FrameBox[
            FormBox[GridBox[{
               {"\<\"fluorescence\"\>"},
               {
                StyleBox["\<\"Adjectival Modifier\"\>", "TextElementLabel"]}
              },
              BaseStyle->"TextElementGrid"],
             TraditionalForm],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->None,
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], Offset[{0, -2}, {0.8, 0.}], ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {DiskBox[{1.4000000000000001, 0.}, 0.], 
          InsetBox[
           FrameBox[
            FormBox[GridBox[{
               {"\<\"resolution\"\>"},
               {
                StyleBox["\<\"Preposition Object\"\>", "TextElementLabel"]}
              },
              BaseStyle->"TextElementGrid"],
             TraditionalForm],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->None,
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], Offset[{0, -2}, {1.4000000000000001, 0.}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {DiskBox[{1.1, 0.}, 0.], InsetBox[
           FrameBox[
            FormBox[GridBox[{
               {"\<\"an\"\>"},
               {
                StyleBox["\<\"Determiner\"\>", "TextElementLabel"]}
              },
              BaseStyle->"TextElementGrid"],
             TraditionalForm],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->None,
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], Offset[{0, -2}, {1.1, 0.}], ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {DiskBox[{1.2000000000000002, 0.}, 0.], 
          InsetBox[
           FrameBox[
            FormBox[GridBox[{
               {"\<\"improved\"\>"},
               {
                StyleBox["\<\"Adjectival Modifier\"\>", "TextElementLabel"]}
              },
              BaseStyle->"TextElementGrid"],
             TraditionalForm],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->None,
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], Offset[{0, -2}, {1.2000000000000002, 0.}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {DiskBox[{1.3, 0.}, 0.], InsetBox[
           FrameBox[
            FormBox[GridBox[{
               {"\<\"axial\"\>"},
               {
                StyleBox["\<\"Compound Modifier\"\>", "TextElementLabel"]}
              },
              BaseStyle->"TextElementGrid"],
             TraditionalForm],
            Background->Directive[
              GrayLevel[1], 
              Opacity[1]],
            FrameMargins->None,
            FrameStyle->Directive[
              GrayLevel[1], 
              Opacity[0]],
            RoundingRadius->2,
            StripOnInput->False], Offset[{0, -2}, {1.3, 0.}], ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}}}],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   BaselinePosition->(Bottom -> Bottom),
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageMargins->0,
   ImageSize->1260], "}"}]], "Output",
 CellChangeTimes->{3.803287687776844*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"0f388dc9-b68e-4ab6-9dbf-b6f53c30c16e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextStructure", "[", 
  RowBox[{
  "\"\<A Pi microscope is a laser scanning fluorescence microscope with an \
improved axial resolution .\>\"", ",", "\"\<DependencyStrings\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.803287781746369*^9, 3.8032877955284557`*^9}, {
   3.80328787066041*^9, 3.8032878764281015`*^9}, {3.8039957314027367`*^9, 
   3.8039957332059155`*^9}, 3.8039968767032824`*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"7f386a5a-6d37-46a9-9bc3-8e2f2e2f94b6"],

Cell[BoxData[
 RowBox[{"{", "\<\"(laser, 6)((nsubj, (microscope, 3)((det, (A, 1)), (nn, \
(Pi, 2)))), (cop, (is, 4)), (det, (a, 5)), (vmod, (scanning, 7)((dobj, \
(microscope, 9)((amod, (fluorescence, 8)))), (prep, (with, 10)((pobj, \
(resolution, 14)((det, (an, 11)), (amod, (improved, 12)), (nn, (axial, \
13)))))))))\"\>", "}"}]], "Output",
 CellChangeTimes->{3.8032877823786774`*^9, 3.8032878772728434`*^9, 
  3.8039968802555404`*^9, 3.803998771751375*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"55030a61-d5fb-4f9d-9312-ab9111f40f33"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TextStructure", "[", 
   RowBox[{
   "\"\<A Pi microscope is a laser scanning fluorescence microscope with an \
improved axial resolution .\>\"", ",", "\"\<DependencyStrings\>\""}], "]"}], 
  "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.803998787315959*^9, 3.803998792403972*^9}, 
   3.8039988555965786`*^9, {3.8039989470001097`*^9, 3.803998963163787*^9}, {
   3.8039990167905207`*^9, 3.803999030987768*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"f0d3ad44-fb02-4333-a5c6-95c9dcbce22e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "{", "\<\"(laser, 6)((nsubj, (microscope, 3)((det, (A, 1)), (nn, (Pi, \
2)))), (cop, (is, 4)), (det, (a, 5)), (vmod, (scanning, 7)((dobj, \
(microscope, 9)((amod, (fluorescence, 8)))), (prep, (with, 10)((pobj, \
(resolution, 14)((det, (an, 11)), (amod, (improved, 12)), (nn, (axial, \
13)))))))))\"\>", "}"}], "[", "1", "]"}]], "Output",
 CellChangeTimes->{{3.803999020226076*^9, 3.8039990333487597`*^9}},
 CellLabel->"Out[67]=",ExpressionUUID->"32dce26d-4e6f-4850-ba09-c339904422bd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Noun chunks", "Subsubsection",
 CellChangeTimes->{{3.803984690669362*^9, 
  3.8039847149838543`*^9}},ExpressionUUID->"8f4d1c32-2705-4915-abf6-\
8bcb593e7932"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextCases", "[", 
  RowBox[{
  "\"\<Glushko considering Korolev to be irresponsibly cavalier and \
autocratic in his attitudes towards things outside his competence.\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<NounPhrase\>\"", ",", "\"\<Noun\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.803984785131135*^9, 3.8039847851471186`*^9}, {
  3.8039848842280784`*^9, 3.8039848994973583`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"56c7e78a-5c63-4a43-bad8-cd35c2949c2b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"NounPhrase\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Glushko\"\>", ",", "\<\"Korolev\"\>", 
      ",", "\<\"his attitudes\"\>", ",", "\<\"things\"\>", 
      ",", "\<\"things outside his competence\"\>", 
      ",", "\<\"his competence\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"Noun\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"attitudes\"\>", ",", "\<\"things\"\>", 
      ",", "\<\"competence\"\>"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.803984900673208*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"ea9d266c-facb-469c-a89b-af5b584b3afa"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Lemmatization", "Section",
 CellChangeTimes->{{3.803979959475336*^9, 
  3.8039799740012355`*^9}},ExpressionUUID->"8fd58f8b-2c55-44a4-a77f-\
d385794be158"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordData", "[", 
  RowBox[{"\"\<walking\>\"", ",", "\"\<BaseForm\>\""}], "]"}]], "Input",
 CellLabel->"In[96]:=",ExpressionUUID->"7145d4cc-f8b8-4a72-b50f-1e6a6faf9216"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Score\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Play\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"TakeTheAir\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Locomote\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Obligate\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Accompany\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"GetOver\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Pace\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Associate\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Behave\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8040019440201063`*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"45d6743f-dc86-4094-b692-db9d82d58c2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"WordData", "[", 
    RowBox[{"word", ",", "\"\<BaseForm\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"word", ",", 
     RowBox[{"TextWords", "[", "\"\<I am walking at the park.\>\"", "]"}]}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.80400195698251*^9, 3.8040020135953236`*^9}, {
  3.8040020557486672`*^9, 3.804002116373915*^9}, {3.8040022584231267`*^9, 
  3.804002265674217*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"f6c9b6b4-c98f-4468-a143-44055a23eef4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"I\"\>", ",", "\<\"Noun\"\>", 
       ",", "\<\"LetterOfTheAlphabet\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"I\"\>", ",", "\<\"Noun\"\>", ",", "\<\"Figure\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"I\"\>", ",", "\<\"Noun\"\>", ",", "\<\"Halogen\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"I\"\>", ",", "\<\"Pronoun\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"be\"\>", ",", "\<\"Verb\"\>", ",", "\<\"UseUp\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"be\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Follow\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"be\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Exist\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"be\"\>", ",", "\<\"Verb\"\>", ",", "\<\"HaveQuality\"\>"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"be\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Live\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"\<\"be\"\>", ",", "\<\"Verb\"\>", ",", "\<\"BeIdentical\"\>"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"be\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Constitute\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"be\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Lie\"\>"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\<\"be\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Equal\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"be\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Typify\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"be\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Cost\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"\<\"be\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Rest\"\>"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"\<\"be\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Happen\"\>"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Score\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Play\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", 
       ",", "\<\"TakeTheAir\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Locomote\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Obligate\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Accompany\"\>"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"GetOver\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Pace\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Associate\"\>"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"walk\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Behave\"\>"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"at\"\>", ",", "\<\"Noun\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"at\"\>", ",", "\<\"Preposition\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"the\"\>", ",", "\<\"Determiner\"\>"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"park\"\>", ",", "\<\"Noun\"\>", ",", "\<\"Arena\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"park\"\>", ",", "\<\"Noun\"\>", ",", "\<\"Gear\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"park\"\>", ",", "\<\"Noun\"\>", ",", "\<\"Parkland\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"park\"\>", ",", "\<\"Noun\"\>", ",", "\<\"Commons\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"park\"\>", ",", "\<\"Noun\"\>", ",", "\<\"Lot\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"park\"\>", ",", "\<\"Verb\"\>", ",", "\<\"Put\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"park\"\>", ",", "\<\"Verb\"\>", 
       ",", "\<\"Channelize\"\>"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8040019672807784`*^9, 3.80400199586661*^9}, 
   3.8040022178899994`*^9, 3.804002268663881*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"59675a9d-c621-401e-b147-f2d27b5a1da6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordStem", "[", "\"\<dogs\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.803980067629077*^9, 3.803980080407917*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"2958c7d2-5bb0-451a-b366-a0818e30c1c5"],

Cell[BoxData["\<\"dog\"\>"], "Output",
 CellChangeTimes->{3.803980081049203*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"13b35ef3-fc44-4f8c-b846-aa3c992faf6c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"WordStem", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<dogs\>\"", ",", "\"\<cats\>\"", ",", "\"\<crying\>\"", ",", 
    "\"\<running\>\"", ",", " ", "\"\<WALKS\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8039800923948946`*^9, 3.80398015156878*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"527052b1-2fc9-4386-a192-6a7c21fbbca6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\"\<dog\>\"", ",", "\"\<cat\>\"", ",", "\"\<cry\>\"", ",", "\"\<run\>\"", 
   ",", "\"\<WALK\>\""}], "}"}]], "Input",
 CellChangeTimes->{3.8039804244377737`*^9, 3.8039805008406935`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"f7c4b031-0201-4219-8680-ce0bfbb32e8c"],

Cell["WordStem uses the Porter stemming algorithm:", "Text",
 CellChangeTimes->{{3.8039805117299705`*^9, 
  3.803980525201082*^9}},ExpressionUUID->"6db2b173-2c1b-43f0-a06f-\
4e338565fd77"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordStem", "[", 
  RowBox[{
  "TextWords", "[", 
   "\"\<A Pi microscope is a laser scanning fluorescence microscope with an \
improved axial resolution.\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.803980440004024*^9, 3.803980443904827*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"10ff65b2-b338-4a67-a89f-0b4b8ba73463"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"A\"\>", ",", "\<\"Pi\"\>", ",", "\<\"microscop\"\>", 
   ",", "\<\"is\"\>", ",", "\<\"a\"\>", ",", "\<\"laser\"\>", 
   ",", "\<\"scan\"\>", ",", "\<\"fluoresc\"\>", ",", "\<\"microscop\"\>", 
   ",", "\<\"with\"\>", ",", "\<\"an\"\>", ",", "\<\"improv\"\>", 
   ",", "\<\"axial\"\>", ",", "\<\"resolut\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.803980445629202*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"ee7fb915-029f-43e0-9c5b-ac4a6ceef7bf"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stopwords", "Section",
 CellChangeTimes->{{3.803981401248867*^9, 3.8039814091433516`*^9}, 
   3.803981474735753*^9},ExpressionUUID->"032e7c86-8af2-4700-a22c-\
459a5a1a6d28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordList", "[", "\"\<Stopwords\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8039814127423162`*^9, 3.8039814157124043`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"982b0254-48bd-49ef-848e-5ab802c7c4b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>", ",", "\<\"2\"\>", ",", "\<\"3\"\>", 
   ",", "\<\"4\"\>", ",", "\<\"5\"\>", ",", "\<\"6\"\>", ",", "\<\"7\"\>", 
   ",", "\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"a\"\>", ",", "\<\"A\"\>", 
   ",", "\<\"about\"\>", ",", "\<\"above\"\>", ",", "\<\"across\"\>", 
   ",", "\<\"after\"\>", ",", "\<\"again\"\>", ",", "\<\"against\"\>", 
   ",", "\<\"all\"\>", ",", "\<\"almost\"\>", ",", "\<\"alone\"\>", 
   ",", "\<\"along\"\>", ",", "\<\"already\"\>", ",", "\<\"also\"\>", 
   ",", "\<\"although\"\>", ",", "\<\"always\"\>", ",", "\<\"am\"\>", 
   ",", "\<\"among\"\>", ",", "\<\"an\"\>", ",", "\<\"and\"\>", 
   ",", "\<\"another\"\>", ",", "\<\"any\"\>", ",", "\<\"anyone\"\>", 
   ",", "\<\"anything\"\>", ",", "\<\"anywhere\"\>", ",", "\<\"are\"\>", 
   ",", "\<\"aren't\"\>", ",", "\<\"around\"\>", ",", "\<\"as\"\>", 
   ",", "\<\"at\"\>", ",", "\<\"b\"\>", ",", "\<\"B\"\>", ",", "\<\"back\"\>",
    ",", "\<\"be\"\>", ",", "\<\"became\"\>", ",", "\<\"because\"\>", 
   ",", "\<\"become\"\>", ",", "\<\"becomes\"\>", ",", "\<\"been\"\>", 
   ",", "\<\"before\"\>", ",", "\<\"behind\"\>", ",", "\<\"being\"\>", 
   ",", "\<\"below\"\>", ",", "\<\"between\"\>", ",", "\<\"both\"\>", 
   ",", "\<\"but\"\>", ",", "\<\"by\"\>", ",", "\<\"c\"\>", ",", "\<\"C\"\>", 
   ",", "\<\"can\"\>", ",", "\<\"cannot\"\>", ",", "\<\"can't\"\>", 
   ",", "\<\"could\"\>", ",", "\<\"couldn't\"\>", ",", "\<\"d\"\>", 
   ",", "\<\"D\"\>", ",", "\<\"did\"\>", ",", "\<\"didn't\"\>", 
   ",", "\<\"do\"\>", ",", "\<\"does\"\>", ",", "\<\"doesn't\"\>", 
   ",", "\<\"doing\"\>", ",", "\<\"done\"\>", ",", "\<\"don't\"\>", 
   ",", "\<\"down\"\>", ",", "\<\"during\"\>", ",", "\<\"e\"\>", 
   ",", "\<\"E\"\>", ",", "\<\"each\"\>", ",", "\<\"either\"\>", 
   ",", "\<\"enough\"\>", ",", "\<\"even\"\>", ",", "\<\"ever\"\>", 
   ",", "\<\"every\"\>", ",", "\<\"everyone\"\>", ",", "\<\"everything\"\>", 
   ",", "\<\"everywhere\"\>", ",", "\<\"f\"\>", ",", "\<\"F\"\>", 
   ",", "\<\"few\"\>", ",", "\<\"find\"\>", ",", "\<\"first\"\>", 
   ",", "\<\"for\"\>", ",", "\<\"four\"\>", ",", "\<\"from\"\>", 
   ",", "\<\"full\"\>", ",", "\<\"further\"\>", ",", "\<\"g\"\>", 
   ",", "\<\"G\"\>", ",", "\<\"get\"\>", ",", "\<\"give\"\>", 
   ",", "\<\"go\"\>", ",", "\<\"h\"\>", ",", "\<\"H\"\>", ",", "\<\"had\"\>", 
   ",", "\<\"hadn't\"\>", ",", "\<\"has\"\>", ",", "\<\"hasn't\"\>", 
   ",", "\<\"have\"\>", ",", "\<\"haven't\"\>", ",", "\<\"having\"\>", 
   ",", "\<\"he\"\>", ",", "\<\"he'd\"\>", ",", "\<\"he'll\"\>", 
   ",", "\<\"her\"\>", ",", "\<\"here\"\>", ",", "\<\"here's\"\>", 
   ",", "\<\"hers\"\>", ",", "\<\"herself\"\>", ",", "\<\"he's\"\>", 
   ",", "\<\"him\"\>", ",", "\<\"himself\"\>", ",", "\<\"his\"\>", 
   ",", "\<\"how\"\>", ",", "\<\"however\"\>", ",", "\<\"how's\"\>", 
   ",", "\<\"i\"\>", ",", "\<\"I\"\>", ",", "\<\"i'd\"\>", ",", "\<\"if\"\>", 
   ",", "\<\"i'll\"\>", ",", "\<\"i'm\"\>", ",", "\<\"in\"\>", 
   ",", "\<\"interest\"\>", ",", "\<\"into\"\>", ",", "\<\"is\"\>", 
   ",", "\<\"isn't\"\>", ",", "\<\"it\"\>", ",", "\<\"it's\"\>", 
   ",", "\<\"its\"\>", ",", "\<\"itself\"\>", ",", "\<\"i've\"\>", 
   ",", "\<\"j\"\>", ",", "\<\"J\"\>", ",", "\<\"k\"\>", ",", "\<\"K\"\>", 
   ",", "\<\"keep\"\>", ",", "\<\"l\"\>", ",", "\<\"L\"\>", 
   ",", "\<\"last\"\>", ",", "\<\"least\"\>", ",", "\<\"less\"\>", 
   ",", "\<\"let's\"\>", ",", "\<\"m\"\>", ",", "\<\"M\"\>", 
   ",", "\<\"made\"\>", ",", "\<\"many\"\>", ",", "\<\"may\"\>", 
   ",", "\<\"me\"\>", ",", "\<\"might\"\>", ",", "\<\"more\"\>", 
   ",", "\<\"most\"\>", ",", "\<\"mostly\"\>", ",", "\<\"much\"\>", 
   ",", "\<\"must\"\>", ",", "\<\"mustn't\"\>", ",", "\<\"my\"\>", 
   ",", "\<\"myself\"\>", ",", "\<\"n\"\>", ",", "\<\"N\"\>", 
   ",", "\<\"never\"\>", ",", "\<\"next\"\>", ",", "\<\"no\"\>", 
   ",", "\<\"nobody\"\>", ",", "\<\"noone\"\>", ",", "\<\"nor\"\>", 
   ",", "\<\"not\"\>", ",", "\<\"nothing\"\>", ",", "\<\"now\"\>", 
   ",", "\<\"nowhere\"\>", ",", "\<\"o\"\>", ",", "\<\"O\"\>", 
   ",", "\<\"of\"\>", ",", "\<\"off\"\>", ",", "\<\"often\"\>", 
   ",", "\<\"on\"\>", ",", "\<\"once\"\>", ",", "\<\"one\"\>", 
   ",", "\<\"only\"\>", ",", "\<\"or\"\>", ",", "\<\"other\"\>", 
   ",", "\<\"others\"\>", ",", "\<\"ought\"\>", ",", "\<\"our\"\>", 
   ",", "\<\"ours\"\>", ",", "\<\"ourselves\"\>", ",", "\<\"out\"\>", 
   ",", "\<\"over\"\>", ",", "\<\"own\"\>", ",", "\<\"p\"\>", 
   ",", "\<\"P\"\>", ",", "\<\"part\"\>", ",", "\<\"per\"\>", 
   ",", "\<\"perhaps\"\>", ",", "\<\"put\"\>", ",", "\<\"q\"\>", 
   ",", "\<\"Q\"\>", ",", "\<\"r\"\>", ",", "\<\"R\"\>", 
   ",", "\<\"rather\"\>", ",", "\<\"s\"\>", ",", "\<\"S\"\>", 
   ",", "\<\"same\"\>", ",", "\<\"see\"\>", ",", "\<\"seem\"\>", 
   ",", "\<\"seemed\"\>", ",", "\<\"seeming\"\>", ",", "\<\"seems\"\>", 
   ",", "\<\"several\"\>", ",", "\<\"shan't\"\>", ",", "\<\"she\"\>", 
   ",", "\<\"she'd\"\>", ",", "\<\"she'll\"\>", ",", "\<\"she's\"\>", 
   ",", "\<\"should\"\>", ",", "\<\"shouldn't\"\>", ",", "\<\"show\"\>", 
   ",", "\<\"side\"\>", ",", "\<\"since\"\>", ",", "\<\"so\"\>", 
   ",", "\<\"some\"\>", ",", "\<\"someone\"\>", ",", "\<\"something\"\>", 
   ",", "\<\"somewhere\"\>", ",", "\<\"still\"\>", ",", "\<\"such\"\>", 
   ",", "\<\"t\"\>", ",", "\<\"T\"\>", ",", "\<\"take\"\>", 
   ",", "\<\"than\"\>", ",", "\<\"that\"\>", ",", "\<\"that's\"\>", 
   ",", "\<\"the\"\>", ",", "\<\"their\"\>", ",", "\<\"theirs\"\>", 
   ",", "\<\"them\"\>", ",", "\<\"themselves\"\>", ",", "\<\"then\"\>", 
   ",", "\<\"there\"\>", ",", "\<\"therefore\"\>", ",", "\<\"there's\"\>", 
   ",", "\<\"these\"\>", ",", "\<\"they\"\>", ",", "\<\"they'd\"\>", 
   ",", "\<\"they'll\"\>", ",", "\<\"they're\"\>", ",", "\<\"they've\"\>", 
   ",", "\<\"this\"\>", ",", "\<\"those\"\>", ",", "\<\"though\"\>", 
   ",", "\<\"three\"\>", ",", "\<\"through\"\>", ",", "\<\"thus\"\>", 
   ",", "\<\"to\"\>", ",", "\<\"together\"\>", ",", "\<\"too\"\>", 
   ",", "\<\"toward\"\>", ",", "\<\"two\"\>", ",", "\<\"u\"\>", 
   ",", "\<\"U\"\>", ",", "\<\"under\"\>", ",", "\<\"until\"\>", 
   ",", "\<\"up\"\>", ",", "\<\"upon\"\>", ",", "\<\"us\"\>", 
   ",", "\<\"v\"\>", ",", "\<\"V\"\>", ",", "\<\"very\"\>", ",", "\<\"w\"\>", 
   ",", "\<\"W\"\>", ",", "\<\"was\"\>", ",", "\<\"wasn't\"\>", 
   ",", "\<\"we\"\>", ",", "\<\"we'd\"\>", ",", "\<\"we'll\"\>", 
   ",", "\<\"well\"\>", ",", "\<\"we're\"\>", ",", "\<\"were\"\>", 
   ",", "\<\"weren't\"\>", ",", "\<\"we've\"\>", ",", "\<\"what\"\>", 
   ",", "\<\"what's\"\>", ",", "\<\"when\"\>", ",", "\<\"when's\"\>", 
   ",", "\<\"where\"\>", ",", "\<\"where's\"\>", ",", "\<\"whether\"\>", 
   ",", "\<\"which\"\>", ",", "\<\"while\"\>", ",", "\<\"who\"\>", 
   ",", "\<\"whole\"\>", ",", "\<\"whom\"\>", ",", "\<\"who's\"\>", 
   ",", "\<\"whose\"\>", ",", "\<\"why\"\>", ",", "\<\"why's\"\>", 
   ",", "\<\"will\"\>", ",", "\<\"with\"\>", ",", "\<\"within\"\>", 
   ",", "\<\"without\"\>", ",", "\<\"won't\"\>", ",", "\<\"would\"\>", 
   ",", "\<\"wouldn't\"\>", ",", "\<\"x\"\>", ",", "\<\"X\"\>", 
   ",", "\<\"y\"\>", ",", "\<\"Y\"\>", ",", "\<\"yet\"\>", ",", "\<\"you\"\>",
    ",", "\<\"you'd\"\>", ",", "\<\"you'll\"\>", ",", "\<\"your\"\>", 
   ",", "\<\"you're\"\>", ",", "\<\"yours\"\>", ",", "\<\"yourself\"\>", 
   ",", "\<\"yourselves\"\>", ",", "\<\"you've\"\>", ",", "\<\"z\"\>", 
   ",", "\<\"Z\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8039814191737547`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"55c0feef-de82-49e4-b9b6-09e5e0098e28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteStopwords", "[", 
  "\"\<The blue ball had rolled under the table.\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8039815604986024`*^9, 3.8039815605145617`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"3baaa207-3757-4d34-89e6-1299c94afffe"],

Cell[BoxData["\<\" blue ball  rolled   table.\"\>"], "Output",
 CellChangeTimes->{3.803981586257086*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"a81c4f59-b2a2-4bdb-9a26-48ee14315237"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteStopwords", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<The\>\"", ",", "\"\<apple\>\"", ",", "\"\<on\>\"", ",", "\"\<the\>\"",
     ",", "\"\<table\>\"", ",", "\"\<was\>\"", ",", "\"\<red\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8039815938120947`*^9, 3.8039816108542233`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"69fdcf6b-fd34-4fa9-837b-98cdcb905447"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"apple\"\>", ",", "\<\"table\"\>", ",", "\<\"red\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.803981595338575*^9, 3.8039816130403743`*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"b9bcd958-6ccb-4477-b769-140fe6655d1f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Named-Entity Recognition (NER)", "Section",
 CellChangeTimes->{{3.8039840108509936`*^9, 
  3.803984019214838*^9}},ExpressionUUID->"31bb901b-dc2c-4060-9828-\
f1ca876f5bd9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextContents", "[", 
  "\"\<The flag of Italy is green, white and red. Since 1861, the capital is \
Rome, which also serves as the capital of the Lazio region. With 2,872,800 \
residents in 1,285 km2 (496.1 sq mi)\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.803984037134424*^9, 3.803984037149351*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"7cb1c508-e6c9-4293-80ad-106fafb73125"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "String" -> "Italy", "Type" -> "Country", "Position" -> {13, 17}, 
        "Probability" -> 0.8843892216682434, "HighlightedSnippet" -> 
        Row[{"The flag of ", 
           Highlighted["Italy"], " is green, white and red."}]], 
       Association[
       "String" -> "green", "Type" -> "Color", "Position" -> {22, 26}, 
        "Probability" -> 0.9986547231674194, "HighlightedSnippet" -> 
        Row[{"The flag of Italy is ", 
           Highlighted["green"], ", white and red."}]], 
       Association[
       "String" -> "white", "Type" -> "Color", "Position" -> {29, 33}, 
        "Probability" -> 0.9669500589370728, "HighlightedSnippet" -> 
        Row[{"of Italy is green, ", 
           Highlighted["white"], " and red. Since 1861,"}]], 
       Association[
       "String" -> "red", "Type" -> "Color", "Position" -> {39, 41}, 
        "Probability" -> 0.972480833530426, "HighlightedSnippet" -> 
        Row[{"is green, white and ", 
           Highlighted["red"], ". Since 1861, the"}]], 
       Association[
       "String" -> "1861", "Type" -> "Date", "Position" -> {50, 53}, 
        "Probability" -> 0.7924554944038391, "HighlightedSnippet" -> 
        Row[{"Since ", 
           Highlighted["1861"], ", the capital is"}]], 
       Association[
       "String" -> "Rome", "Type" -> "AdministrativeDivision", 
        "Position" -> {71, 74}, "Probability" -> 0.8627800941467285, 
        "HighlightedSnippet" -> Row[{"1861, the capital is ", 
           Highlighted["Rome"], ", which also serves"}]], 
       Association[
       "String" -> "Rome", "Type" -> "City", "Position" -> {71, 74}, 
        "Probability" -> 0.8834026455879211, "HighlightedSnippet" -> 
        Row[{"1861, the capital is ", 
           Highlighted["Rome"], ", which also serves"}]], 
       Association[
       "String" -> "Lazio", "Type" -> "AdministrativeDivision", 
        "Position" -> {117, 121}, "Probability" -> 0.9303327798843384, 
        "HighlightedSnippet" -> Row[{"the capital of the ", 
           Highlighted["Lazio"], " region. With"}]], 
       Association[
       "String" -> "1,285 km2", "Type" -> "Quantity", 
        "Position" -> {159, 167}, "Probability" -> 0.9, "HighlightedSnippet" -> 
        Row[{"With 2,872,800 residents in ", 
           Highlighted["1,285 km2"], " (496.1 sq mi)"}]], 
       Association[
       "String" -> "496.1 sq mi", "Type" -> "Quantity", 
        "Position" -> {170, 180}, "Probability" -> 0.8, "HighlightedSnippet" -> 
        Row[{"With 2,872,800 residents in 1,285 km2 (", 
           Highlighted["496.1 sq mi"], ")"}]]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "String"} -> 1, {All, "Type"} -> 
        1, {All, "Position"} -> 1, {All, "Probability"} -> 
        1, {All, "HighlightedSnippet"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "String" -> TypeSystem`PackageScope`AtomShape[86.4], "Type" -> 
            TypeSystem`PackageScope`AtomShape[198.], "Position" -> 
            TypeSystem`PackageScope`UnknownShape[False], "Probability" -> 
            TypeSystem`PackageScope`AtomShape[60], "HighlightedSnippet" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 5, {All}]], 10, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "String", "Type", "Position", "Probability", "HighlightedSnippet"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "AdministrativeDivision", "City", "Color", "Country", "Date", 
           "Quantity"]], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Atom[Real], TypeSystem`AnyType}], 10], "Meta" -> 
     Association["ID" -> 254382529453972], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "String"} -> 1, {All, "Type"} -> 
        1, {All, "Position"} -> 1, {All, "Probability"} -> 
        1, {All, "HighlightedSnippet"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "String" -> TypeSystem`PackageScope`AtomShape[86.4], "Type" -> 
            TypeSystem`PackageScope`AtomShape[198.], "Position" -> 
            TypeSystem`PackageScope`UnknownShape[False], "Probability" -> 
            TypeSystem`PackageScope`AtomShape[60], "HighlightedSnippet" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 5, {All}]], 10, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "String", "Type", "Position", "Probability", "HighlightedSnippet"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "AdministrativeDivision", "City", "Color", "Country", "Date", 
           "Quantity"]], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Atom[Real], TypeSystem`AnyType}], 10], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 
     5, "DataRowCount" -> 10, "DataColumnCount" -> 5, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["String", 
                  Style[
                  "String", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "String"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{All, "String"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Type", 
                  Style[
                  "Type", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Type"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{All, "Type"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Position", 
                  Style[
                  "Position", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Position"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{All, "Position"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Probability", 
                  Style[
                  "Probability", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Probability"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{All, "Probability"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HighlightedSnippet", 
                  Style[
                  "HighlightedSnippet", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "HighlightedSnippet"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{
                All, "HighlightedSnippet"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Italy", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{1, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Country", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{1, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{198., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{13, 17}, ShowStringCharacters -> False], 
                  Style[
                   Style[{13, 17}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["Position"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{1, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.884389"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{1, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"The flag of ", 
                 Highlighted["Italy"], " is green, white and red."}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{1, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["green", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{2, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{2, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{198., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{22, 26}, ShowStringCharacters -> False], 
                  Style[
                   Style[{22, 26}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["Position"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{2, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.998655"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{2, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"The flag of Italy is ", 
                 Highlighted["green"], ", white and red."}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{2, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{3, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{3, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{198., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{29, 33}, ShowStringCharacters -> False], 
                  Style[
                   Style[{29, 33}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                   Key["Position"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{3, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.96695"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{3, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"of Italy is green, ", 
                 Highlighted["white"], " and red. Since 1861,"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{3, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{4, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{4, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{198., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{39, 41}, ShowStringCharacters -> False], 
                  Style[
                   Style[{39, 41}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                   Key["Position"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{4, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.972481"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{4, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"is green, white and ", 
                 Highlighted["red"], ". Since 1861, the"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{4, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1861", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{5, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Date", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{5, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{198., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{50, 53}, ShowStringCharacters -> False], 
                  Style[
                   Style[{50, 53}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                   Key["Position"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{5, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.792455"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{5, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"Since ", 
                 Highlighted["1861"], ", the capital is"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{5, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Rome", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{6, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["AdministrativeDivision", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{6, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{198., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{71, 74}, ShowStringCharacters -> False], 
                  Style[
                   Style[{71, 74}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                   Key["Position"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{6, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.86278"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{6, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"1861, the capital is ", 
                 Highlighted["Rome"], ", which also serves"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{6, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Rome", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{7, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["City", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{7, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{198., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{71, 74}, ShowStringCharacters -> False], 
                  Style[
                   Style[{71, 74}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                   Key["Position"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{7, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.883403"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{7, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"1861, the capital is ", 
                 Highlighted["Rome"], ", which also serves"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{7, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Lazio", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{8, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["AdministrativeDivision", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{8, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{198., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{117, 121}, ShowStringCharacters -> False], 
                  Style[
                   Style[{117, 121}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                   Key["Position"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{8, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.930333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{8, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"the capital of the ", 
                 Highlighted["Lazio"], " region. With"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{8, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1,285 km2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{9, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Quantity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{9, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{198., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{159, 167}, ShowStringCharacters -> False], 
                  Style[
                   Style[{159, 167}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                   Key["Position"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{9, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{9, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"With 2,872,800 residents in ", 
                 Highlighted["1,285 km2"], " (496.1 sq mi)"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{9, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["496.1 sq mi", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{10, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Quantity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{10, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{198., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{170, 180}, ShowStringCharacters -> False], 
                  Style[
                   Style[{170, 180}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                   Key["Position"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{10, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{10, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"With 2,872,800 residents in 1,285 km2 (", 
                 Highlighted["496.1 sq mi"], ")"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "03cd6b8e-3a44-4110-9b5c-c6231426e835"][{10, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{805., {207.15, 212.85}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{805., {207.15, 212.85}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8039840843007345`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"12e8939d-ac3b-4451-8ab7-409fe32ee52b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TextCases", "[", 
  RowBox[{
  "\"\<NYC, Los Angeles, and Chicago are the largest cities in the United \
States of America in 2018.\>\"", ",", "\"\<City\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.803984433370759*^9, 3.8039844334156685`*^9}, {
  3.8039998797466197`*^9, 3.803999880166501*^9}, {3.8040017173521194`*^9, 
  3.8040017179445605`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"1414685b-c2ee-43e3-9ae8-b4516d960532"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"NYC\"\>", ",", "\<\"Los Angeles\"\>", ",", "\<\"Chicago\"\>"}],
   "}"}]], "Output",
 CellChangeTimes->{3.803984434702198*^9, 3.8039998812321744`*^9, 
  3.804001719085492*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"cd5f8e39-8611-4f32-92d8-3303b90c3c7c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Running Python in Mathematica", "Section",
 CellChangeTimes->{{3.8032901721421127`*^9, 
  3.803290182921155*^9}},ExpressionUUID->"f3da7481-1937-41f6-941f-\
d8b7a27d1175"],

Cell[CellGroupData[{

Cell["Starting session. Running external files and functions", "Subsubsection",
 CellChangeTimes->{{3.8040027993242755`*^9, 
  3.8040028247274237`*^9}},ExpressionUUID->"b0daa267-6431-4a9b-a29c-\
269ddeb68529"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"session", " ", "=", " ", 
  RowBox[{"StartExternalSession", "[", "\"\<Python\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8032904339716816`*^9, 3.803290449012799*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b006f2d8-0575-4b41-81d5-249ad03e9c1d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ExternalSessionObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               Hue[0.5766283524904214, 0.6682027649769585, 0.651], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{58, 120}, {
                 60, 120}, {62, 118}, {62, 115}, {62, 112}, {60, 110}, {58, 
                 110}, {55, 110}, {53, 112}, {53, 115}, {53, 118}, {55, 
                 120}, {58, 120}}, {{72, 128}, {44, 128}, {46, 116}, {46, 
                 116}, {46, 104}, {73, 104}, {73, 100}, {36, 100}, {36, 
                 100}, {18, 102}, {18, 74}, {18, 45}, {33, 46}, {33, 46}, {43,
                  46}, {43, 59}, {43, 59}, {42, 75}, {58, 75}, {85, 75}, {85, 
                 75}, {99, 75}, {99, 89}, {99, 114}, {99, 114}, {102, 128}, {
                 72, 128}}}]}, {
               Hue[0.1164, 0.745, 0.99], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{88, 27}, {85,
                  27}, {83, 29}, {83, 32}, {83, 34}, {85, 37}, {88, 37}, {91, 
                 37}, {93, 34}, {93, 32}, {93, 29}, {91, 27}, {88, 27}}, {{73,
                  18}, {101, 18}, {99, 31}, {99, 31}, {99, 43}, {73, 43}, {73,
                  47}, {110, 47}, {110, 47}, {128, 45}, {128, 73}, {128, 
                 102}, {112, 101}, {112, 101}, {103, 101}, {103, 87}, {103, 
                 87}, {104, 72}, {88, 72}, {61, 72}, {61, 72}, {46, 72}, {46, 
                 57}, {46, 33}, {46, 33}, {44, 18}, {73, 18}}}]}}, {
             ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
              ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"3.7.3\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"dde6d2c1-ba4b-490a-ac3e-1dff1b875683\"", "SummaryItem"]}],
                "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               Hue[0.5766283524904214, 0.6682027649769585, 0.651], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{58, 120}, {
                 60, 120}, {62, 118}, {62, 115}, {62, 112}, {60, 110}, {58, 
                 110}, {55, 110}, {53, 112}, {53, 115}, {53, 118}, {55, 
                 120}, {58, 120}}, {{72, 128}, {44, 128}, {46, 116}, {46, 
                 116}, {46, 104}, {73, 104}, {73, 100}, {36, 100}, {36, 
                 100}, {18, 102}, {18, 74}, {18, 45}, {33, 46}, {33, 46}, {43,
                  46}, {43, 59}, {43, 59}, {42, 75}, {58, 75}, {85, 75}, {85, 
                 75}, {99, 75}, {99, 89}, {99, 114}, {99, 114}, {102, 128}, {
                 72, 128}}}]}, {
               Hue[0.1164, 0.745, 0.99], 
               EdgeForm[None], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{88, 27}, {85,
                  27}, {83, 29}, {83, 32}, {83, 34}, {85, 37}, {88, 37}, {91, 
                 37}, {93, 34}, {93, 32}, {93, 29}, {91, 27}, {88, 27}}, {{73,
                  18}, {101, 18}, {99, 31}, {99, 31}, {99, 43}, {73, 43}, {73,
                  47}, {110, 47}, {110, 47}, {128, 45}, {128, 73}, {128, 
                 102}, {112, 101}, {112, 101}, {103, 101}, {103, 87}, {103, 
                 87}, {104, 72}, {88, 72}, {61, 72}, {61, 72}, {46, 72}, {46, 
                 57}, {46, 33}, {46, 33}, {44, 18}, {73, 18}}}]}}, {
             ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
              ImageSize -> {Automatic, 
                Dynamic[3.5 CurrentValue["FontCapHeight"]]}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"3.7.3\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"dde6d2c1-ba4b-490a-ac3e-1dff1b875683\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683", "Exists"]], 
                    ExternalSessionObject[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683"]["Active"], False],
                     StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Executable: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"C:\\\\Python37\\\\python.exe\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"dde6d2c1-ba4b-490a-ac3e-1dff1b875683\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Process: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["ProcessObject", "SummaryHead"], "[", 
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"python.exe\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1820", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"python.exe\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1820", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parent PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13772", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"mualp\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"C:\\\\Python37\\\\python.exe\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Memory:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"25.890816`", "\"MB\"", "megabytes", 
                    "\"Megabytes\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Threads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Start Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"\"Fri 17 Jul 2020 15:24:28\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "7", ",", "17", ",", "15", ",", "24",
                     ",", "28.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "4.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"System Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.265625`5.", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.328125`5.", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Real Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.`5.", "\"s\"", "seconds", "\"Seconds\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   ProcessObject[
                    Association[
                    "ManagedProcess" -> True, "UID" -> 1, "PID" -> 1820, 
                    "PPID" -> 13772, "Program" -> "python.exe", "Path" -> 
                    "C:\\Python37\\python.exe", "User" -> "mualp", 
                    "StartTime" -> 
                    DateObject[{2020, 7, 17, 15, 24, 28.}, "Instant", 
                    "Gregorian", -4.]]], Selectable -> False, Editable -> 
                   False, SelectWithContents -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ReturnType: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Expression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"49866\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"ZMQ-1cd017c0-f215-48dd-a1dd-49b0c553e03c\"", 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"DestinationIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"IPAddress", "[", "\"127.0.0.1\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"DestinationPort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"49866\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourceIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"IPAddress", "[", "\"127.0.0.1\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourcePort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"49871\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   SocketObject["ZMQ-1cd017c0-f215-48dd-a1dd-49b0c553e03c"], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683", "Exists"]], 
                    ExternalSessionObject[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683"][
                    "EvaluationCount"], None], StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ProcessMemory: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683"]["ProcessMemory"], 
                    UpdateInterval -> 5], 
                    Missing["NotAvailable"]], StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ProcessThreads: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683"]["ProcessThreads"],
                     UpdateInterval -> 5], 
                    Missing["NotAvailable"]], StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"SessionTime: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683"]["SessionTime"], 
                    UpdateInterval -> 1], 
                    Missing["NotAvailable"]], StandardForm], 
                   TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ExternalSessionObject["dde6d2c1-ba4b-490a-ac3e-1dff1b875683"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.803290453966553*^9, 3.804000799172493*^9, 
  3.8040026691954107`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"fbcd7dc1-782d-4ed6-972b-79c038f4ac57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ExternalEvaluate", "[", 
   RowBox[{"session", ",", " ", 
    RowBox[{
    "File", "[", 
     "\"\<C:\\\\Users\\\\mualp\\\\Desktop\\\\Example_tokenizer.py\>\"", 
     "]"}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Example", " ", "external", " ", "file"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.8032904607933035`*^9, 3.8032905202177114`*^9}, {
  3.8040024009819393`*^9, 3.804002460067993*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"e9701ae4-5260-4273-b04f-9c93a97b3b4a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ExternalFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Arguments: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "\"str\"", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Command: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   StyleBox["\"token\"", "Program", LineBreakWithin -> False],
                    ImageSize -> {{1, 500}, Medium}], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"System: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Python\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Arguments: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "\"str\"", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Command: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  FrameBox[
                   PaneBox[
                    StyleBox[
                    "\"token\"", "Program", LineBreakWithin -> False], 
                    ImageSize -> {{1, 500}, Large}, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline], Background -> RGBColor[0.94, 0.94, 0.94], 
                   FrameStyle -> None, BaselinePosition -> Baseline], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"PythonFunction\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsModule: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsClass: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsFunction: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsMethod: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"IsCallable: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Session: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["ExternalSessionObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    Hue[0.5766283524904214, 0.6682027649769585, 0.651], 
                    EdgeForm[None], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{58, 
                    120}, {60, 120}, {62, 118}, {62, 115}, {62, 112}, {60, 
                    110}, {58, 110}, {55, 110}, {53, 112}, {53, 115}, {53, 
                    118}, {55, 120}, {58, 120}}, {{72, 128}, {44, 128}, {46, 
                    116}, {46, 116}, {46, 104}, {73, 104}, {73, 100}, {36, 
                    100}, {36, 100}, {18, 102}, {18, 74}, {18, 45}, {33, 
                    46}, {33, 46}, {43, 46}, {43, 59}, {43, 59}, {42, 75}, {
                    58, 75}, {85, 75}, {85, 75}, {99, 75}, {99, 89}, {99, 
                    114}, {99, 114}, {102, 128}, {72, 128}}}]}, {
                    Hue[0.1164, 0.745, 0.99], 
                    EdgeForm[None], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{88, 
                    27}, {85, 27}, {83, 29}, {83, 32}, {83, 34}, {85, 37}, {
                    88, 37}, {91, 37}, {93, 34}, {93, 32}, {93, 29}, {91, 
                    27}, {88, 27}}, {{73, 18}, {101, 18}, {99, 31}, {99, 
                    31}, {99, 43}, {73, 43}, {73, 47}, {110, 47}, {110, 47}, {
                    128, 45}, {128, 73}, {128, 102}, {112, 101}, {112, 101}, {
                    103, 101}, {103, 87}, {103, 87}, {104, 72}, {88, 72}, {61,
                     72}, {61, 72}, {46, 72}, {46, 57}, {46, 33}, {46, 33}, {
                    44, 18}, {73, 18}}}]}}, {ImageSize -> {Automatic, 
                    Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
                    ImageSize -> {Automatic, 
                    Dynamic[3.5 CurrentValue["FontCapHeight"]]}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"System: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Python\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"3.7.3\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"dde6d2c1-ba4b-490a-ac3e-1dff1b875683\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    Hue[0.5766283524904214, 0.6682027649769585, 0.651], 
                    EdgeForm[None], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{58, 
                    120}, {60, 120}, {62, 118}, {62, 115}, {62, 112}, {60, 
                    110}, {58, 110}, {55, 110}, {53, 112}, {53, 115}, {53, 
                    118}, {55, 120}, {58, 120}}, {{72, 128}, {44, 128}, {46, 
                    116}, {46, 116}, {46, 104}, {73, 104}, {73, 100}, {36, 
                    100}, {36, 100}, {18, 102}, {18, 74}, {18, 45}, {33, 
                    46}, {33, 46}, {43, 46}, {43, 59}, {43, 59}, {42, 75}, {
                    58, 75}, {85, 75}, {85, 75}, {99, 75}, {99, 89}, {99, 
                    114}, {99, 114}, {102, 128}, {72, 128}}}]}, {
                    Hue[0.1164, 0.745, 0.99], 
                    EdgeForm[None], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{88, 
                    27}, {85, 27}, {83, 29}, {83, 32}, {83, 34}, {85, 37}, {
                    88, 37}, {91, 37}, {93, 34}, {93, 32}, {93, 29}, {91, 
                    27}, {88, 27}}, {{73, 18}, {101, 18}, {99, 31}, {99, 
                    31}, {99, 43}, {73, 43}, {73, 47}, {110, 47}, {110, 47}, {
                    128, 45}, {128, 73}, {128, 102}, {112, 101}, {112, 101}, {
                    103, 101}, {103, 87}, {103, 87}, {104, 72}, {88, 72}, {61,
                     72}, {61, 72}, {46, 72}, {46, 57}, {46, 33}, {46, 33}, {
                    44, 18}, {73, 18}}}]}}, {ImageSize -> {Automatic, 
                    Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
                    ImageSize -> {Automatic, 
                    Dynamic[3.5 CurrentValue["FontCapHeight"]]}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"System: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Python\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"3.7.3\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"dde6d2c1-ba4b-490a-ac3e-1dff1b875683\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Active: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683", "Exists"]], 
                    ExternalSessionObject[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683"]["Active"], False],
                     StandardForm], TrackedSymbols :> {
                    ExternalEvaluate`Private`$Links}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Executable: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"C:\\\\Python37\\\\python.exe\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"dde6d2c1-ba4b-490a-ac3e-1dff1b875683\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Process: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["ProcessObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"python.exe\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1820", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Program: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"python.exe\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1820", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parent PID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13772", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"mualp\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Path: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"C:\\\\Python37\\\\python.exe\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Memory:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"56.123392`", "\"MB\"", "megabytes", 
                    "\"Megabytes\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Threads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["9", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Start Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    RowBox[{"\"Fri 17 Jul 2020 15:24:28\"", 
                    StyleBox[
                    RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                    StyleBox[
                    RowBox[{"-", "4.`"}], NumberMarks -> False, StripOnInput -> 
                    False]}], FontColor -> GrayLevel[0.5]]}], 
                    RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"2020", ",", "7", ",", "17", ",", "15", ",", "24",
                     ",", "28.`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", 
                    RowBox[{"-", "4.`"}]}], "]"}]}, "DateObject", Editable -> 
                    False], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"System Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.484375`5.", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"User Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.984375`5.", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Real Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.`5.", "\"s\"", "seconds", "\"Seconds\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ProcessObject[
                    Association[
                    "ManagedProcess" -> True, "UID" -> 1, "PID" -> 1820, 
                    "PPID" -> 13772, "Program" -> "python.exe", "Path" -> 
                    "C:\\Python37\\python.exe", "User" -> "mualp", 
                    "StartTime" -> DateObject[{2020, 7, 17, 15, 24, 28.}, 
                    "Instant", "Gregorian", -4.]]], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ReturnType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Expression\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"49866\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"ZMQ-1cd017c0-f215-48dd-a1dd-49b0c553e03c\"", 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"DestinationIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"IPAddress", "[", "\"127.0.0.1\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"DestinationPort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"49866\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourceIPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"IPAddress", "[", "\"127.0.0.1\"", "]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SourcePort: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"49871\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ZMQ_PAIR\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    SocketObject["ZMQ-1cd017c0-f215-48dd-a1dd-49b0c553e03c"], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"EvaluationCount: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683", "Exists"]], 
                    ExternalSessionObject[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683"][
                    "EvaluationCount"], None], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ProcessMemory: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683"]["ProcessMemory"], 
                    UpdateInterval -> 5], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ProcessThreads: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683"]["ProcessThreads"],
                     UpdateInterval -> 5], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"SessionTime: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    ExternalEvaluate`Private`getSessionOpts[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683", "Exists"]], 
                    Refresh[
                    ExternalSessionObject[
                    "dde6d2c1-ba4b-490a-ac3e-1dff1b875683"]["SessionTime"], 
                    UpdateInterval -> 1], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {ExternalEvaluate`Private`$Links}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   ExternalSessionObject[
                   "dde6d2c1-ba4b-490a-ac3e-1dff1b875683"], Selectable -> 
                   False, Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ExternalFunction[
   Association[
   "System" -> "Python", "Type" -> "PythonFunction", "Arguments" -> {"str"}, 
    "Command" -> "token", "IsModule" -> False, "IsClass" -> False, 
    "IsFunction" -> True, "IsMethod" -> False, "IsCallable" -> True, 
    "Session" -> 
    ExternalSessionObject["dde6d2c1-ba4b-490a-ac3e-1dff1b875683"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8032906867491503`*^9, 3.803290754954426*^9, {3.804000812284384*^9, 
   3.80400081300406*^9}, 3.8040026706615276`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"c4db218e-a751-40fb-9c63-a0d4da087fe7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ExternalEvaluate", "[", 
   RowBox[{"session", ",", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Command\>\"", "\[Rule]", "\"\<token\>\""}], ",", " ", 
      RowBox[{"\"\<Arguments\>\"", "\[Rule]", 
       RowBox[{"{", "\"\<This is a sentence\>\"", "}"}]}]}], "|>"}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Calls", " ", "function", " ", "from", " ", "example"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.8032905687363744`*^9, 3.803290609921294*^9}, {
  3.8032907081484137`*^9, 3.803290739605613*^9}, {3.8040024423918*^9, 
  3.80400245658727*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"35a6276a-11d8-4bb3-9b19-c244102faab9"],

Cell[BoxData["\<\"This is a sentence\"\>"], "Print",
 CellChangeTimes->{3.803290757209571*^9, 3.80329431181103*^9, 
  3.80400081327236*^9, 3.8040026748916574`*^9},
 CellLabel->
  "During evaluation of \
In[4]:=",ExpressionUUID->"071804fe-079b-4138-83ee-f72ac76e8245"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples (from \[OpenCurlyDoubleQuote]SpaCy Mathematica.nb\
\[CloseCurlyDoubleQuote])", "Subsubsection",
 CellChangeTimes->{{3.804002617711011*^9, 3.8040026346432343`*^9}, {
  3.80400277276828*^9, 3.804002779535186*^9}, {3.8040028348159494`*^9, 
  3.8040028421889687`*^9}, {3.8040030084963646`*^9, 
  3.804003014536396*^9}},ExpressionUUID->"0f8551c4-f2b2-440a-8444-\
78721491797c"],

Cell["Dependency Parser Function", "Text",
 CellChangeTimes->{{3.804002843987749*^9, 
  3.804002857415992*^9}},ExpressionUUID->"df1dcbcb-723a-4baa-a4ed-\
d5a45a65dc52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExternalEvaluate", "[", 
  RowBox[{
  "session", ",", "\[IndentingNewLine]", 
   "\"\<\nimport spacy\nnlp=spacy.load('en_core_web_sm')\ndoc = \
nlp(u'<>4Pi_microscope.txt<>')\n[token.dep_ for token in doc]\n\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.804002652162442*^9, 3.804002744987237*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"264e59d2-01b1-428d-9bdd-6ed24b3dfa7d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"dep\"\>", ",", "\<\"dep\"\>", ",", "\<\"ROOT\"\>", 
   ",", "\<\"dep\"\>", ",", "\<\"punct\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8040026947181387`*^9, 3.8040027068838434`*^9}, {
  3.8040027478774652`*^9, 3.804002756653083*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"7f86069b-0fb6-4415-9696-d570e3a35a7c"]
}, Open  ]],

Cell["Part of Speech Function", "Text",
 CellChangeTimes->{{3.80400288131805*^9, 
  3.8040028920998344`*^9}},ExpressionUUID->"906f150a-b5bf-4091-baf9-\
d655f61d9c32"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExternalEvaluate", "[", 
  RowBox[{
  "session", ",", "\[IndentingNewLine]", 
   "\"\<\nimport spacy\nnlp=spacy.load('en_core_web_sm')\ndoc = \
nlp(u'<>4Pi_microscope.txt<>')\n[(token.pos_, token.tag_) for token in doc]\n\
\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8040029051833496`*^9, 3.8040029125953217`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"a3236ac9-888b-41a0-b0da-c88a2cf7fac5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"X\"\>", ",", "\<\"XX\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"X\"\>", ",", "\<\"XX\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NUM\"\>", ",", "\<\"CD\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"X\"\>", ",", "\<\"XX\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"X\"\>", ",", "\<\"XX\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.804002896980896*^9, 3.8040029138708544`*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"d13dd753-5e36-460b-94fd-12b4a0028418"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1142.7, 581.6999999999999},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{"SlideshowSettings" -> {"Toolbar" -> True}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5b5f1c9e-297e-46eb-a0af-e64bcc346861"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PartOfSpeech_templates"->{
  Cell[158185, 2678, 315, 5, 28, "Input",ExpressionUUID->"7349c777-ea4c-4692-b18a-cc119b46e4a7",
   CellTags->"PartOfSpeech_templates"],
  Cell[158503, 2685, 479, 11, 43, "Output",ExpressionUUID->"3195f012-b132-429a-baec-0b535c219338",
   CellTags->"PartOfSpeech_templates"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PartOfSpeech_templates", 397508, 7807}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 326, 5, 67, "Section",ExpressionUUID->"95223eb5-12bc-4bb8-98d3-d08ca4772621"],
Cell[909, 29, 149110, 2454, 287, "Subsection",ExpressionUUID->"81e3b3f5-8a02-42f3-886d-98ad0e97e345"]
}, Closed]],
Cell[CellGroupData[{
Cell[150056, 2488, 471, 7, 53, "Section",ExpressionUUID->"e0e9b130-f64e-4987-82a9-ae377435b970"],
Cell[150530, 2497, 413, 7, 58, "Text",ExpressionUUID->"c9be2c22-e6f6-42a4-b151-980163033a0e"],
Cell[CellGroupData[{
Cell[150968, 2508, 716, 13, 28, "Input",ExpressionUUID->"7e63e924-baec-40ea-b75d-797e58c3c88a"],
Cell[151687, 2523, 739, 10, 52, "Output",ExpressionUUID->"9b6d63f6-9af3-49da-b9e3-9a38f66fd5c8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[152475, 2539, 296, 5, 53, "Section",ExpressionUUID->"9f5b97cc-0834-4473-b2c9-194a7c427277"],
Cell[152774, 2546, 384, 9, 81, "Text",ExpressionUUID->"c8b1c74f-a022-442d-ab47-70ef3c1c5d56"],
Cell[153161, 2557, 466, 11, 38, "Input",ExpressionUUID->"c2027662-52ec-482c-95f7-f0e4809e623a"],
Cell[153630, 2570, 215, 3, 40, "Text",ExpressionUUID->"199d92fb-416d-43e4-a8c2-b838552cf655"],
Cell[CellGroupData[{
Cell[153870, 2577, 480, 7, 28, "Input",ExpressionUUID->"96c8d8f0-2381-4bfe-b3a4-da14038584c4"],
Cell[154353, 2586, 659, 11, 32, "Output",ExpressionUUID->"9682b0e9-b219-4fc5-8f28-aae2950a98e3"]
}, Open  ]],
Cell[155027, 2600, 436, 7, 28, InheritFromParent,ExpressionUUID->"87240b78-9292-4b50-b0e3-6890df76ea3c"],
Cell[155466, 2609, 662, 10, 32, "Output",ExpressionUUID->"68f75c58-4518-46eb-b4ed-f1f5f37a876b"],
Cell[CellGroupData[{
Cell[156153, 2623, 192, 3, 45, "Subsubsection",ExpressionUUID->"5f1e05a9-e9e1-4302-9227-1c4de3119834"],
Cell[CellGroupData[{
Cell[156370, 2630, 269, 4, 28, "Input",ExpressionUUID->"cf0b6674-85fb-4e5d-a2a6-949198305214"],
Cell[156642, 2636, 540, 9, 71, "Output",ExpressionUUID->"34d5935f-5d03-40a6-a6bb-2f0780d5db66"]
}, Open  ]],
Cell[157197, 2648, 230, 4, 35, "Text",ExpressionUUID->"f44b2ca0-ae03-4b9c-81b1-89f1f1269058"],
Cell[157430, 2654, 277, 5, 28, InheritFromParent,ExpressionUUID->"8a57b070-6be6-485d-b2ad-573a33188160"],
Cell[157710, 2661, 244, 5, 32, "Output",ExpressionUUID->"8474b23f-4727-4844-83e2-d6fe1c5692da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157991, 2671, 169, 3, 45, "Subsubsection",ExpressionUUID->"286865da-3d74-4ae2-8c4d-78c8cf5dc4cc"],
Cell[CellGroupData[{
Cell[158185, 2678, 315, 5, 28, "Input",ExpressionUUID->"7349c777-ea4c-4692-b18a-cc119b46e4a7",
 CellTags->"PartOfSpeech_templates"],
Cell[158503, 2685, 479, 11, 43, "Output",ExpressionUUID->"3195f012-b132-429a-baec-0b535c219338",
 CellTags->"PartOfSpeech_templates"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159019, 2701, 298, 6, 28, "Input",ExpressionUUID->"244bdb0b-7546-48bb-879e-8de552228bff"],
Cell[159320, 2709, 8697, 198, 76, "Output",ExpressionUUID->"de6131c9-16d2-4c20-9604-7f5365f25830"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168054, 2912, 451, 8, 48, "Input",ExpressionUUID->"35579ed4-2802-4aaf-abc7-48bf20b8d3b0"],
Cell[168508, 2922, 621, 8, 90, "Output",ExpressionUUID->"4291e271-edb9-4591-872c-8b3834f48d42"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[169178, 2936, 165, 3, 45, "Subsubsection",ExpressionUUID->"e9a391a9-69f1-4338-9645-7bda14c9404d"],
Cell[CellGroupData[{
Cell[169368, 2943, 370, 7, 48, "Input",ExpressionUUID->"4d9db2c2-73bf-473d-970a-0d76d5d00271"],
Cell[169741, 2952, 44132, 1063, 252, "Output",ExpressionUUID->"aa3da772-8a38-4241-8bb4-552ef0a481d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213910, 4020, 369, 7, 48, "Input",ExpressionUUID->"57668be6-8f30-4a57-944b-d1776b21f151"],
Cell[214282, 4029, 19634, 474, 266, "Output",ExpressionUUID->"0f388dc9-b68e-4ab6-9dbf-b6f53c30c16e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233953, 4508, 499, 9, 48, "Input",ExpressionUUID->"7f386a5a-6d37-46a9-9bc3-8e2f2e2f94b6"],
Cell[234455, 4519, 539, 8, 71, "Output",ExpressionUUID->"55030a61-d5fb-4f9d-9312-ab9111f40f33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235031, 4532, 526, 10, 48, "Input",ExpressionUUID->"f0d3ad44-fb02-4333-a5c6-95c9dcbce22e"],
Cell[235560, 4544, 521, 9, 71, "Output",ExpressionUUID->"32dce26d-4e6f-4850-ba09-c339904422bd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[236130, 4559, 164, 3, 45, "Subsubsection",ExpressionUUID->"8f4d1c32-2705-4915-abf6-8bcb593e7932"],
Cell[CellGroupData[{
Cell[236319, 4566, 504, 10, 48, "Input",ExpressionUUID->"56c7e78a-5c63-4a43-bad8-cd35c2949c2b"],
Cell[236826, 4578, 664, 15, 32, "Output",ExpressionUUID->"ea9d266c-facb-469c-a89b-af5b584b3afa"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[237551, 4600, 160, 3, 53, "Section",ExpressionUUID->"8fd58f8b-2c55-44a4-a77f-d385794be158"],
Cell[CellGroupData[{
Cell[237736, 4607, 192, 3, 28, "Input",ExpressionUUID->"7145d4cc-f8b8-4a72-b50f-1e6a6faf9216"],
Cell[237931, 4612, 1274, 34, 52, "Output",ExpressionUUID->"45d6743f-dc86-4094-b692-db9d82d58c2f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239242, 4651, 540, 13, 28, "Input",ExpressionUUID->"f6c9b6b4-c98f-4468-a143-44055a23eef4"],
Cell[239785, 4666, 4601, 124, 148, "Output",ExpressionUUID->"59675a9d-c621-401e-b147-f2d27b5a1da6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244423, 4795, 216, 3, 28, "Input",ExpressionUUID->"2958c7d2-5bb0-451a-b366-a0818e30c1c5"],
Cell[244642, 4800, 158, 2, 32, "Output",ExpressionUUID->"13b35ef3-fc44-4f8c-b846-aa3c992faf6c"]
}, Open  ]],
Cell[244815, 4805, 359, 7, 28, "Input",ExpressionUUID->"527052b1-2fc9-4386-a192-6a7c21fbbca6"],
Cell[245177, 4814, 307, 6, 28, InheritFromParent,ExpressionUUID->"f7c4b031-0201-4219-8680-ce0bfbb32e8c"],
Cell[245487, 4822, 188, 3, 35, "Text",ExpressionUUID->"6db2b173-2c1b-43f0-a06f-4e338565fd77"],
Cell[CellGroupData[{
Cell[245700, 4829, 352, 7, 28, "Input",ExpressionUUID->"10ff65b2-b338-4a67-a89f-0b4b8ba73463"],
Cell[246055, 4838, 493, 8, 32, "Output",ExpressionUUID->"ee7fb915-029f-43e0-9c5b-ac4a6ceef7bf"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[246597, 4852, 179, 3, 53, "Section",ExpressionUUID->"032e7c86-8af2-4700-a22c-459a5a1a6d28"],
Cell[CellGroupData[{
Cell[246801, 4859, 226, 3, 28, "Input",ExpressionUUID->"982b0254-48bd-49ef-848e-5ab802c7c4b4"],
Cell[247030, 4864, 7538, 110, 301, "Output",ExpressionUUID->"55c0feef-de82-49e4-b9b6-09e5e0098e28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254605, 4979, 268, 4, 28, "Input",ExpressionUUID->"3baaa207-3757-4d34-89e6-1299c94afffe"],
Cell[254876, 4985, 183, 2, 32, "Output",ExpressionUUID->"a81c4f59-b2a2-4bdb-9a26-48ee14315237"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255096, 4992, 399, 8, 28, "Input",ExpressionUUID->"69fdcf6b-fd34-4fa9-837b-98cdcb905447"],
Cell[255498, 5002, 267, 5, 32, "Output",ExpressionUUID->"b9bcd958-6ccb-4477-b769-140fe6655d1f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[255814, 5013, 177, 3, 53, "Section",ExpressionUUID->"31bb901b-dc2c-4060-9828-f1ca876f5bd9"],
Cell[CellGroupData[{
Cell[256016, 5020, 405, 6, 67, "Input",ExpressionUUID->"7cb1c508-e6c9-4293-80ad-106fafb73125"],
Cell[256424, 5028, 61668, 1199, 439, "Output",ExpressionUUID->"12e8939d-ac3b-4451-8ab7-409fe32ee52b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318129, 6232, 452, 8, 28, "Input",ExpressionUUID->"1414685b-c2ee-43e3-9ae8-b4516d960532"],
Cell[318584, 6242, 298, 6, 32, "Output",ExpressionUUID->"cd5f8e39-8611-4f32-92d8-3303b90c3c7c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[318931, 6254, 176, 3, 53, "Section",ExpressionUUID->"f3da7481-1937-41f6-941f-d8b7a27d1175"],
Cell[CellGroupData[{
Cell[319132, 6261, 209, 3, 45, "Subsubsection",ExpressionUUID->"b0daa267-6431-4a9b-a29c-269ddeb68529"],
Cell[CellGroupData[{
Cell[319366, 6268, 271, 4, 28, "Input",ExpressionUUID->"b006f2d8-0575-4b41-81d5-249ad03e9c1d"],
Cell[319640, 6274, 32928, 636, 64, "Output",ExpressionUUID->"fbcd7dc1-782d-4ed6-972b-79c038f4ac57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352605, 6915, 518, 12, 28, "Input",ExpressionUUID->"e9701ae4-5260-4273-b04f-9c93a97b3b4a"],
Cell[353126, 6929, 40300, 763, 64, "Output",ExpressionUUID->"c4db218e-a751-40fb-9c63-a0d4da087fe7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393463, 7697, 687, 15, 48, "Input",ExpressionUUID->"35a6276a-11d8-4bb3-9b19-c244102faab9"],
Cell[394153, 7714, 267, 5, 22, "Print",ExpressionUUID->"071804fe-079b-4138-83ee-f72ac76e8245"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[394469, 7725, 387, 6, 45, "Subsubsection",ExpressionUUID->"0f8551c4-f2b2-440a-8444-78721491797c"],
Cell[394859, 7733, 168, 3, 35, "Text",ExpressionUUID->"df1dcbcb-723a-4baa-a4ed-d5a45a65dc52"],
Cell[CellGroupData[{
Cell[395052, 7740, 404, 8, 144, "Input",ExpressionUUID->"264e59d2-01b1-428d-9bdd-6ed24b3dfa7d"],
Cell[395459, 7750, 360, 6, 32, "Output",ExpressionUUID->"7f86069b-0fb6-4415-9696-d570e3a35a7c"]
}, Open  ]],
Cell[395834, 7759, 166, 3, 35, "Text",ExpressionUUID->"906f150a-b5bf-4091-baf9-d655f61d9c32"],
Cell[CellGroupData[{
Cell[396025, 7766, 421, 8, 144, "Input",ExpressionUUID->"a3236ac9-888b-41a0-b0da-c88a2cf7fac5"],
Cell[396449, 7776, 582, 14, 32, "Output",ExpressionUUID->"d13dd753-5e36-460b-94fd-12b4a0028418"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

